2021-04-09 23:08:42,189 [64387] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-09 23:08:42,190 [64387] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-09 23:08:42,190 [64387] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-09 23:08:42,197 [64387] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-09 23:08:42,199 [64387] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-09 23:08:42,202 [64387] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-09 23:08:43,019 [64387] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-09 23:08:43,021 [64387] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-09 23:08:43,021 [64387] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-09 23:08:43,032 [64387] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-09 23:08:43,033 [64387] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-09 23:08:43,033 [64387] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-09 23:09:19,353 [64387] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-04-09 23:09:20,090 [64387] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-04-09 23:09:21,215 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:09:21,215 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-09 23:09:21,215 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-09 23:09:21,216 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-09 23:09:21,217 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:17:51,537 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:17:51,537 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-09 23:17:51,538 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-09 23:17:51,539 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-09 23:17:51,540 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:18:04,449 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:18:04,449 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-09 23:18:04,450 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-09 23:18:04,450 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-09 23:18:04,451 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:18:05,163 [64387] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/typing.py
2021-04-09 23:18:05,323 [64387] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2021-04-09 23:18:05,503 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:18:05,503 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-09 23:18:05,504 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-09 23:18:05,504 [64387] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-09 23:18:05,504 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-09 23:18:05,505 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-09 23:18:05,505 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:18:06,334 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:18:06,335 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-09 23:18:06,335 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-09 23:18:06,342 [64387] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-09 23:18:06,343 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-09 23:18:06,343 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-09 23:18:06,346 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:18:06,788 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:18:06,789 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-09 23:18:06,789 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-09 23:18:06,791 [64387] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-09 23:18:06,791 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-09 23:18:06,792 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-09 23:18:06,792 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:18:08,174 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:18:08,174 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-09 23:18:08,175 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-09 23:18:08,175 [64387] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-09 23:18:08,175 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-09 23:18:08,176 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-09 23:18:08,178 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:18:15,944 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:18:15,945 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-09 23:18:15,945 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-09 23:18:15,946 [64387] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-09 23:18:15,946 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-09 23:18:15,947 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-09 23:18:15,947 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:18:24,582 [64387] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-09 23:18:24,623 [64387] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-09 23:18:24,633 [64387] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-09 23:18:24,633 [64387] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-09 23:18:24,664 [64387] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-09 23:18:24,665 [64387] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-09 23:18:24,666 [64387] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-09 23:18:24,669 [64387] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'jedi.inference.finder', 'pandas.io.formats.html', 'jedi.inference.star_args', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-09 23:19:10,459 [64387] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-09 23:19:10,516 [64387] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-09 23:19:11,946 [64387] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-09 23:19:11,949 [64387] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-09 23:22:23,788 [64387] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-04-09 23:22:23,789 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,789 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,789 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,790 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,790 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,790 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,790 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,790 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,790 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,790 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,791 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,791 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,791 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,792 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,792 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-09 23:22:23,792 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,792 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,793 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,793 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,793 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,793 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,793 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-09 23:22:23,794 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-09 23:22:23,794 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,794 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,794 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,794 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,794 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,794 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,795 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,795 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,795 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,795 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,795 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,795 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,796 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-09 23:22:23,796 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,796 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,796 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-09 23:22:23,796 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,796 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-09 23:22:23,796 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,797 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,797 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,797 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,797 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,797 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,797 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,798 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,798 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,798 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,798 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,799 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,799 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-09 23:22:23,799 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,800 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,800 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,800 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,800 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,801 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,801 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,801 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,801 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-09 23:22:23,802 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,802 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,802 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,802 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,802 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,802 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,802 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,803 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,803 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,803 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,803 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-09 23:22:23,803 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,803 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,803 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,804 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,804 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,804 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,804 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,804 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,804 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,804 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,805 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,805 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,805 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,805 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,806 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,806 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,806 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,806 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,807 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,807 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,807 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,807 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-09 23:22:23,807 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,808 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,809 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-09 23:22:23,809 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,809 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,809 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,809 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,810 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,810 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,810 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,810 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,810 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,811 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,811 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,811 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,811 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,811 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,812 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,812 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,812 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,812 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,812 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,813 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-09 23:22:23,813 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,813 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,813 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,814 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,814 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,814 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,814 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,815 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,815 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,815 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-09 23:22:23,815 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,815 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,816 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,816 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,816 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,816 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,817 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,817 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,817 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,817 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,817 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,818 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,818 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,818 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,818 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,819 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,819 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,819 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,819 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,819 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,819 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,820 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,820 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,820 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,820 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,820 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,821 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,821 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,821 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,821 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,822 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,822 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,822 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,823 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,823 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,823 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,823 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,824 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,824 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,824 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,824 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,824 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,825 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-09 23:22:23,825 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-09 23:22:23,825 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,825 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,826 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,826 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,826 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,826 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,826 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,827 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,827 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,827 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,827 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,827 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-09 23:22:23,828 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,828 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,828 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,828 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,828 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,828 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-09 23:22:23,829 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,829 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,829 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,829 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-09 23:22:23,830 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,830 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,830 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,831 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,831 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,831 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,831 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-09 23:22:23,832 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-09 23:22:23,832 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-09 23:22:23,832 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,832 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-09 23:22:23,833 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,833 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,833 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,833 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-09 23:22:23,834 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,834 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,834 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,834 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,834 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,835 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,835 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-09 23:22:23,835 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,835 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,835 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,836 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,836 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,836 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,836 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,836 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,836 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,837 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,837 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,837 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,838 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,838 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,839 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,839 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,839 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,840 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,840 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-09 23:22:23,840 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,840 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,840 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,841 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,841 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,841 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,841 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,841 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,842 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,842 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,842 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,842 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,842 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,842 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-09 23:22:23,842 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,843 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,843 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,843 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,843 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,843 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,843 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,843 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-09 23:22:23,844 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,844 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,844 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,844 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,844 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,845 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,845 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,845 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,846 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-09 23:22:23,846 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,846 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,846 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,847 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,847 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,847 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,847 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,847 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,848 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-09 23:22:23,848 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-09 23:22:23,848 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,848 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,848 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,848 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,849 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,849 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-09 23:22:23,849 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,849 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,849 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,849 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,849 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-09 23:22:23,850 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-09 23:22:23,850 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,850 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,850 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,850 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,850 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,850 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-09 23:22:23,851 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-09 23:22:23,851 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,852 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,852 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,852 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,852 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,852 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,853 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,853 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,853 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,853 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,854 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-09 23:22:23,854 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,854 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,854 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,854 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,854 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,855 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-09 23:22:23,855 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,855 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,855 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,855 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-09 23:22:23,856 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,856 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,856 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,856 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,856 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,857 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,857 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,857 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,857 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,857 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,858 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,858 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,858 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,858 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,859 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,859 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,860 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,860 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,860 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,860 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,860 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,861 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,861 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-09 23:22:23,861 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,861 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,862 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,862 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,862 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,862 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,862 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,863 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,863 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,863 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-09 23:22:23,863 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,864 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,864 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,864 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,864 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,864 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,865 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,865 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,865 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,865 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,866 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,866 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,866 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,866 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,866 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,867 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,867 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,867 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,867 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,868 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,868 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,868 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,868 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,869 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,869 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,869 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,869 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,870 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-09 23:22:23,870 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,870 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-09 23:22:23,870 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,870 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,871 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-09 23:22:23,871 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-09 23:22:23,871 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,871 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,871 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-09 23:22:23,872 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,872 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,872 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,872 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,873 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,873 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,873 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,873 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-09 23:22:23,873 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,873 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,874 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-09 23:22:23,874 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,874 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,874 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-09 23:22:23,874 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,874 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-09 23:22:23,874 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,875 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,875 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,875 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,875 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,876 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,876 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,876 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,876 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,876 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,877 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,877 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,877 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,877 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,878 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,878 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,878 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,878 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,879 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-09 23:22:23,879 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,879 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,879 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,879 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,879 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,880 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,881 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,882 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-09 23:22:23,882 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,882 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,882 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,882 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-09 23:22:23,882 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,882 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,883 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,883 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,883 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-09 23:22:23,883 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,884 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-09 23:22:23,884 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,884 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,884 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,885 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,885 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,885 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-09 23:22:23,885 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,885 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,885 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,886 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,886 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,886 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,886 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-09 23:22:23,886 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-09 23:22:23,886 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,887 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-09 23:22:23,888 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,888 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,888 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,888 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,888 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,888 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,888 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,889 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-09 23:22:23,889 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,889 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,889 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,890 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,890 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,890 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-09 23:22:23,890 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-09 23:22:23,891 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-09 23:22:23,891 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,891 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,892 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,892 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,893 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,893 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,893 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,893 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-09 23:22:23,894 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,894 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,894 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,895 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,895 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-09 23:22:23,895 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,895 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-09 23:22:23,896 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-09 23:22:23,896 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,896 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,896 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-09 23:22:23,896 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-09 23:22:23,897 [64387] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-09 23:22:23,897 [64387] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-09 23:23:54,628 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:23:54,629 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-09 23:23:54,629 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-09 23:23:54,630 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-09 23:23:54,631 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-09 23:23:54,637 [64387] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/seaborn/__init__.py
2021-04-09 23:23:55,636 [64387] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-09 23:23:55,636 [64387] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-09 23:23:55,637 [64387] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-09 23:23:55,637 [64387] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-09 23:23:55,638 [64387] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:20:45,585 [5629] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 01:20:45,586 [5629] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 01:20:45,586 [5629] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 01:20:45,588 [5629] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 01:20:45,589 [5629] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 01:20:45,589 [5629] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 01:20:46,113 [5629] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 01:20:46,113 [5629] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 01:20:46,113 [5629] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 01:20:46,116 [5629] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 01:20:46,116 [5629] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 01:20:46,116 [5629] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 01:21:06,268 [5629] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-10 01:21:06,269 [5629] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-10 01:21:06,274 [5629] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-10 01:21:06,274 [5629] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-10 01:21:06,276 [5629] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-10 01:21:06,276 [5629] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-10 01:21:06,277 [5629] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-10 01:21:06,277 [5629] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-10 01:21:12,639 [5629] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-10 01:21:12,674 [5629] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-10 01:21:12,857 [5629] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-10 01:21:12,863 [5629] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-10 01:21:19,944 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-04-10 01:21:20,021 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-04-10 01:21:21,200 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:21:21,201 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:21:21,201 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:21:21,201 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:21:21,201 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:21:21,279 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/typing.py
2021-04-10 01:21:21,291 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2021-04-10 01:21:25,970 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:21:25,971 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:21:25,971 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:21:25,971 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:21:25,971 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:21:26,304 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:21:26,305 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:21:26,305 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:21:26,305 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:21:26,305 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:21:26,448 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:21:26,448 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:21:26,449 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:21:26,449 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:21:26,449 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:21:26,968 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:21:26,968 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:21:26,968 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:21:26,969 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:21:26,969 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:22:33,744 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:22:33,745 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 01:22:33,745 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 01:22:33,745 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 01:22:33,745 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:22:37,687 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:22:37,688 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 01:22:37,688 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 01:22:37,688 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:22:37,688 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:22:37,977 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:22:37,978 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:22:37,978 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:22:37,978 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:22:37,978 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:22:38,152 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:22:38,152 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:22:38,152 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:22:38,153 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:22:38,153 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:22:38,477 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:22:38,477 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:22:38,477 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:22:38,477 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:22:38,477 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:22:39,292 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:22:39,293 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:22:39,293 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:22:39,293 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:22:39,293 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:22:57,158 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:22:57,158 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:22:57,158 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:22:57,159 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:22:57,159 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:25:38,387 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:25:38,388 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:25:38,388 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:25:38,388 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:25:38,388 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:25:38,652 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:25:38,653 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:25:38,653 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:25:38,653 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:25:38,653 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:25:40,346 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:25:40,346 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:25:40,346 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:25:40,346 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:25:40,347 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:25:42,256 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:25:42,256 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:25:42,257 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:25:42,257 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:25:42,257 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:25:43,008 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:25:43,009 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:25:43,009 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:25:43,009 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:25:43,009 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:20,418 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:20,419 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:20,419 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:20,419 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:20,419 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:20,505 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:20,505 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:20,505 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:20,505 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 01:26:20,505 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:21,208 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:21,208 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:21,208 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:21,208 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:21,208 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:21,735 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:21,736 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:21,736 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:21,736 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:21,736 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:21,821 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:21,821 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:21,821 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:21,821 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:21,822 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:22,847 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:22,847 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:22,847 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:22,847 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:22,847 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:24,631 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:24,631 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:24,631 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:24,631 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:24,632 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:25,327 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:25,327 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:25,327 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:25,327 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:25,327 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:26,632 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:26,632 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:26,632 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:26,633 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:26,633 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:28,383 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:28,383 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:28,383 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:28,383 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:28,384 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:38,354 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:38,354 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:38,354 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:38,355 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:38,355 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:38,927 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:38,928 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:38,928 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:38,928 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:38,928 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:39,014 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:39,015 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:39,015 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:39,015 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:39,015 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:40,334 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:40,335 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:40,335 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:40,335 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:40,335 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:41,759 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:41,759 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:41,759 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:41,759 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:41,760 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:43,639 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:43,640 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:43,640 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:43,640 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:43,640 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:46,847 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:46,847 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:46,847 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:46,847 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:46,847 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:47,538 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:47,539 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:47,539 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:47,539 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:47,539 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:48,196 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:48,196 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:48,196 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:48,196 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:48,196 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:48,383 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:48,383 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:48,384 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:48,384 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:48,384 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:49,042 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:49,042 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:49,042 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:49,042 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:49,042 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:49,212 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:49,213 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:49,213 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:49,213 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:49,213 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:49,572 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:49,573 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:49,573 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:49,573 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:49,573 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:26:50,534 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:26:50,534 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:26:50,534 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:26:50,534 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:26:50,535 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:27:07,013 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:27:07,013 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:27:07,014 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:27:07,014 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:27:07,014 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:27:09,648 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:27:09,649 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:27:09,649 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:27:09,649 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:27:09,649 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:27:19,462 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:27:19,462 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:27:19,462 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:27:19,463 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:27:19,463 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:27:21,768 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:27:21,768 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:27:21,769 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:27:21,769 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:27:21,769 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:27:22,089 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:27:22,089 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:27:22,090 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:27:22,090 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:27:22,090 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:32:12,720 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:32:12,722 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:32:12,722 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:32:12,723 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:32:12,723 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:32:12,781 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/frame.py
2021-04-10 01:32:12,819 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/__init__.py
2021-04-10 01:32:12,820 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/__init__.py
2021-04-10 01:32:12,936 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/generic.py
2021-04-10 01:32:13,016 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/base.py
2021-04-10 01:32:13,034 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/accessor.py
2021-04-10 01:32:13,086 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/indexing.py
2021-04-10 01:32:13,112 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/_typing.py
2021-04-10 01:32:13,139 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/groupby/__init__.py
2021-04-10 01:32:13,193 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/groupby/generic.py
2021-04-10 01:32:13,355 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/groupby/groupby.py
2021-04-10 01:33:56,981 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:33:56,982 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:33:56,982 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:33:56,983 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:33:56,983 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:33:57,894 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:33:57,894 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:33:57,894 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:33:57,894 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:33:57,895 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:34:00,602 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:34:00,602 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:34:00,602 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:34:00,603 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:34:00,603 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:34:03,992 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:34:03,992 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:34:03,992 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:34:03,993 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:34:03,993 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:34:05,500 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:34:05,500 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:34:05,500 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:34:05,501 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:34:05,501 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:34:07,404 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:34:07,404 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:34:07,404 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:34:07,404 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:34:07,405 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:35:05,252 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:35:05,252 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:35:05,252 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:35:05,253 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:35:05,253 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:35:05,304 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/series.py
2021-04-10 01:35:05,670 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/common.py
2021-04-10 01:35:05,679 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/_libs/__init__.py
2021-04-10 01:35:06,257 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/algorithms.py
2021-04-10 01:35:06,275 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/api.py
2021-04-10 01:35:41,772 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:35:41,772 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:35:41,773 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:35:41,773 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:35:41,773 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:35:42,126 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:35:42,126 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:35:42,127 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:35:42,128 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:35:42,128 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:35:55,108 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:35:55,108 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:35:55,108 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:35:55,108 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:35:55,108 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:35:57,401 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:35:57,401 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:35:57,401 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:35:57,401 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:35:57,402 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:36:04,889 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:36:04,889 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 01:36:04,889 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 01:36:04,890 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 01:36:04,890 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:36:32,755 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:36:32,755 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 01:36:32,755 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 01:36:32,756 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:36:32,756 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:36:32,764 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:36:32,764 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:36:32,764 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:36:32,765 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:36:32,765 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:36:42,210 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:36:42,210 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:36:42,210 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:36:42,211 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:36:42,211 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:36:42,218 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:36:42,219 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:36:42,219 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:36:42,220 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:36:42,220 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:36:44,626 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:36:44,626 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:36:44,626 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:36:44,627 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:36:44,627 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:36:47,825 [5629] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-04-10 01:36:47,826 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,826 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,826 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,827 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,828 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,829 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,830 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,831 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,832 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,833 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,834 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,835 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,836 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,837 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,838 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,839 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,840 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,841 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,842 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,843 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,844 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,845 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,846 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,847 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,848 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,849 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,850 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,851 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,852 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,853 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,854 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,855 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,856 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,857 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 01:36:47,858 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,859 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,860 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,861 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,862 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,863 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,864 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,865 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-10 01:36:47,866 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,867 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,867 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,867 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-10 01:36:47,867 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,867 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,867 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,867 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,868 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,869 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,870 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 01:36:47,871 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,872 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-10 01:36:47,873 [5629] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-10 01:37:21,473 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:37:21,473 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:37:21,474 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:37:21,474 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:37:21,474 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:37:24,518 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:37:24,518 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:37:24,519 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:37:24,519 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:37:24,519 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:37:25,918 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:37:25,918 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:37:25,918 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:37:25,918 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:37:25,919 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:37:26,982 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:37:26,982 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:37:26,982 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:37:26,982 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:37:26,982 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:37:28,433 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:37:28,434 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:37:28,434 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:37:28,434 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:37:28,434 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:37:30,541 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:37:30,542 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:37:30,542 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:37:30,542 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:37:30,542 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:37:41,509 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:37:41,509 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 01:37:41,510 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 01:37:41,511 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 01:37:41,511 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:41:45,784 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:41:45,786 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 01:41:45,786 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 01:41:45,786 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:41:45,787 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:41:47,198 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:41:47,199 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:41:47,199 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:41:47,199 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:41:47,199 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:41:47,775 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:41:47,776 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:41:47,776 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:41:47,776 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:41:47,776 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:04,670 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:04,672 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:04,672 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:04,672 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:04,673 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:05,596 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:05,596 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:05,597 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:05,597 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:05,597 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:06,635 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:06,636 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:06,636 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:06,636 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:06,636 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:30,157 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:30,157 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:30,157 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:30,158 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:30,158 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:30,820 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:30,820 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:30,820 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:30,821 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:30,821 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:45,308 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:45,308 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:45,308 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:45,309 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:45,309 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:49,803 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:49,803 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:49,803 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:49,803 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:49,804 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:49,808 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/seaborn/__init__.py
2021-04-10 01:43:50,159 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:50,159 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:50,167 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:50,168 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:50,168 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:50,447 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:50,447 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:50,448 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:50,448 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:50,448 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:50,560 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:43:50,560 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:43:50,560 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:43:50,561 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:43:50,561 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:43:53,732 [5629] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9b41991b70>
2021-04-10 01:43:53,735 [5629] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 01:43:53,735 [5629] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9b41991b70>
2021-04-10 01:43:53,735 [5629] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 01:44:50,240 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:44:50,240 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-10 01:44:50,241 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-10 01:44:50,241 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 01:44:50,241 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:44:56,073 [5629] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9b219ac240>
2021-04-10 01:44:56,075 [5629] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 01:44:56,075 [5629] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9b219ac240>
2021-04-10 01:44:56,075 [5629] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 01:45:20,106 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:20,107 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2021-04-10 01:45:20,107 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:2]
2021-04-10 01:45:20,108 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 01:45:20,108 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:24,937 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:24,937 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 01:45:24,937 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 01:45:24,938 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 01:45:24,938 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 01:45:24,938 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 01:45:24,939 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:24,965 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:24,965 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 01:45:24,966 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 01:45:24,966 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 01:45:24,966 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 01:45:24,966 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 01:45:24,967 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:25,858 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:25,858 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 01:45:25,858 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 01:45:25,858 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 01:45:25,858 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 01:45:25,859 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 01:45:25,859 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:27,344 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:27,345 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 01:45:27,345 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 01:45:27,345 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 01:45:27,345 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 01:45:27,345 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 01:45:27,345 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:28,057 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:28,057 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 01:45:28,057 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 01:45:28,057 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 01:45:28,058 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 01:45:28,058 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 01:45:28,058 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:30,783 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:30,783 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 01:45:30,783 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 01:45:30,784 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 01:45:30,784 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 01:45:30,784 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 01:45:30,785 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:51,889 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:51,889 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 01:45:51,889 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 01:45:51,890 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:45:51,890 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:45:57,272 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:45:57,272 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 01:45:57,272 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 01:45:57,273 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 01:45:57,273 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:46:08,289 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 01:46:08,289 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 01:46:08,290 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 01:46:08,290 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 01:46:08,290 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 01:46:12,460 [5629] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9b014c2668>
2021-04-10 01:46:12,462 [5629] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 01:46:12,462 [5629] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9b014c2668>
2021-04-10 01:46:12,462 [5629] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 01:47:35,665 [5629] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9af1230a58>
2021-04-10 01:47:35,667 [5629] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 01:47:35,667 [5629] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9af1230a58>
2021-04-10 01:47:35,667 [5629] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 02:09:44,225 [5629] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0.
2021-04-10 02:09:44,248 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,248 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,248 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,248 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,249 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,249 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,249 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,249 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,250 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,251 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,252 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,253 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,254 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,255 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,256 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,257 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,258 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-10 02:09:44,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-10 02:09:44,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-10 02:09:44,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-10 02:09:44,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-10 02:09:44,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-10 02:09:44,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 02:09:44,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-10 02:09:44,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-10 02:09:44,301 [5629] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-10 09:27:11,528 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:27:11,549 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 09:27:11,550 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 09:27:11,578 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:27:11,579 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:28:08,974 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:28:08,974 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 09:28:08,974 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 09:28:08,980 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 09:28:08,980 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:28:20,944 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:28:20,947 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 09:28:20,947 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:2]
2021-04-10 09:28:20,967 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 09:28:20,967 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:28:20,983 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:28:20,983 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 09:28:20,984 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 09:28:20,984 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:28:20,984 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:29:14,530 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:29:14,530 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:29:14,530 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:29:14,531 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:29:14,531 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:37:41,614 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:37:41,614 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-10 09:37:41,614 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-10 09:37:41,618 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 09:37:41,618 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:46:19,960 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:46:19,963 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-10 09:46:19,963 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-10 09:46:19,963 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:46:19,963 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:46:22,463 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:46:22,463 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:46:22,464 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:46:22,464 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:46:22,464 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:46:54,087 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:46:54,088 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:46:54,088 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:46:54,088 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:46:54,088 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:46:54,095 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/missingno/__init__.py
2021-04-10 09:46:54,145 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/missingno/missingno.py
2021-04-10 09:46:55,701 [5629] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
2021-04-10 09:46:55,702 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,703 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,703 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,703 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,703 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,704 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,704 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,704 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,704 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,704 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,704 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,705 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,706 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,706 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-10 09:46:55,706 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-10 09:46:55,706 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,706 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,706 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,706 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-10 09:46:55,707 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,708 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,709 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,710 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,711 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,712 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,712 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,712 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,712 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,712 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,712 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,713 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,713 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,713 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,713 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,714 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,714 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,714 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,715 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,715 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,715 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,715 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,715 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,715 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-10 09:46:55,716 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,717 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,717 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-10 09:46:55,717 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,717 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,717 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,718 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,718 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,718 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,718 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,718 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,718 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,718 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,719 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,720 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,721 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,722 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,722 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,722 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,722 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,722 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,722 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,722 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,723 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,723 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,723 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,723 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,723 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,723 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,723 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,724 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,725 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,725 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,725 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,725 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,725 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,725 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,726 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,726 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,726 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,726 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,726 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,726 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-10 09:46:55,726 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,727 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,728 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-10 09:46:55,729 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,730 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,731 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,732 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,733 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,734 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,735 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-10 09:46:55,735 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,735 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,735 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,736 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,736 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,736 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,736 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,737 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-10 09:46:55,738 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,739 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-10 09:46:55,740 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 09:46:55,740 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,740 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,740 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,740 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,741 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,741 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-10 09:46:55,741 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 09:46:55,741 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,741 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,741 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,742 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 09:46:55,743 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,744 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,745 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,746 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,746 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-10 09:46:55,746 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,746 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,746 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,747 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,747 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,747 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,747 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,747 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,748 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,749 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,750 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,751 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,752 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,753 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,754 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,755 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,755 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,755 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,755 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,756 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,756 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,756 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-10 09:46:55,756 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,757 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,758 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,759 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,760 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,761 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,762 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,763 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,763 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,763 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-10 09:46:55,763 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,763 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-10 09:46:55,763 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 09:46:55,764 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,765 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,766 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:46:55,767 [5629] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-10 09:48:27,258 [5629] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2021-04-10 09:48:27,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,259 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,260 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-10 09:48:27,261 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,262 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,263 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 09:48:27,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,264 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,265 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,266 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-10 09:48:27,267 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,268 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,269 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,270 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-10 09:48:27,271 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,272 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,273 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,274 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,275 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,276 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,277 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,278 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,279 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 09:48:27,280 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-10 09:48:27,281 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-10 09:48:27,282 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,283 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,284 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,285 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,286 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,287 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,288 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-10 09:48:27,289 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-10 09:48:27,290 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,291 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,292 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,293 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,294 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,295 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,296 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,297 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,298 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,299 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,300 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,301 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,302 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,303 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,304 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,305 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-10 09:48:27,306 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,307 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,308 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,309 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,310 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,311 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,312 [5629] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-10 09:48:27,888 [5629] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2021-04-10 09:48:27,888 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,888 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,888 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,888 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,888 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-10 09:48:27,889 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,890 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,891 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,892 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,893 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,894 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,895 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,896 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,897 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,898 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,899 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,899 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,899 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,899 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,899 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,899 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,899 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,900 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,901 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,902 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,902 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,902 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,902 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,902 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,902 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,903 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,904 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,905 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,906 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,907 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,908 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,909 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,910 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,911 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,912 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,913 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,914 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,915 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-10 09:48:27,916 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,917 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,918 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,919 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,920 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-10 09:48:27,921 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,922 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,923 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,924 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,925 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,926 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 09:48:27,927 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,928 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,929 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,930 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,931 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,932 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,933 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,934 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,935 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,936 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,937 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,938 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 09:48:27,938 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-10 09:48:27,938 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-10 09:48:27,938 [5629] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-10 09:48:50,060 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:48:50,060 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:48:50,060 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:48:50,061 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:48:50,061 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:48:50,680 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:48:50,680 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:48:50,681 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:48:50,681 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:48:50,681 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:48:52,242 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:48:52,243 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:48:52,243 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:48:52,243 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:48:52,243 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:48:52,759 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:48:52,760 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:48:52,760 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:48:52,762 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:48:52,762 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:48:57,414 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:48:57,415 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:48:57,415 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:48:57,415 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:48:57,415 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:49:12,323 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:49:12,323 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:49:12,323 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:49:12,323 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:49:12,324 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:49:33,506 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:49:33,507 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:49:33,507 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:49:33,507 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:49:33,507 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:51:08,951 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:51:08,953 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:51:08,953 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:51:08,953 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:51:08,953 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:51:09,242 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:51:09,242 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:51:09,242 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:51:09,243 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:51:09,243 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:51:09,520 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:51:09,520 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:51:09,521 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:51:09,521 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:51:09,521 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:51:09,674 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:51:09,675 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:51:09,675 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:51:09,675 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:51:09,676 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:51:12,559 [5629] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9520da75f8>
2021-04-10 09:51:12,559 [5629] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 09:51:12,560 [5629] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9520da75f8>
2021-04-10 09:51:12,560 [5629] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 09:54:32,747 [5629] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 09:54:32,753 [5629] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 09:54:32,755 [5629] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 09:54:32,763 [5629] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 09:54:32,765 [5629] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 09:54:32,766 [5629] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 09:54:42,667 [42676] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 09:54:42,668 [42676] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 09:54:42,668 [42676] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 09:54:42,670 [42676] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 09:54:42,671 [42676] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 09:54:42,671 [42676] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 09:54:43,205 [42676] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 09:54:43,207 [42676] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 09:54:43,207 [42676] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 09:54:43,209 [42676] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 09:54:43,210 [42676] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 09:54:43,210 [42676] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 09:55:55,830 [42676] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-10 09:55:55,831 [42676] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-10 09:55:55,835 [42676] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-10 09:55:55,835 [42676] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-10 09:55:55,837 [42676] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-10 09:55:55,837 [42676] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-10 09:55:55,838 [42676] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-10 09:55:55,838 [42676] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-10 09:55:55,883 [42676] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-10 09:55:55,887 [42676] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-10 09:55:56,031 [42676] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-10 09:55:56,036 [42676] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-10 09:56:35,057 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:56:35,058 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 09:56:35,058 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 09:56:35,058 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 09:56:35,058 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:57:26,296 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:57:26,297 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 09:57:26,297 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 09:57:26,297 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:57:26,297 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:57:27,769 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:57:27,769 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:57:27,769 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:57:27,769 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:57:27,770 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:57:29,696 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:57:29,696 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:57:29,696 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:57:29,696 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:57:29,697 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:57:31,190 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:57:31,191 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:57:31,191 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:57:31,191 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:57:31,191 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:57:41,272 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:57:41,272 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:57:41,272 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:57:41,273 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:57:41,273 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:57:45,661 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:57:45,664 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:57:45,664 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:57:45,664 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:57:45,664 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:59:02,613 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:59:02,614 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 09:59:02,614 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 09:59:02,615 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 09:59:02,615 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:59:08,897 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:59:08,898 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 09:59:08,898 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 09:59:08,899 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:59:08,899 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 09:59:26,893 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 09:59:26,895 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 09:59:26,895 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 09:59:26,896 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 09:59:26,896 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:00:15,867 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:00:15,867 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:00:15,867 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:00:15,868 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:00:15,868 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:28:01,927 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:28:01,929 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 10:28:01,929 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 10:28:01,930 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 10:28:01,930 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:28:03,775 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:28:03,775 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 10:28:03,776 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 10:28:03,780 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 10:28:03,780 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 10:28:03,782 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 10:28:03,783 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:28:34,450 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:28:34,450 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 10:28:34,450 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 10:28:34,451 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 10:28:34,451 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 10:28:34,451 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 10:28:34,451 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:28:56,960 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:28:56,960 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 10:28:56,960 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 10:28:56,961 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:28:56,961 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:28:57,117 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:28:57,117 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:28:57,117 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:28:57,118 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:28:57,118 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:29:04,620 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:29:04,621 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 10:29:04,621 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 10:29:04,621 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 1 in part parser)
2021-04-10 10:29:04,621 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:29:12,027 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:29:12,027 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 10:29:12,027 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 10:29:12,028 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 10:29:12,028 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:29:13,143 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:29:13,143 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:29:13,143 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:29:13,144 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:29:13,144 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:29:14,785 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:29:14,785 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:29:14,785 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:29:14,786 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:29:14,786 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:31:17,226 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:31:17,228 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:31:17,229 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:31:17,229 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:31:17,229 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:31:20,088 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:31:20,089 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:31:20,089 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:31:20,089 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:31:20,089 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:31:22,449 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:31:22,449 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:31:22,449 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:31:22,450 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:31:22,450 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:31:23,528 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:31:23,528 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 10:31:23,528 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 10:31:23,528 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 10:31:23,528 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 10:32:07,128 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 10:32:07,129 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-10 10:32:07,129 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-10 10:32:07,129 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 10:32:07,130 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:30:31,477 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:30:31,478 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-10 16:30:31,478 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-10 16:30:31,480 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:30:31,483 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:31:43,188 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:31:43,189 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:31:43,189 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:31:43,189 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:31:43,189 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:31:44,773 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:31:44,773 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:31:44,773 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:31:44,774 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:31:44,774 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:31:45,505 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:31:45,505 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:31:45,505 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:31:45,505 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:31:45,506 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:31:48,322 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:31:48,323 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:31:48,323 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:31:48,323 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:31:48,323 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:31:48,906 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:31:48,907 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:31:48,907 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:31:48,907 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:31:48,907 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:31:49,645 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:31:49,645 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:31:49,646 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:31:49,646 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:31:49,646 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:31:50,346 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:31:50,347 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:31:50,347 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:31:50,347 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:31:50,347 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:01,827 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:01,827 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 16:32:01,827 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 16:32:01,828 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:32:01,828 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:02,450 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:02,450 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:32:02,451 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:32:02,451 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:32:02,451 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:32:02,452 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:32:02,452 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:06,162 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:06,162 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:32:06,162 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:32:06,162 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:32:06,163 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:32:06,163 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:32:06,163 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:10,601 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:10,601 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:32:10,602 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:32:10,602 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:32:10,602 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:32:10,602 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:32:10,603 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:10,766 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/abc.py
2021-04-10 16:32:10,770 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
2021-04-10 16:32:10,836 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/dtypes/__init__.py
2021-04-10 16:32:10,844 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/dtypes/missing.py
2021-04-10 16:32:10,865 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/__init__.py
2021-04-10 16:32:10,870 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/__init__.py
2021-04-10 16:32:10,888 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/numeric.py
2021-04-10 16:32:10,895 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/umath.py
2021-04-10 16:32:10,901 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/numerictypes.py
2021-04-10 16:32:10,913 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/fromnumeric.py
2021-04-10 16:32:10,929 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/arrayprint.py
2021-04-10 16:32:10,932 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/_asarray.py
2021-04-10 16:32:10,935 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/_ufunc_config.py
2021-04-10 16:32:10,946 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/records.py
2021-04-10 16:32:10,962 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/memmap.py
2021-04-10 16:32:10,970 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/function_base.py
2021-04-10 16:32:10,975 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/machar.py
2021-04-10 16:32:10,983 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/getlimits.py
2021-04-10 16:32:10,989 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/shape_base.py
2021-04-10 16:32:11,001 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/einsumfunc.py
2021-04-10 16:32:11,004 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/__init__.py
2021-04-10 16:32:11,015 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/type_check.py
2021-04-10 16:32:11,023 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/index_tricks.py
2021-04-10 16:32:11,065 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/function_base.py
2021-04-10 16:32:11,075 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/nanfunctions.py
2021-04-10 16:32:11,083 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/shape_base.py
2021-04-10 16:32:11,086 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/stride_tricks.py
2021-04-10 16:32:11,112 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/twodim_base.py
2021-04-10 16:32:11,115 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/ufunclike.py
2021-04-10 16:32:11,123 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/histograms.py
2021-04-10 16:32:11,136 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/polynomial.py
2021-04-10 16:32:11,148 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/utils.py
2021-04-10 16:32:11,154 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/arraysetops.py
2021-04-10 16:32:11,176 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/npyio.py
2021-04-10 16:32:11,185 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/financial.py
2021-04-10 16:32:11,194 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/arraypad.py
2021-04-10 16:32:11,199 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/_version.py
2021-04-10 16:32:11,201 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/matrixlib/__init__.py
2021-04-10 16:32:11,210 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/matrixlib/defmatrix.py
2021-04-10 16:32:11,222 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/types.py
2021-04-10 16:32:11,243 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2021-04-10 16:32:11,251 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/_libs/tslibs/__init__.py
2021-04-10 16:32:11,271 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/multiarray.py
2021-04-10 16:32:11,278 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/dtypes/generic.py
2021-04-10 16:32:11,297 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/compat/__init__.py
2021-04-10 16:32:28,503 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:28,504 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 16:32:28,504 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 16:32:28,504 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:32:28,504 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:30,579 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:30,579 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:32:30,579 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:32:30,579 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:32:30,579 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:33,959 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:33,962 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:32:33,968 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:32:33,969 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:32:33,969 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:38,730 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:38,730 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:32:38,730 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:32:38,730 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:32:38,730 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:40,142 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:40,143 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:32:40,143 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:32:40,143 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:32:40,144 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:40,978 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:40,979 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:32:40,979 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:32:40,979 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:32:40,979 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:32:54,230 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:32:54,231 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:32:54,231 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:32:54,232 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:32:54,232 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:06,594 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:06,595 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:06,595 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:06,595 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:06,596 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:08,347 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:08,348 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:08,348 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:08,348 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:08,348 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:08,606 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:08,606 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:08,606 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:08,607 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:08,607 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:08,705 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:08,706 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:08,706 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:08,706 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:08,706 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:09,970 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:09,970 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:09,970 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:09,970 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:09,971 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:10,678 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:10,678 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:10,678 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:10,679 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:10,679 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:11,761 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:11,762 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:11,762 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:11,762 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:11,762 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:13,045 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:13,045 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:13,046 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:13,046 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:13,046 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:13,142 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:13,142 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:13,143 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:13,144 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:13,144 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:14,346 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:14,346 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:14,346 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:14,347 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:14,347 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:15,323 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:15,323 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:15,323 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:15,323 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:15,324 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:16,066 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:16,066 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:16,066 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:16,067 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:16,067 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:17,681 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:17,682 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:17,682 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:17,682 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:33:17,682 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:18,858 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:18,858 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:18,858 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:18,859 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:18,859 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:18,868 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:18,868 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:18,869 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:18,869 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:18,869 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:19,761 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:19,762 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:19,762 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:19,762 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:19,762 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:21,018 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:21,018 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:21,019 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:21,019 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:21,019 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:23,714 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:23,715 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:23,715 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:23,715 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:23,715 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:23,874 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:23,874 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:23,874 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:23,875 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:33:23,876 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:26,570 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:26,570 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:26,570 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:26,571 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:26,571 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:30,098 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:30,098 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:33:30,098 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:33:30,098 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:33:30,099 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:39,376 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:39,377 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 16:33:39,377 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 16:33:39,378 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:33:39,378 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:40,141 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:40,141 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:33:40,141 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:33:40,142 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:33:40,142 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:33:40,142 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:33:40,142 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:40,573 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:40,574 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:33:40,574 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:33:40,574 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:33:40,574 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:33:40,575 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:33:40,575 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:42,209 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:42,209 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:33:42,210 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:33:42,210 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:33:42,210 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:33:42,210 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:33:42,210 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:50,690 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:50,690 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:33:50,690 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:33:50,691 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:33:50,691 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:33:50,691 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:33:50,691 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:51,529 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:51,529 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:33:51,529 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:33:51,530 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:33:51,530 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:33:51,530 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:33:51,530 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:33:54,257 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:33:54,257 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:33:54,257 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:33:54,257 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:33:54,258 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:33:54,258 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:33:54,258 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:00,818 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:00,818 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-10 16:34:00,818 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:34:00,818 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:34:00,818 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:3]
2021-04-10 16:34:00,819 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-10 16:34:00,819 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:01,028 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:01,029 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:01,029 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:01,029 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:01,029 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:01,030 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:01,030 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:02,697 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:02,697 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:02,697 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:02,697 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:02,698 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:02,698 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:02,698 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:18,478 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:18,479 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-10 16:34:18,479 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-10 16:34:18,479 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:34:18,479 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:30,626 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:30,627 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-10 16:34:30,627 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-10 16:34:30,628 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 16:34:30,628 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:30,795 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:30,795 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:30,795 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:30,795 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:30,796 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:30,796 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:30,796 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:30,979 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:30,979 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:30,980 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:30,980 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:30,980 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:30,981 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2021-04-10 16:34:30,981 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:32,210 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:32,210 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:32,210 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:32,211 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:32,211 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:32,211 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:32,211 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:32,441 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:32,442 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:32,442 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:32,442 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:32,442 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:32,442 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:32,443 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:32,681 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:32,681 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:32,681 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:32,682 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:32,682 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:32,682 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2021-04-10 16:34:32,682 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:33,969 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:33,969 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:33,969 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:33,969 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:33,970 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:33,970 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:33,970 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:35,369 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:35,369 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:35,369 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:35,370 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:35,370 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:35,370 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:35,370 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:36,938 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:36,938 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:36,938 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:36,938 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:36,938 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:36,940 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:36,940 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:37,744 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:37,744 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:34:37,745 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:34:37,745 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:34:37,745 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:34:37,746 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 16:34:37,746 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:41,538 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:41,538 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-10 16:34:41,538 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-10 16:34:41,539 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:34:41,539 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:41,738 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:41,739 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:34:41,739 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:34:41,740 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:34:41,740 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:45,217 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:45,217 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-10 16:34:45,217 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-10 16:34:45,218 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 16:34:45,218 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:34:50,219 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:34:50,219 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2021-04-10 16:34:50,219 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:34:50,220 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:34:50,220 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:3] new[2:2]
2021-04-10 16:34:50,220 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:34:50,221 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:06,952 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:06,955 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 4
2021-04-10 16:35:06,955 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:35:06,955 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:35:06,955 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:4]
2021-04-10 16:35:06,956 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-10 16:35:06,956 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:07,298 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:07,299 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:07,299 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:07,299 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:07,299 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:07,300 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:07,300 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:07,475 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:07,475 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:07,476 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:07,476 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:07,476 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:07,477 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-10 16:35:07,477 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:07,970 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:07,970 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:07,973 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:07,973 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:07,973 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:07,973 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:07,973 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:09,113 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:09,113 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:09,113 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:09,113 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:09,114 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:09,114 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:09,114 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:09,549 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:09,549 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:09,549 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:09,550 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:09,550 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:09,551 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:09,551 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:10,488 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:10,488 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:10,488 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:10,489 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:10,489 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:10,490 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:10,490 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:12,208 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:12,209 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:12,209 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:12,209 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:12,212 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:12,212 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-10 16:35:12,213 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:12,667 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:12,667 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:12,667 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:12,667 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:12,667 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:12,668 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-10 16:35:12,668 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:12,759 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:12,759 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:12,759 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:12,760 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:12,760 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:12,760 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-10 16:35:12,760 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:15,280 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:15,280 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:15,280 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:15,280 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:15,280 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:15,281 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:15,281 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:16,393 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:16,393 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:16,394 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:16,394 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:16,394 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:16,397 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:16,397 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:22,695 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:22,696 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:22,696 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:22,696 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:22,696 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:22,696 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:22,696 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:24,434 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:24,434 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:24,435 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:24,435 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:24,435 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:24,436 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:24,436 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:31,505 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:31,507 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:31,507 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:31,508 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:31,508 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:31,509 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:31,509 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:43,400 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:43,400 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:43,401 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:43,401 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:43,401 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:43,402 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:43,402 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:49,240 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:49,241 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:49,241 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:49,241 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:49,241 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:49,242 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-10 16:35:49,242 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:50,445 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:50,446 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:50,446 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:50,446 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:50,447 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:50,448 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:50,448 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:51,848 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:51,848 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:51,849 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:51,849 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:51,849 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:51,849 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:51,849 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:52,832 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:52,837 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:52,837 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:52,837 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:52,837 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:52,838 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:52,838 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:53,409 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:53,411 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:35:53,411 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:53,412 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:53,412 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:35:53,413 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 16:35:53,413 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:58,785 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:58,785 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 5
2021-04-10 16:35:58,786 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:35:58,786 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-10 16:35:58,786 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:5]
2021-04-10 16:35:58,787 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 4 in part parser)
2021-04-10 16:35:58,787 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:59,166 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:59,166 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 16:35:59,167 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 16:35:59,167 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-10 16:35:59,167 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 16:35:59,168 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-10 16:35:59,168 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:35:59,829 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:35:59,832 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 16:35:59,832 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 16:35:59,833 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-10 16:35:59,833 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 16:35:59,833 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 4 in part parser)
2021-04-10 16:35:59,834 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:06,161 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:06,161 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 16:36:06,161 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 16:36:06,162 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-10 16:36:06,162 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 16:36:06,162 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-10 16:36:06,163 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:07,449 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:07,450 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 16:36:07,450 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 16:36:07,450 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-10 16:36:07,450 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 16:36:07,451 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-10 16:36:07,451 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:07,991 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:07,992 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 16:36:07,992 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 16:36:07,992 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-10 16:36:07,992 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 16:36:07,993 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-10 16:36:07,993 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:08,952 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:08,952 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 16:36:08,952 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 16:36:08,953 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-10 16:36:08,953 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 16:36:08,954 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-10 16:36:08,954 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:18,024 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:18,024 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 16:36:18,025 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 16:36:18,025 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-10 16:36:18,025 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 16:36:18,026 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-10 16:36:18,026 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:37,969 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:37,971 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 3
2021-04-10 16:36:37,971 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:36:37,971 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:36:37,971 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:5] new[3:3]
2021-04-10 16:36:37,972 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2021-04-10 16:36:37,973 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:38,421 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:38,421 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:36:38,421 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:36:38,422 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:36:38,422 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:36:38,423 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2021-04-10 16:36:38,423 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:38,522 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:38,522 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:36:38,522 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:36:38,522 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:36:38,523 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:36:38,524 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2021-04-10 16:36:38,524 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:38,558 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:38,559 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 16:36:38,559 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 16:36:38,559 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 16:36:38,560 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 16:36:38,561 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2021-04-10 16:36:38,561 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:41,591 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:41,592 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-10 16:36:41,592 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-10 16:36:41,592 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:36:41,592 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:42,046 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:42,046 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:36:42,046 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:36:42,047 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:36:42,047 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:42,084 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:42,085 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:36:42,085 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:36:42,086 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:36:42,087 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:36:42,179 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:36:42,180 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:36:42,180 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:36:42,181 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:36:42,182 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:30,820 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:30,820 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:30,820 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:30,820 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:30,820 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:31,020 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:31,020 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:31,020 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:31,021 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:31,021 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:31,057 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:31,058 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:31,058 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:31,058 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:31,059 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:31,968 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:31,968 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:31,969 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:31,969 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:31,969 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:32,784 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:32,785 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:32,785 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:32,785 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:32,785 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:33,839 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:33,839 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:33,840 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:33,840 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:33,840 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:36,022 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:36,023 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:36,023 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:36,023 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:36,023 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:36,598 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:36,599 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:36,599 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:36,599 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:36,599 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:37,498 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:37,499 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:37,499 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:37,500 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:37,500 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:37,958 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:37,958 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:37,959 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:37,967 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:37,967 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:38,950 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:38,950 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:38,950 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:38,951 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:38,951 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:42,213 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:42,213 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:42,214 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:42,214 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:42,214 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:43,628 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:43,628 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:37:43,628 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:37:43,629 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:37:43,629 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:49,731 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:49,732 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 16:37:49,732 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 16:37:49,732 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:37:49,732 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,150 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,150 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,151 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,151 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,151 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,151 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,152 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,221 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,221 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,221 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,221 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,221 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,222 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,222 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,254 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,255 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,255 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,255 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,256 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,256 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,256 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,287 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,288 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,288 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,288 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,289 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,289 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,290 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,318 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,319 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,319 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,319 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,320 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,320 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,321 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,386 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,387 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,387 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,387 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,387 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,388 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,388 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,426 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,426 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,426 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,427 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,427 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,428 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,428 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,484 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,485 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,485 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,485 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,485 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,486 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,487 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,520 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,521 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,521 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,521 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,522 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,522 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,523 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,552 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,553 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,553 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,553 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,554 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,554 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,555 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,620 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,620 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,620 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,621 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,621 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,622 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,622 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,687 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,688 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,688 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,688 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,688 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,689 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,689 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:37:50,720 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:37:50,720 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:37:50,721 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:37:50,721 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:37:50,721 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:37:50,722 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:37:50,722 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:38:05,834 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:38:05,834 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:38:05,834 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:2]
2021-04-10 16:38:05,835 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:38:05,835 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:38:11,758 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:38:11,758 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:38:11,758 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:38:11,758 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:38:11,759 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:38:11,759 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:38:11,760 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:38:11,768 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:38:11,768 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:38:11,769 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:38:11,769 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:38:11,769 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:38:11,770 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:38:11,770 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:38:46,735 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:38:46,735 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 9
2021-04-10 16:38:46,735 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[1:0] new[1:1]
2021-04-10 16:38:46,735 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2021-04-10 16:38:46,736 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[2:2]
2021-04-10 16:38:46,736 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[2:2]
2021-04-10 16:38:46,736 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[3:9]
2021-04-10 16:38:46,738 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 9 (to 8 in part parser)
2021-04-10 16:38:46,738 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:39:15,079 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:39:15,079 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 1
2021-04-10 16:39:15,079 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:9] new[1:1]
2021-04-10 16:39:15,080 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:39:15,080 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:39:42,803 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:39:42,804 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 9
2021-04-10 16:39:42,804 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:9]
2021-04-10 16:39:42,806 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 9 (to 8 in part parser)
2021-04-10 16:39:42,807 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:39:50,094 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:39:50,094 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 1
2021-04-10 16:39:50,094 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:9] new[1:1]
2021-04-10 16:39:50,094 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:39:50,095 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:41:31,114 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:41:31,114 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:41:31,114 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:41:31,115 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:41:31,115 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:41:34,673 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:41:34,673 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:41:34,673 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:41:34,673 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:41:34,673 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:41:36,584 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:41:36,585 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:41:36,585 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:41:36,585 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:41:36,585 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:41:38,768 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:41:38,769 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:41:38,769 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:41:38,769 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:41:38,769 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:41:41,361 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:41:41,362 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:41:41,362 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:41:41,362 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:41:41,362 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:41:52,226 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:41:52,227 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:41:52,227 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:41:52,227 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:41:52,227 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:41:54,729 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:41:54,729 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:41:54,729 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:41:54,730 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:41:54,730 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:28,914 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:28,915 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:28,915 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:28,915 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:28,915 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:32,395 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:32,395 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:32,395 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:32,395 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:32,395 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:33,330 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:33,331 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:33,331 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:33,331 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:33,331 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:34,190 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:34,191 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:34,191 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:34,191 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:34,192 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:35,977 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:35,978 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:35,978 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:35,978 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:35,978 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:36,467 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:36,467 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:36,467 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:36,468 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:36,468 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:37,435 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:37,435 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:37,436 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:37,436 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 16:48:37,436 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:38,785 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:38,786 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:38,786 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:38,786 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:38,787 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:40,866 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:40,867 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:40,867 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:40,867 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:40,868 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:42,035 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:42,035 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:42,035 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:42,036 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:42,036 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:51,299 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:51,300 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:48:51,300 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:48:51,300 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:48:51,301 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:52,681 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:52,681 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 16:48:52,682 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 16:48:52,682 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:48:52,682 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:54,410 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:54,410 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:48:54,410 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:48:54,410 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:48:54,411 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:48:54,411 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:48:54,411 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:48:55,634 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:48:55,634 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:48:55,635 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:48:55,635 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:48:55,635 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:48:55,635 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:48:55,635 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:02,113 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:02,114 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 16:49:02,114 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 16:49:02,114 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:49:02,114 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:08,611 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:08,611 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 16:49:08,611 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 16:49:08,612 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:49:08,612 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:09,542 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:09,543 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:49:09,543 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:49:09,544 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:49:09,544 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:49:09,544 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:49:09,545 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:15,449 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:15,450 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:49:15,450 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:49:15,450 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:49:15,450 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:49:15,450 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:49:15,451 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:19,297 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:19,297 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:49:19,297 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:49:19,297 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:49:19,297 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:49:19,301 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:49:19,301 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:31,945 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:31,945 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:49:31,945 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:49:31,946 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:49:31,946 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:49:31,949 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:49:31,949 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:33,597 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:33,597 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:49:33,597 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:49:33,598 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:49:33,598 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:49:33,598 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:49:33,598 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:49:35,433 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:49:35,434 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:49:35,434 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:49:35,434 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:49:35,434 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:49:35,435 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:49:35,435 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:10,327 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:10,328 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:10,328 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:10,328 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:10,328 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:10,329 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:10,329 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:12,520 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:12,520 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:12,520 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:12,520 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:12,520 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:12,521 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:12,521 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:13,927 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:13,928 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:13,928 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:13,928 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:13,928 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:13,929 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:13,929 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:17,728 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:17,729 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:17,729 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:17,729 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:17,729 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:17,730 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:17,730 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:20,807 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:20,808 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:20,808 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:20,808 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:20,808 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:20,808 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:20,808 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:21,481 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:21,481 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:21,481 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:21,482 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:21,482 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:21,482 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:21,482 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:23,311 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:23,311 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 16:50:23,311 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 16:50:23,311 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:50:23,312 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:23,944 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:23,945 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:50:23,945 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:50:23,945 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:50:23,945 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:25,246 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:25,247 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:50:25,247 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:50:25,247 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:50:25,247 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:26,439 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:26,439 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:50:26,439 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:50:26,439 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:50:26,439 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:27,783 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:27,783 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:50:27,783 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:50:27,784 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:50:27,784 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:28,791 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:28,793 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:50:28,794 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:50:28,794 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:50:28,801 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:43,440 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:43,442 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 16:50:43,442 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 16:50:43,444 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:50:43,444 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:52,311 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:52,311 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:52,311 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:52,311 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:52,311 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:52,312 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:52,312 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:50:53,869 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:50:53,869 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:50:53,869 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:50:53,870 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:50:53,870 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:50:53,870 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:50:53,870 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:00,837 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:00,837 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 16:51:00,837 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 16:51:00,838 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:51:00,838 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:01,525 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:01,525 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:51:01,525 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:51:01,526 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:51:01,526 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:06,958 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:06,958 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 16:51:06,958 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 16:51:06,959 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 16:51:06,959 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:08,366 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:08,366 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:51:08,366 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:51:08,366 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:51:08,367 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:51:08,367 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:51:08,367 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:09,477 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:09,477 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:51:09,477 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:51:09,477 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:51:09,478 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:51:09,478 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:51:09,478 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:10,613 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:10,613 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:51:10,613 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:51:10,614 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:51:10,614 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:51:10,614 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:51:10,614 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:11,813 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:11,813 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 16:51:11,813 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 16:51:11,813 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 16:51:11,814 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 16:51:11,814 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 16:51:11,814 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:19,924 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:19,924 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 16:51:19,925 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 16:51:19,925 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:51:19,925 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:39,798 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:39,799 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2021-04-10 16:51:39,799 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2021-04-10 16:51:39,800 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-10 16:51:39,800 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:41,116 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:41,116 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:41,117 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:41,117 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:41,117 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:41,117 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:41,118 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:43,021 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:43,021 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:43,021 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:43,022 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:43,022 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:43,023 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:43,023 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:44,690 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:44,691 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:44,691 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:44,691 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:44,692 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:44,693 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:44,693 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:45,973 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:45,973 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:45,973 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:45,973 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:45,975 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:45,975 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:45,975 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:48,212 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:48,213 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:48,213 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:48,213 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:48,215 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:48,215 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:48,215 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:49,690 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:49,691 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:49,691 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:49,692 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:49,693 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:49,693 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:49,693 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:50,641 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:50,641 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:50,641 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:50,641 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:50,642 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:50,643 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:50,643 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:51:53,252 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:51:53,253 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:51:53,253 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:51:53,253 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:51:53,254 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:51:53,254 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:51:53,255 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:03,516 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:03,516 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 16:52:03,516 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 16:52:03,517 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 16:52:03,517 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 16:52:03,517 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 16:52:03,517 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:17,364 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:17,364 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2021-04-10 16:52:17,364 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2021-04-10 16:52:17,365 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:17,365 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:18,906 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:18,906 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:18,907 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:18,907 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:18,907 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:19,163 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:19,163 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:19,163 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:19,163 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:19,163 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:19,299 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:19,299 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:19,299 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:19,299 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:19,299 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:19,905 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:19,906 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:19,906 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:19,906 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:19,906 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:22,307 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:22,307 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:22,307 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:22,307 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:22,307 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:22,930 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:22,931 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:22,931 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:22,931 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:22,931 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:23,541 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:23,541 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:23,541 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:23,542 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:23,542 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:24,290 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:24,290 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:24,290 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:24,291 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:24,291 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:25,058 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:25,058 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:25,058 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:25,059 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:25,059 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 16:52:26,458 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 16:52:26,458 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 16:52:26,458 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 16:52:26,458 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 16:52:26,459 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:12:02,960 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:12:02,961 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2021-04-10 17:12:02,961 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2021-04-10 17:12:02,963 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-10 17:12:02,963 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:12:04,250 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:12:04,250 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:12:04,250 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:12:04,251 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:12:04,252 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:12:04,253 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:12:04,253 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:12:40,238 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:12:40,238 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:12:40,239 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:12:40,239 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:12:40,239 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:12:40,240 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:12:40,240 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:12:41,170 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:12:41,171 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:12:41,171 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:12:41,171 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:12:41,172 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:12:41,172 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:12:41,172 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:12:41,899 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:12:41,899 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:12:41,899 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:12:41,899 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:12:41,900 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:12:41,900 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:12:41,900 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:12:42,726 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:12:42,726 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:12:42,726 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:12:42,727 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:12:42,727 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:12:42,728 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:12:42,728 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:12:45,462 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:12:45,462 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:12:45,463 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:12:45,463 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:12:45,463 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:12:45,464 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:12:45,464 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:13:15,421 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:13:15,421 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:13:15,421 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:13:15,421 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:13:15,422 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:13:15,422 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:13:15,422 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:13:24,061 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:13:24,061 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:13:24,062 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:13:24,062 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:13:24,062 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:13:24,063 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:13:24,063 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:13:31,597 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:13:31,597 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:13:31,597 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:13:31,597 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:13:31,599 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:13:31,599 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:13:31,599 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:13:35,397 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:13:35,397 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:13:35,397 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:13:35,397 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:13:35,399 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:13:35,399 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:13:35,399 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:13:36,780 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:13:36,781 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:13:36,781 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:13:36,781 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:13:36,782 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:13:36,782 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:13:36,783 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:13:39,691 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:13:39,692 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:13:39,692 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:13:39,692 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:13:39,693 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:13:39,694 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:13:39,694 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:13:40,096 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:13:40,097 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:13:40,097 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:13:40,097 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:13:40,099 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:13:40,099 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:13:40,100 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:12,083 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:12,084 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:12,084 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:12,084 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:12,085 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:12,085 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:12,085 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:13,433 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:13,433 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:13,434 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:13,434 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:13,435 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:13,435 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:13,435 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:15,948 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:15,948 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:15,949 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:15,949 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:15,950 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:15,950 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:15,950 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:17,697 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:17,698 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:17,698 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:17,698 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:17,700 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:17,700 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:17,700 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:18,523 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:18,524 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:18,524 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:18,524 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:18,525 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:18,525 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:18,525 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:21,282 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:21,282 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:21,283 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:21,283 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:21,284 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:21,284 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:21,285 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:23,121 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:23,122 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:23,122 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:23,122 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:23,123 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:23,124 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:23,124 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:23,915 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:23,915 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:23,916 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:23,916 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:23,918 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:23,918 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:23,918 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:14:25,507 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:14:25,507 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 17:14:25,508 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 17:14:25,508 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 17:14:25,510 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 17:14:25,510 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 17:14:25,510 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:15:19,551 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:15:19,551 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2021-04-10 17:15:19,552 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2021-04-10 17:15:19,552 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 17:15:19,552 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:15:25,487 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:15:25,487 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 17:15:25,487 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 17:15:25,488 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 17:15:25,488 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:15:26,720 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:15:26,720 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 17:15:26,720 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 17:15:26,728 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 17:15:26,728 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:15:27,831 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:15:27,831 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 17:15:27,831 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 17:15:27,832 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 17:15:27,832 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:15:28,871 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:15:28,871 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 17:15:28,872 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 17:15:28,874 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 17:15:28,874 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:16:20,145 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:16:20,145 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 17:16:20,145 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 17:16:20,146 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 17:16:20,146 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 17:16:25,457 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 17:16:25,458 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 17:16:25,458 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 17:16:25,458 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 17:16:25,458 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 17:16:25,459 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 17:16:25,459 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:34:16,723 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:34:16,725 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 4
2021-04-10 18:34:16,725 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:4]
2021-04-10 18:34:16,726 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 3 in part parser)
2021-04-10 18:34:16,726 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:35:13,240 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:35:13,240 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:35:13,241 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:35:13,241 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:35:13,242 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:35:13,242 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:35:13,242 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:35:18,176 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:35:18,177 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:35:18,177 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:35:18,177 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:35:18,178 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:35:18,178 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:35:18,178 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:35:56,528 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:35:56,528 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:35:56,528 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:35:56,529 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:35:56,530 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:35:56,530 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:35:56,530 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:35:59,631 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:35:59,632 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:35:59,632 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:35:59,632 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:35:59,634 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:35:59,634 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:35:59,634 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:36:03,911 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:36:03,912 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:36:03,912 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:36:03,912 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:36:03,915 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:36:03,915 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:36:03,915 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:36:05,710 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:36:05,711 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:36:05,712 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:36:05,712 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:36:05,714 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:36:05,714 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:36:05,714 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:36:08,759 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:36:08,760 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:36:08,760 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:36:08,760 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:36:08,762 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:36:08,762 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:36:08,762 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:36:09,685 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:36:09,686 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:36:09,686 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:36:09,686 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:36:09,689 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:36:09,689 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:36:09,689 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:36:39,822 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:36:39,822 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:36:39,823 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:36:39,823 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:36:39,823 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:36:39,823 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:36:39,824 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:37:19,371 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:37:19,371 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:37:19,372 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:37:19,372 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:37:19,373 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:37:19,373 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:37:19,373 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:37:25,219 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:37:25,220 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:37:25,220 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:37:25,220 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:37:25,221 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:37:25,222 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:37:25,222 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:37:28,963 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:37:28,963 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:37:28,963 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:37:28,964 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:37:28,964 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:37:28,965 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:37:28,965 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:37:33,559 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:37:33,560 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:37:33,560 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:37:33,560 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:37:33,561 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:37:33,562 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:37:33,562 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:38:52,410 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:38:52,410 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:38:52,410 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:38:52,410 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:38:52,411 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:38:52,411 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:38:52,411 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:38:53,938 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:38:53,939 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:38:53,939 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:38:53,939 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:38:53,940 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:38:53,941 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:38:53,941 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:38:54,972 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:38:54,973 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:38:54,973 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:38:54,973 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:38:54,974 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:38:54,974 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:38:54,974 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:38:56,250 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:38:56,251 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:38:56,251 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:38:56,251 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:38:56,253 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:38:56,253 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:38:56,253 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:38:57,447 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:38:57,447 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:38:57,447 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:38:57,448 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:38:57,449 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:38:57,449 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:38:57,449 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:15,510 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:15,510 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:15,510 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:15,511 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:15,512 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:15,512 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:15,512 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:16,310 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:16,310 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:16,311 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:16,311 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:16,312 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:16,312 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:16,312 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:18,847 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:18,847 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:18,848 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:18,848 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:18,849 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:18,850 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:18,850 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:20,223 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:20,223 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:20,223 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:20,224 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:20,225 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:20,226 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:20,226 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:20,314 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:20,314 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:20,315 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:20,315 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:20,317 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:20,317 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:20,317 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:22,271 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:22,272 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:22,272 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:22,272 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:22,274 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:22,274 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:22,274 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:23,659 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:23,659 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:23,659 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:23,659 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:23,661 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:23,661 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:23,661 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:26,335 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:26,336 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:26,336 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:26,337 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:26,338 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:26,339 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:26,339 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:27,927 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:27,928 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:27,928 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:27,928 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:27,931 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:27,931 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:27,931 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:34,320 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:34,320 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:34,321 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:34,321 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:34,323 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:34,323 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:34,323 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:37,041 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:37,041 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:37,041 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:37,042 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:37,044 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:37,044 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:37,044 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:39:42,208 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:39:42,208 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:39:42,208 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:39:42,209 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:39:42,211 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:39:42,211 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:39:42,211 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:40:04,071 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:40:04,071 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:40:04,071 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:40:04,071 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:40:04,073 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:40:04,073 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:40:04,073 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:40:06,134 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:40:06,135 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:40:06,136 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:40:06,136 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:40:06,138 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:40:06,138 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:40:06,138 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:40:55,108 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:40:55,108 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:40:55,108 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:40:55,109 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:40:55,110 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:40:55,110 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:40:55,110 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:40:58,955 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:40:58,956 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:40:58,956 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:40:58,956 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:40:58,957 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:40:58,957 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:40:58,958 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:42:41,553 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:42:41,555 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:42:41,556 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:42:41,556 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:42:41,557 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:42:41,558 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:42:41,558 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:03,709 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:03,709 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:03,710 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:03,710 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:03,712 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:03,712 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:03,712 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:17,629 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:17,630 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:17,630 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:17,630 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:17,630 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:17,630 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:17,631 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:19,249 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:19,250 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:19,250 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:19,250 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:19,251 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:19,251 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:19,251 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:20,428 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:20,428 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:20,428 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:20,429 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:20,429 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:20,429 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:20,429 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:21,741 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:21,741 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:21,741 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:21,742 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:21,742 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:21,742 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:21,743 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:23,202 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:23,203 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:23,203 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:23,203 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:23,206 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:23,206 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:23,206 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:43,852 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:43,852 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:43,852 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:43,852 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:43,853 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:43,853 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:43,853 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:45,250 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:45,251 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:45,251 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:45,251 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:45,252 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:45,252 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:45,252 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:45,770 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:45,771 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:45,771 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:45,771 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:45,772 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:45,772 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:45,772 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:46,384 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:46,384 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:46,384 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:46,384 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:46,385 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:46,385 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:46,385 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:48,299 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:48,299 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:48,299 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:48,300 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:48,301 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:48,302 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:48,302 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:52,558 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:52,558 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:52,559 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:52,559 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:52,560 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:52,560 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:52,560 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:53,316 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:53,316 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:53,316 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:53,317 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:53,317 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:53,318 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:53,318 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:43:54,996 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:43:54,997 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:43:54,997 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:43:54,997 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:43:55,001 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:43:55,001 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:43:55,001 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:45:20,945 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:45:20,947 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 6
2021-04-10 18:45:20,947 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:45:20,948 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:45:20,950 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 5 in part parser)
2021-04-10 18:45:20,950 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:6]
2021-04-10 18:45:20,950 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:45:20,950 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:45:21,607 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:45:21,608 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:45:21,608 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:45:21,608 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:45:21,609 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 7 (to 5 in part parser)
2021-04-10 18:45:21,609 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:45:21,609 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:45:22,894 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:45:22,894 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:45:22,894 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:45:22,895 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:45:22,895 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:45:22,895 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:45:22,895 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:45:51,748 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:45:51,749 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:45:51,749 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:45:51,749 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:45:51,749 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 7 (to 5 in part parser)
2021-04-10 18:45:51,750 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:45:51,750 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:45:52,370 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:45:52,371 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:45:52,371 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:45:52,372 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:45:52,372 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:45:52,372 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:45:52,373 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:45:59,021 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:45:59,021 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:45:59,021 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:45:59,021 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:45:59,028 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:45:59,029 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:45:59,029 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:45:59,949 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:45:59,949 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:45:59,949 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:45:59,949 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:45:59,950 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:45:59,950 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:45:59,950 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:46:00,472 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:46:00,472 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:46:00,472 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:46:00,473 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:46:00,473 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:46:00,473 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:46:00,473 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:46:05,276 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:46:05,276 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:46:05,276 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:46:05,277 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:46:05,277 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:46:05,277 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:46:05,277 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:46:06,432 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:46:06,432 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:46:06,432 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:46:06,433 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:46:06,434 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 7 (to 5 in part parser)
2021-04-10 18:46:06,434 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:46:06,434 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:46:07,765 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:46:07,767 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:46:07,767 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:46:07,767 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:46:07,772 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:46:07,772 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:46:07,772 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:46:10,925 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:46:10,925 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:46:10,926 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:46:10,926 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:46:10,927 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:46:10,927 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:46:10,927 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:47:40,129 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:47:40,131 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 4
2021-04-10 18:47:40,131 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:47:40,131 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:47:40,132 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:47:40,132 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:6] new[4:4]
2021-04-10 18:47:40,132 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:47:41,488 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:47:41,489 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:47:41,489 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:47:41,489 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:47:41,490 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:47:41,490 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:47:41,491 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:47:42,324 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:47:42,325 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:47:42,325 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:47:42,325 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:47:42,326 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:47:42,326 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:47:42,326 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:47:50,687 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:47:50,687 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 6
2021-04-10 18:47:50,687 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:47:50,687 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:47:50,689 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 5 in part parser)
2021-04-10 18:47:50,689 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:6]
2021-04-10 18:47:50,689 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:47:50,690 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:47:51,384 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:47:51,384 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:47:51,385 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:47:51,385 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:47:51,386 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:47:51,386 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:47:51,386 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:47:52,775 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:47:52,775 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:47:52,775 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:47:52,776 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:47:52,776 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:47:52,776 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:47:52,776 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:47:54,119 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:47:54,120 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:47:54,120 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:47:54,120 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:47:54,121 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 7 (to 5 in part parser)
2021-04-10 18:47:54,121 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:47:54,121 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:00,015 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:00,015 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:00,016 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:00,016 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:00,017 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:00,017 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:00,017 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:02,173 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:02,174 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:02,174 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:02,174 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:02,175 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:02,175 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:02,175 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:03,975 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:03,975 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:03,975 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:03,976 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:03,976 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:03,976 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:03,976 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:08,838 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:08,839 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:08,839 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:08,839 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:08,842 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:08,842 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:08,842 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:09,422 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:09,423 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:09,423 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:09,423 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:09,424 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:09,424 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:09,424 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:10,031 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:10,032 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:10,032 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:10,032 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:10,033 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:10,033 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:10,033 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:10,990 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:10,990 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:10,990 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:10,991 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:10,991 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:10,992 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:10,992 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:37,969 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:37,969 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:37,969 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:37,970 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:37,970 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:37,970 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:37,970 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:38,248 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:38,248 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:38,248 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:38,248 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:38,249 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 7 (to 5 in part parser)
2021-04-10 18:48:38,249 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:38,250 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:48:56,829 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:48:56,829 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-10 18:48:56,829 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 18:48:56,830 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:4] new[1:4]
2021-04-10 18:48:56,831 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 5 in part parser)
2021-04-10 18:48:56,831 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-10 18:48:56,831 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:49:31,668 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:49:31,669 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 4
2021-04-10 18:49:31,669 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:49:31,669 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:49:31,671 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:49:31,671 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:6] new[4:4]
2021-04-10 18:49:31,671 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:49:32,829 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:49:32,829 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 18:49:32,830 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 18:49:32,830 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 18:49:32,832 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 18:49:32,832 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 18:49:32,833 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:50:03,563 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:50:03,563 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2021-04-10 18:50:03,563 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2021-04-10 18:50:03,563 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:50:03,564 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:50:05,330 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:50:05,330 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:50:05,330 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:50:05,330 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:50:05,330 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:50:07,113 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:50:07,114 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:50:07,114 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:50:07,114 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:50:07,114 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:50:18,466 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:50:18,466 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:50:18,466 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:50:18,467 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:50:18,467 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:50:48,115 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:50:48,117 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:50:48,118 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:50:48,118 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:50:48,118 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:50:48,799 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:50:48,799 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:50:48,799 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:50:48,799 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:50:48,800 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:50:50,199 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:50:50,200 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:50:50,200 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:50:50,200 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:50:50,200 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:59:07,706 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:59:07,708 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:59:07,708 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:59:07,708 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:59:07,708 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:59:09,284 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:59:09,284 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:59:09,285 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:59:09,285 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:59:09,285 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:59:11,442 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:59:11,442 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:59:11,442 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:59:11,443 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-10 18:59:11,443 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:59:14,935 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:59:14,936 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:59:14,936 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:59:14,936 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:59:14,936 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:59:39,817 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:59:39,817 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:59:39,817 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:59:39,820 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:59:39,820 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 18:59:40,433 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/internals/__init__.py
2021-04-10 18:59:40,464 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/internals/managers.py
2021-04-10 18:59:40,616 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/dtypes/common.py
2021-04-10 18:59:41,289 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 18:59:41,290 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 18:59:41,290 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 18:59:41,290 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 18:59:41,290 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:00:03,250 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:00:03,250 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:00:03,250 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:00:03,251 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:00:03,251 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:02:44,529 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:02:44,531 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 19:02:44,532 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 19:02:44,532 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 19:02:44,533 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:02:46,795 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:02:46,795 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:02:46,795 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:02:46,796 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:02:46,796 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:02:46,796 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:02:46,797 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:02:47,649 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:02:47,649 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:02:47,650 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:02:47,650 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:02:47,650 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:02:47,651 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:02:47,651 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:04:22,828 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:04:22,829 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:04:22,829 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:04:22,829 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:04:22,829 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:04:22,830 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 1 in part parser)
2021-04-10 19:04:22,830 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:04:38,170 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:04:38,171 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:04:38,171 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:04:38,171 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:04:38,171 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:04:38,171 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:04:38,172 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:04:39,724 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:04:39,725 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:04:39,725 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:04:39,725 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:04:39,725 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:04:39,726 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:04:39,726 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:04:47,844 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:04:47,845 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:04:47,845 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:04:47,845 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:04:47,845 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:04:47,846 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:04:47,846 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:04:56,746 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:04:56,747 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:04:56,747 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:04:56,747 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:04:56,747 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:04:56,748 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 1 in part parser)
2021-04-10 19:04:56,748 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:06:02,864 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:06:02,865 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 4
2021-04-10 19:06:02,865 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:06:02,865 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:06:02,865 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:4]
2021-04-10 19:06:02,866 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-10 19:06:02,866 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:06:04,088 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:06:04,088 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-10 19:06:04,088 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-10 19:06:04,089 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 19:06:04,089 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-10 19:06:04,089 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-10 19:06:04,089 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:06:21,210 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:06:21,210 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2021-04-10 19:06:21,210 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2021-04-10 19:06:21,211 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:06:21,211 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:06:25,826 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:06:25,828 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:06:25,828 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:06:25,829 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:06:25,830 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:07:20,311 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:07:20,313 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 19:07:20,313 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 19:07:20,314 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 19:07:20,314 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:03,206 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:03,207 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-10 19:08:03,207 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-10 19:08:03,207 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:03,207 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:04,730 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:04,731 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:04,731 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:04,731 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:04,731 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:07,243 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:07,243 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:07,243 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:07,244 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:07,244 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:09,220 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:09,220 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:09,220 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:09,220 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:09,221 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:20,066 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:20,066 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:20,066 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:20,067 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:20,067 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:21,346 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:21,346 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:21,347 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:21,347 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:21,347 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:23,011 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:23,011 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:23,011 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:23,012 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:23,012 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:23,731 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:23,733 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:23,733 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:23,734 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:23,734 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:26,987 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:26,987 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:26,987 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:26,988 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:26,988 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:33,258 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:33,259 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:08:33,259 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:08:33,259 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:08:33,259 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:49,073 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:49,073 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-10 19:08:49,074 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-10 19:08:49,074 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 19:08:49,075 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:50,193 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:50,194 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 19:08:50,194 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:08:50,194 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:08:50,195 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-10 19:08:50,195 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 19:08:50,195 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:52,037 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:52,037 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 19:08:52,037 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:08:52,038 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:08:52,038 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-10 19:08:52,038 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 19:08:52,038 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:53,281 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:53,282 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 19:08:53,282 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:08:53,282 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:08:53,283 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-10 19:08:53,283 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 19:08:53,283 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:08:54,777 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:08:54,778 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 19:08:54,778 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:08:54,778 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:08:54,779 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-10 19:08:54,779 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 19:08:54,779 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:09:28,328 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:09:28,328 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 19:09:28,328 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:09:28,329 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:09:28,329 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:3] new[2:3]
2021-04-10 19:09:28,329 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-10 19:09:28,330 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:10:08,944 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:10:08,944 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2021-04-10 19:10:08,944 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:10:08,944 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:10:08,945 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:3] new[2:2]
2021-04-10 19:10:08,945 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:10:08,945 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:10:24,919 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:10:24,921 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:10:24,922 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:10:24,922 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:10:24,922 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:10:24,922 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:10:24,922 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:11:44,491 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:11:44,494 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:11:44,494 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:11:44,494 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:11:44,494 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:11:44,495 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:11:44,495 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:11:47,058 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:11:47,059 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:11:47,061 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:11:47,061 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:11:47,061 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:11:47,062 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:11:47,062 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:11:48,444 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:11:48,444 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:11:48,444 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:11:48,445 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:11:48,445 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:11:48,445 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:11:48,445 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:10,568 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:10,568 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-10 19:12:10,568 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:12:10,568 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:12:10,569 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:3]
2021-04-10 19:12:10,570 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-10 19:12:10,570 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:11,281 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:11,282 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 4
2021-04-10 19:12:11,282 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:12:11,282 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 19:12:11,282 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[3:2] new[3:3]
2021-04-10 19:12:11,283 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 3 in part parser)
2021-04-10 19:12:11,286 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[3:3] new[4:4]
2021-04-10 19:12:11,287 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 19:12:11,287 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:14,322 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:14,323 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 3
2021-04-10 19:12:14,323 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:12:14,323 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 19:12:14,323 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:4] new[3:3]
2021-04-10 19:12:14,323 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 19:12:14,324 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:14,744 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:14,744 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 4
2021-04-10 19:12:14,744 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:12:14,745 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 19:12:14,745 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[3:2] new[3:3]
2021-04-10 19:12:14,746 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 3 in part parser)
2021-04-10 19:12:14,746 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[3:3] new[4:4]
2021-04-10 19:12:14,746 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-10 19:12:14,747 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:35,025 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:35,025 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 3
2021-04-10 19:12:35,025 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:12:35,026 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 19:12:35,026 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:4] new[3:3]
2021-04-10 19:12:35,027 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 19:12:35,027 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:36,826 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:36,826 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 19:12:36,826 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:12:36,826 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 19:12:36,827 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 19:12:36,827 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 19:12:36,827 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:47,183 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:47,184 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 8
2021-04-10 19:12:47,184 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 19:12:47,184 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-10 19:12:47,184 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:8]
2021-04-10 19:12:47,186 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 8 (to 7 in part parser)
2021-04-10 19:12:47,186 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:48,414 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:48,415 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2021-04-10 19:12:48,415 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-10 19:12:48,415 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-10 19:12:48,416 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-10 19:12:48,416 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2021-04-10 19:12:48,416 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:49,435 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:49,436 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2021-04-10 19:12:49,436 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-10 19:12:49,436 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-10 19:12:49,437 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-10 19:12:49,437 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2021-04-10 19:12:49,438 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:12:57,424 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:12:57,426 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 1
2021-04-10 19:12:57,426 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:8] new[1:1]
2021-04-10 19:12:57,427 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:12:57,427 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:14:15,263 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:14:15,264 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 8
2021-04-10 19:14:15,264 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:8]
2021-04-10 19:14:15,267 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 8 (to 7 in part parser)
2021-04-10 19:14:15,268 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:14:24,126 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:14:24,127 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 1
2021-04-10 19:14:24,127 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:8] new[1:1]
2021-04-10 19:14:24,127 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:14:24,127 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:14:26,781 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:14:26,781 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:14:26,782 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:14:26,782 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:14:26,782 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:16:46,311 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:16:46,311 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:16:46,311 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:16:46,312 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:16:46,312 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:16:48,871 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:16:48,872 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:16:48,872 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:16:48,873 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:16:48,873 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:16:49,780 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:16:49,781 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:16:49,781 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:16:49,781 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:16:49,781 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:16:55,462 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:16:55,462 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:16:55,462 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:16:55,463 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:16:55,463 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:16:57,749 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:16:57,750 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:16:57,750 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:16:57,751 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:16:57,751 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:16:58,388 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:16:58,389 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:16:58,389 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:16:58,389 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:16:58,390 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:17:04,766 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:17:04,766 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:17:04,766 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:17:04,767 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:17:04,767 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:17:05,829 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:17:05,829 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:17:05,830 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:17:05,830 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:17:05,831 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:17:08,428 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:17:08,428 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:17:08,429 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:17:08,429 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:17:08,430 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:17:14,190 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:17:14,190 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:17:14,190 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:17:14,191 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:17:14,191 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:17:16,577 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:17:16,577 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:17:16,578 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:17:16,578 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:17:16,578 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:17:23,326 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:17:23,326 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:17:23,326 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:17:23,327 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:17:23,327 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:18:04,981 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:18:04,982 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 5
2021-04-10 19:18:04,982 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:5]
2021-04-10 19:18:04,984 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-10 19:18:04,984 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:18:05,729 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:18:05,730 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 19:18:05,730 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 19:18:05,730 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 19:18:05,733 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 5 (to 4 in part parser)
2021-04-10 19:18:05,734 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 19:18:05,734 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:18:11,245 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:18:11,246 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-10 19:18:11,246 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-10 19:18:11,246 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 19:18:11,248 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 5 (to 4 in part parser)
2021-04-10 19:18:11,249 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-10 19:18:11,249 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:18:58,507 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:18:58,509 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 13
2021-04-10 19:18:58,509 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:18:58,510 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 4 in part parser)
2021-04-10 19:18:58,510 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:18:58,511 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[3:4] new[3:4]
2021-04-10 19:18:58,514 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 5 (to 6 in part parser)
2021-04-10 19:18:58,514 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:13]
2021-04-10 19:18:58,516 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 13 (to 12 in part parser)
2021-04-10 19:18:58,516 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:24:31,913 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:24:31,913 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 13; new: 7
2021-04-10 19:24:31,913 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:13] new[1:7]
2021-04-10 19:24:31,914 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 7 (to 6 in part parser)
2021-04-10 19:24:31,914 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:25:54,788 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:25:54,788 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 1
2021-04-10 19:25:54,789 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:7] new[1:1]
2021-04-10 19:25:54,789 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:25:54,789 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:26:00,094 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:26:00,095 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:26:00,095 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:26:00,095 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:26:00,096 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:26:26,302 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:26:26,303 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:26:26,303 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:26:26,304 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:26:26,304 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:26:26,362 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/seaborn/categorical.py
2021-04-10 19:26:28,183 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:26:28,184 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:26:28,184 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:26:28,185 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:26:28,185 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:26:29,725 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:26:29,726 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:26:29,726 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:26:29,728 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:26:29,728 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:26:36,387 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:26:36,388 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:26:36,388 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:26:36,390 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:26:36,390 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:26:38,102 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:26:38,102 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:26:38,102 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:26:38,103 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:26:38,103 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:27:11,349 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:27:11,349 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:27:11,350 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:27:11,350 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:27:11,350 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:28:08,351 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:28:08,351 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 18
2021-04-10 19:28:08,352 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:18]
2021-04-10 19:28:08,356 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 18 (to 17 in part parser)
2021-04-10 19:28:08,356 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:28:10,787 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:28:10,787 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 18; new: 18
2021-04-10 19:28:10,787 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:17] new[1:17]
2021-04-10 19:28:10,788 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:16] new[1:16]
2021-04-10 19:28:10,788 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 17 to 18 (to 17 in part parser)
2021-04-10 19:28:10,788 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[18:18] new[18:18]
2021-04-10 19:28:10,789 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:28:14,921 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:28:14,921 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 18; new: 18
2021-04-10 19:28:14,921 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:17] new[1:17]
2021-04-10 19:28:14,922 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:16] new[1:16]
2021-04-10 19:28:14,923 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 17 to 18 (to 17 in part parser)
2021-04-10 19:28:14,923 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[18:18] new[18:18]
2021-04-10 19:28:14,923 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:28:28,693 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:28:28,693 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 18; new: 1
2021-04-10 19:28:28,693 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:18] new[1:1]
2021-04-10 19:28:28,694 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:28:28,694 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:28:44,409 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:28:44,410 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:28:44,410 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:28:44,410 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:28:44,411 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:28:47,225 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:28:47,225 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:28:47,225 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:28:47,225 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:28:47,226 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:28:47,993 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:28:47,993 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:28:47,993 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:28:47,993 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:28:47,994 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:30:02,798 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:30:02,800 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:30:02,801 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:30:02,801 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:30:02,801 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:30:03,874 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:30:03,874 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:30:03,874 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:30:03,875 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:30:03,875 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:30:20,877 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:30:20,877 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:30:20,878 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:30:20,878 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:30:20,878 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:30:26,388 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:30:26,389 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:30:26,389 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:30:26,390 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:30:26,390 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:30:51,740 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:30:51,741 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:30:51,741 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:30:51,742 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:30:51,742 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:30:56,849 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:30:56,850 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:30:56,850 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:30:56,851 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:30:56,851 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:31:15,330 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:31:15,331 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:31:15,331 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:31:15,331 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:31:15,331 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:31:18,989 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:31:18,990 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:31:18,990 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:31:18,991 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:31:18,991 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:31:35,425 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:31:35,425 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:31:35,425 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:31:35,426 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:31:35,426 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:33:13,175 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:33:13,175 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:33:13,175 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:33:13,176 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:33:13,176 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:33:19,668 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:33:19,669 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:33:19,669 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:33:19,670 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:33:19,670 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:10,360 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:10,361 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 8
2021-04-10 19:35:10,361 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:8]
2021-04-10 19:35:10,363 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 8 (to 7 in part parser)
2021-04-10 19:35:10,364 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:12,069 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:12,070 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2021-04-10 19:35:12,070 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-10 19:35:12,070 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:7] new[1:7]
2021-04-10 19:35:12,071 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2021-04-10 19:35:12,072 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 8 to 8 (to 7 in part parser)
2021-04-10 19:35:12,072 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:13,578 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:13,579 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2021-04-10 19:35:13,579 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-10 19:35:13,580 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:7] new[1:7]
2021-04-10 19:35:13,580 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2021-04-10 19:35:13,580 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 8 to 8 (to 7 in part parser)
2021-04-10 19:35:13,581 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:27,182 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:27,183 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 9
2021-04-10 19:35:27,183 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-10 19:35:27,183 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:7] new[1:7]
2021-04-10 19:35:27,183 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:8] new[8:9]
2021-04-10 19:35:27,184 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 8 to 9 (to 8 in part parser)
2021-04-10 19:35:27,185 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:27,448 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:27,449 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-10 19:35:27,449 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-10 19:35:27,450 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:8] new[1:8]
2021-04-10 19:35:27,450 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-10 19:35:27,451 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-10 19:35:27,451 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:28,566 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:28,566 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-10 19:35:28,566 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-10 19:35:28,567 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:8] new[1:8]
2021-04-10 19:35:28,567 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-10 19:35:28,567 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-10 19:35:28,568 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:47,831 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:47,832 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 10
2021-04-10 19:35:47,832 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-10 19:35:47,832 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:4] new[1:4]
2021-04-10 19:35:47,833 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 6 (to 6 in part parser)
2021-04-10 19:35:47,834 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[delete] old[6:7] new[6:5]
2021-04-10 19:35:47,834 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[8:8] new[6:6]
2021-04-10 19:35:47,834 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[7:10]
2021-04-10 19:35:47,835 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 10 (to 9 in part parser)
2021-04-10 19:35:47,835 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:49,804 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:49,804 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 10; new: 10
2021-04-10 19:35:49,804 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:9] new[1:9]
2021-04-10 19:35:49,805 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:7] new[1:7]
2021-04-10 19:35:49,806 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 8 to 10 (to 9 in part parser)
2021-04-10 19:35:49,806 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[10:10] new[10:10]
2021-04-10 19:35:49,806 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:35:59,084 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:35:59,085 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 10; new: 11
2021-04-10 19:35:59,085 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:9] new[1:9]
2021-04-10 19:35:59,085 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:7] new[1:7]
2021-04-10 19:35:59,086 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 8 to 10 (to 10 in part parser)
2021-04-10 19:35:59,087 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[10:10] new[10:11]
2021-04-10 19:35:59,087 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 11 to 11 (to 10 in part parser)
2021-04-10 19:35:59,087 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:36:03,046 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:36:03,046 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 11
2021-04-10 19:36:03,046 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:10] new[1:10]
2021-04-10 19:36:03,046 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:10] new[1:10]
2021-04-10 19:36:03,046 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[11:11] new[11:11]
2021-04-10 19:36:03,047 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 11 to 11 (to 10 in part parser)
2021-04-10 19:36:03,047 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:36:11,548 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:36:11,549 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 14
2021-04-10 19:36:11,549 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-10 19:36:11,550 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:7] new[1:7]
2021-04-10 19:36:11,551 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 8 to 9 (to 9 in part parser)
2021-04-10 19:36:11,553 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[delete] old[9:9] new[9:8]
2021-04-10 19:36:11,553 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[10:10] new[9:9]
2021-04-10 19:36:11,553 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[11:11] new[10:14]
2021-04-10 19:36:11,555 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 10 to 14 (to 13 in part parser)
2021-04-10 19:36:11,555 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:36:14,485 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:36:14,487 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 14; new: 13
2021-04-10 19:36:14,487 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:12] new[1:12]
2021-04-10 19:36:14,488 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:10] new[1:10]
2021-04-10 19:36:14,489 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 11 to 13 (to 12 in part parser)
2021-04-10 19:36:14,489 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[13:14] new[13:13]
2021-04-10 19:36:14,489 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:36:14,818 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:36:14,818 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 13; new: 13
2021-04-10 19:36:14,818 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:12] new[1:12]
2021-04-10 19:36:14,819 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:10] new[1:10]
2021-04-10 19:36:14,820 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 11 to 13 (to 12 in part parser)
2021-04-10 19:36:14,820 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[13:13] new[13:13]
2021-04-10 19:36:14,820 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:36:18,231 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:36:18,232 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 13; new: 14
2021-04-10 19:36:18,232 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:12] new[1:12]
2021-04-10 19:36:18,232 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:10] new[1:10]
2021-04-10 19:36:18,234 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 11 to 13 (to 13 in part parser)
2021-04-10 19:36:18,234 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[13:13] new[13:14]
2021-04-10 19:36:18,235 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 14 to 14 (to 13 in part parser)
2021-04-10 19:36:18,235 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:36:28,587 [5629] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2021-04-10 19:36:28,589 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,596 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,597 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,597 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,597 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,597 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,598 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,598 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,598 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,598 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,598 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,599 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,599 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,599 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,599 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-10 19:36:28,599 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,600 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,600 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,600 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,601 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,601 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,601 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-10 19:36:28,602 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-10 19:36:28,602 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,602 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,602 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,602 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,603 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,603 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,603 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,603 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,603 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,604 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,605 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,606 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,606 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,606 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,606 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-10 19:36:28,606 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,606 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,606 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,607 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,607 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,607 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,607 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,607 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,607 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-10 19:36:28,608 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,608 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,608 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,608 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,608 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,608 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,609 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,609 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,609 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,609 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,609 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-10 19:36:28,609 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,609 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,610 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,610 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,610 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,610 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,610 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,610 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,610 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,611 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,611 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,611 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,611 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,611 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,612 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,612 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,612 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,612 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,612 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,612 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,613 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,613 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 19:36:28,613 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,613 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,613 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,613 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,614 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,614 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,614 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-10 19:36:28,614 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,615 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,615 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-10 19:36:28,615 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,615 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,615 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,616 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,616 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,616 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,616 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,616 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,616 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,616 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,617 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,618 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,619 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,620 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,620 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,620 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,621 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,622 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,622 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,622 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,622 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,622 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,622 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,622 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,623 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,623 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,623 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,623 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,623 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,623 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,624 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,625 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,626 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-10 19:36:28,627 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,628 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,629 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,630 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,631 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,632 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,633 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,634 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,635 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,636 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,637 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,638 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,638 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-10 19:36:28,638 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 19:36:28,638 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,638 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,639 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,639 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,639 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,639 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,639 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,639 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,639 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,640 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,641 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,642 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,643 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,644 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,645 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,646 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,647 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,648 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,648 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,648 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-10 19:36:28,648 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,648 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-10 19:36:28,648 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,648 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,649 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-10 19:36:28,649 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-10 19:36:28,649 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,649 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,649 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-10 19:36:28,649 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,650 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,650 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,650 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,650 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,650 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,650 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,651 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-10 19:36:28,651 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,651 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,651 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-10 19:36:28,651 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,651 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,651 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,652 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,653 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,654 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,655 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-10 19:36:28,656 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,657 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,657 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,657 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-10 19:36:28,657 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,657 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,658 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,658 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,658 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-10 19:36:28,658 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,658 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-10 19:36:28,658 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,658 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,659 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,660 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,661 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,662 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,662 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-10 19:36:28,662 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,662 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,662 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,663 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,663 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,663 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-10 19:36:28,663 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-10 19:36:28,663 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,664 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,665 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,666 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-10 19:36:28,666 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-10 19:36:28,666 [5629] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-10 19:36:28,666 [5629] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-10 19:36:35,823 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:36:35,823 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 14; new: 11
2021-04-10 19:36:35,823 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[delete] old[1:2] new[1:0]
2021-04-10 19:36:35,824 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[3:12] new[1:10]
2021-04-10 19:36:35,825 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2021-04-10 19:36:35,826 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[4:10] new[2:8]
2021-04-10 19:36:35,826 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 11 (to 10 in part parser)
2021-04-10 19:36:35,826 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[13:14] new[11:11]
2021-04-10 19:36:35,827 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:13,411 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:13,411 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 2
2021-04-10 19:37:13,411 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:13,412 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:13,412 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:11] new[2:2]
2021-04-10 19:37:13,412 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:13,412 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:15,147 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:15,147 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:15,148 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:15,148 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:15,148 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:15,148 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:15,149 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:16,433 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:16,434 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:16,434 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:16,434 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:16,435 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:16,435 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:16,435 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:17,428 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:17,430 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:17,430 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:17,431 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:17,431 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:17,431 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:17,431 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:17,779 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:17,779 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:17,779 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:17,780 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:17,780 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:17,780 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:17,780 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:18,387 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:18,387 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:18,388 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:18,388 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:18,388 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:18,389 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:18,389 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:19,628 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:19,629 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:19,629 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:19,629 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:19,629 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:19,630 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 1 in part parser)
2021-04-10 19:37:19,630 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:20,564 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:20,564 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:20,565 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:20,565 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:20,565 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:20,566 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:20,566 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:20,696 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:20,697 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:20,697 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:20,697 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:20,697 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:20,698 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 1 in part parser)
2021-04-10 19:37:20,699 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:21,436 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:21,436 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:21,436 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:21,436 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:21,437 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:21,437 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:21,437 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:21,608 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:21,609 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:21,609 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:21,610 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:21,610 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:21,611 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 1 in part parser)
2021-04-10 19:37:21,611 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:21,776 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:21,777 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:21,777 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:21,777 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:21,777 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:21,778 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:21,779 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:23,531 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:23,531 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:23,532 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:23,532 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:23,532 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:23,533 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:23,533 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:24,168 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:24,168 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:24,168 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:24,169 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:24,169 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:24,170 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:24,171 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:25,006 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:25,007 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:25,007 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:25,008 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:25,008 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:25,010 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:25,011 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:26,331 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:26,332 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:26,332 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:26,332 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:26,332 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:26,333 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:26,333 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:30,129 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:30,129 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:30,129 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:30,130 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:30,130 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:30,130 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:30,130 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:37:33,177 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:37:33,178 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 19:37:33,178 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:37:33,178 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:37:33,178 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 19:37:33,179 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 19:37:33,179 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:08,152 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:08,153 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 9
2021-04-10 19:38:08,153 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 19:38:08,153 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 19:38:08,153 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:9]
2021-04-10 19:38:08,156 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 9 (to 8 in part parser)
2021-04-10 19:38:08,157 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:16,301 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:16,302 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 14
2021-04-10 19:38:16,302 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-10 19:38:16,302 [5629] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:8] new[1:8]
2021-04-10 19:38:16,302 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:14]
2021-04-10 19:38:16,305 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 14 (to 13 in part parser)
2021-04-10 19:38:16,305 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:36,695 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:36,696 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 14; new: 1
2021-04-10 19:38:36,696 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:14] new[1:1]
2021-04-10 19:38:36,697 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:38:36,697 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:39,062 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:39,063 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:38:39,063 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:38:39,063 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:38:39,063 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:40,848 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:40,849 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:38:40,849 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:38:40,849 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:38:40,850 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:41,735 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:41,736 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:38:41,736 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:38:41,736 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:38:41,737 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:42,856 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:42,857 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:38:42,857 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:38:42,857 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:38:42,858 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:45,561 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:45,561 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:38:45,561 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:38:45,561 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:38:45,561 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:38:46,672 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:38:46,672 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:38:46,672 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:38:46,673 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:38:46,673 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:20,779 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:20,779 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:20,779 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:20,780 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:20,780 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:23,023 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:23,024 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:23,024 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:23,025 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:23,025 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:24,060 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:24,060 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:24,060 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:24,061 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:24,061 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:25,331 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:25,332 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:25,332 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:25,332 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:25,333 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:26,562 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:26,563 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:26,563 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:26,563 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:26,563 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:32,496 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:32,496 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-10 19:40:32,496 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-10 19:40:32,498 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 19:40:32,498 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:36,515 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:36,515 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-10 19:40:36,516 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-10 19:40:36,516 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:36,516 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:37,916 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:37,917 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:37,917 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:37,917 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:37,918 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:38,892 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:38,892 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:38,892 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:38,893 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:38,893 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:41,023 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:41,023 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:41,023 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:41,024 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:41,024 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:43,092 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:43,092 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:43,093 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:43,093 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:43,093 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:44,477 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:44,478 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:44,478 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:44,478 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:44,478 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:44,981 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:44,982 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:44,982 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:44,982 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:44,982 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:48,050 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:48,051 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:48,051 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:48,051 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:48,051 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:40:49,701 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:40:49,702 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:40:49,702 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:40:49,702 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:40:49,702 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:44:36,831 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:44:36,831 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 6
2021-04-10 19:44:36,832 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:6]
2021-04-10 19:44:36,834 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 6 (to 5 in part parser)
2021-04-10 19:44:36,834 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:53:49,084 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:53:49,085 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 1
2021-04-10 19:53:49,085 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:6] new[1:1]
2021-04-10 19:53:49,086 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:53:49,086 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:53:49,145 [5629] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/seaborn/axisgrid.py
2021-04-10 19:53:49,467 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:53:49,467 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:53:49,468 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:53:49,468 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:53:49,469 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 19:54:06,432 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 19:54:06,432 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 19:54:06,433 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 19:54:06,433 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 19:54:06,433 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:10:51,980 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:10:51,985 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:10:51,985 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:10:51,986 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:10:51,986 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:11:22,570 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:11:22,571 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:11:22,571 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:11:22,572 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:11:22,572 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:11:24,222 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:11:24,222 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:11:24,222 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:11:24,223 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:11:24,224 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:11:25,699 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:11:25,699 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:11:25,700 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:11:25,700 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:11:25,701 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:11:27,880 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:11:27,880 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:11:27,881 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:11:27,882 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:11:27,882 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:11:45,139 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:11:45,139 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:11:45,139 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:11:45,140 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:11:45,140 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:12:16,773 [5629] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:12:16,774 [5629] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:12:16,774 [5629] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:12:16,774 [5629] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:12:16,774 [5629] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:13:58,060 [77200] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 20:13:58,061 [77200] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 20:13:58,061 [77200] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 20:13:58,064 [77200] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 20:13:58,065 [77200] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 20:13:58,065 [77200] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 20:13:58,578 [77200] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 20:13:58,578 [77200] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 20:13:58,578 [77200] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 20:13:58,583 [77200] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 20:13:58,583 [77200] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 20:13:58,584 [77200] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 20:17:55,997 [77207] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-10 20:17:55,998 [77207] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-10 20:17:55,998 [77207] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-10 20:17:56,000 [77207] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-10 20:17:56,000 [77207] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-10 20:17:56,000 [77207] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-10 20:21:04,947 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/seaborn/axisgrid.py
2021-04-10 20:21:06,675 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:06,675 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:06,675 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:06,677 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:06,677 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:12,482 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:12,483 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:12,483 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:12,484 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:12,484 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:30,083 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:30,084 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:30,084 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:30,085 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:30,085 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:31,998 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:31,999 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:31,999 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:31,999 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:32,000 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:33,073 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:33,074 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:33,074 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:33,075 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:33,075 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:46,448 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:46,448 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:46,448 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:46,449 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:46,449 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:47,154 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:47,154 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:47,154 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:47,156 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:47,157 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:47,439 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:47,439 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:47,439 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:47,441 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:47,441 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:21:48,109 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:21:48,109 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:21:48,109 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:21:48,110 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:21:48,110 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:22:00,745 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:22:00,746 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:22:00,746 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:22:00,746 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:22:00,746 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:22:03,566 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:22:03,567 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:22:03,567 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:22:03,568 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:22:03,568 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:22:12,430 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:22:12,431 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:22:12,431 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:22:12,432 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:22:12,432 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:22:33,959 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:22:33,959 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:22:33,959 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:22:33,960 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:22:33,960 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:22:34,479 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:22:34,479 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:22:34,480 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:22:34,480 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:22:34,481 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:22:35,949 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:22:35,949 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:22:35,949 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:22:35,950 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:22:35,950 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:22:38,264 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:22:38,264 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:22:38,264 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:22:38,265 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:22:38,265 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:26:33,113 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:26:33,114 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:26:33,114 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:26:33,115 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:26:33,115 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:26:34,622 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:26:34,622 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:26:34,623 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:26:34,624 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:26:34,624 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 20:26:41,891 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 20:26:41,892 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 20:26:41,893 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 20:26:41,895 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 20:26:41,895 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 22:34:22,654 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 22:34:22,655 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 22:34:22,655 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 22:34:22,656 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 22:34:22,656 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 22:34:23,721 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 22:34:23,721 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 22:34:23,721 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 22:34:23,722 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 22:34:23,723 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 22:34:49,437 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 22:34:49,437 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 22:34:49,437 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 22:34:49,438 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 22:34:49,438 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:10:52,278 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:10:52,278 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:10:52,278 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:10:52,279 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:10:52,279 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:10:55,580 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:10:55,581 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:10:55,581 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:10:55,582 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:10:55,582 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:10:56,990 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:10:56,991 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:10:56,991 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:10:56,992 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:10:56,992 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:10:57,541 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:10:57,542 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:10:57,542 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:10:57,544 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:10:57,544 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:10:58,409 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:10:58,409 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:10:58,410 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:10:58,410 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:10:58,411 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:10:59,744 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:10:59,745 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:10:59,745 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:10:59,746 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:10:59,747 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:11:10,548 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:11:10,549 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:11:10,549 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:11:10,550 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:11:10,551 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:11:13,280 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb559514ba8>
2021-04-10 23:11:13,281 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 23:11:13,281 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb559514ba8>
2021-04-10 23:11:13,281 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 23:11:48,899 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb50f010978>
2021-04-10 23:11:48,900 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 23:11:48,900 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb50f010978>
2021-04-10 23:11:48,900 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 23:12:04,540 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:12:04,541 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:12:04,541 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:12:04,542 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:12:04,542 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:12:05,347 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:12:05,348 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:12:05,348 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:12:05,349 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:12:05,349 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:12:09,874 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:12:09,875 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:12:09,875 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:12:09,876 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:12:09,876 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:12:12,711 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb50d6938d0>
2021-04-10 23:12:12,711 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 23:12:12,711 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb50d6938d0>
2021-04-10 23:12:12,711 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 23:12:34,340 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb50ebc9860>
2021-04-10 23:12:34,340 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-10 23:12:34,340 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb50ebc9860>
2021-04-10 23:12:34,341 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-10 23:14:27,615 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:14:27,616 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 23:14:27,616 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 23:14:27,617 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 1 in part parser)
2021-04-10 23:14:27,617 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:14:28,187 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:14:28,188 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:14:28,188 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:14:28,189 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 23:14:28,189 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:14:28,190 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 23:14:28,190 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:14:30,917 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:14:30,917 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:14:30,918 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:14:30,918 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 23:14:30,918 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:14:30,919 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 23:14:30,919 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:14:33,457 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:14:33,458 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:14:33,459 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:14:33,459 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 23:14:33,459 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:14:33,460 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 23:14:33,460 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:14:59,540 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:14:59,540 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:14:59,540 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:14:59,541 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 23:14:59,541 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:14:59,541 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-10 23:14:59,542 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:15:02,332 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:15:02,333 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:15:02,333 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:15:02,333 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-10 23:15:02,333 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:15:02,334 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 1 in part parser)
2021-04-10 23:15:02,334 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:19:11,923 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:19:11,924 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-10 23:19:11,924 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:3]
2021-04-10 23:19:11,925 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-10 23:19:11,925 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:19:14,313 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:19:14,313 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 23:19:14,314 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 23:19:14,314 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 23:19:14,314 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 23:19:14,314 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 23:19:14,315 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:19:17,384 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:19:17,385 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 23:19:17,385 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 23:19:17,386 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 23:19:17,386 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 23:19:17,387 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 23:19:17,387 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:19:19,285 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:19:19,286 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 23:19:19,286 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 23:19:19,286 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 23:19:19,287 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 23:19:19,287 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 23:19:19,287 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:19:25,851 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:19:25,852 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-10 23:19:25,852 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-10 23:19:25,852 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-10 23:19:25,852 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-10 23:19:25,853 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-10 23:19:25,853 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:40:17,637 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:40:17,637 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-10 23:40:17,637 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-10 23:40:17,639 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:40:17,639 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:40:19,216 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:40:19,217 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:40:19,217 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:40:19,218 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:40:19,218 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:40:19,640 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:40:19,640 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:40:19,641 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:40:19,642 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:40:19,642 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:40:21,552 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:40:21,553 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:40:21,553 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:40:21,554 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:40:21,554 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:11,254 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:11,257 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:53:11,257 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:53:11,257 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:53:11,257 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:12,339 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:12,340 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:53:12,340 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:53:12,341 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:53:12,341 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:14,079 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:14,080 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:53:14,080 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:53:14,081 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:53:14,081 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:16,575 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:16,575 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-10 23:53:16,576 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-10 23:53:16,576 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-10 23:53:16,576 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:23,168 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:23,169 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-10 23:53:23,169 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-10 23:53:23,170 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:23,170 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:24,052 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:24,053 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:24,053 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:24,054 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:24,054 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:24,055 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:25,529 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:25,530 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:25,530 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:25,531 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:25,531 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:25,531 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:27,134 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:27,134 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:27,134 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:27,135 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:27,135 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:27,135 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:28,871 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:28,871 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:28,872 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:28,873 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:28,873 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:28,873 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:29,760 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:29,760 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:29,760 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:29,761 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:29,761 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:29,761 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:31,294 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:31,295 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:31,295 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:31,298 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:31,298 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:31,298 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:32,454 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:32,454 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:32,454 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:32,456 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:32,456 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:32,456 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:34,286 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:34,286 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:34,287 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:34,288 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:34,288 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:34,288 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-10 23:53:36,494 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-10 23:53:36,495 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-10 23:53:36,495 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-10 23:53:36,496 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-10 23:53:36,496 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-10 23:53:36,496 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:18:52,737 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:18:52,738 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 4
2021-04-11 00:18:52,738 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:4]
2021-04-11 00:18:52,738 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-11 00:18:52,739 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:19:06,637 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:19:06,637 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 00:19:06,637 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 00:19:06,637 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:19:06,638 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 00:19:06,638 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 00:19:06,638 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:19:07,685 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:19:07,686 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 00:19:07,686 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 00:19:07,686 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:19:07,687 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 00:19:07,687 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 00:19:07,688 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:19:21,389 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:19:21,390 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 00:19:21,390 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 00:19:21,390 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:19:21,391 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 00:19:21,391 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 00:19:21,391 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:19:32,228 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:19:32,229 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 00:19:32,229 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 00:19:32,229 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:19:32,230 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 00:19:32,230 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 00:19:32,230 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:19:32,237 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/PIL/__init__.py
2021-04-11 00:19:43,811 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:19:43,812 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 00:19:43,812 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 00:19:43,812 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:19:43,813 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 00:19:43,813 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 00:19:43,813 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:20:02,211 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:20:02,212 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 00:20:02,212 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 00:20:02,212 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:20:02,213 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 00:20:02,213 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 00:20:02,213 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:20:04,441 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IHDR' 16 13
2021-04-11 00:20:04,442 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'sBIT' 41 4
2021-04-11 00:20:04,443 [77207] DEBUG    PIL.PngImagePlugin:698: [JupyterRequire] b'sBIT' 41 4 (unknown)
2021-04-11 00:20:04,443 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'pHYs' 57 9
2021-04-11 00:20:04,443 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'tEXt' 78 56
2021-04-11 00:20:04,443 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IDAT' 146 8192
2021-04-11 00:20:48,096 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:20:48,097 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 5
2021-04-11 00:20:48,097 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 00:20:48,097 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:20:48,098 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 4 in part parser)
2021-04-11 00:20:48,098 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:5]
2021-04-11 00:20:48,098 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-11 00:20:48,098 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:20:48,230 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:20:48,231 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 00:20:48,231 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 00:20:48,231 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-11 00:20:48,232 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 00:20:48,232 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-11 00:20:48,233 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:20:48,557 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:20:48,557 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 00:20:48,557 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 00:20:48,558 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-11 00:20:48,558 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 00:20:48,559 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-11 00:20:48,559 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:20:51,263 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IHDR' 16 13
2021-04-11 00:20:51,264 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'sBIT' 41 4
2021-04-11 00:20:51,264 [77207] DEBUG    PIL.PngImagePlugin:698: [JupyterRequire] b'sBIT' 41 4 (unknown)
2021-04-11 00:20:51,264 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'pHYs' 57 9
2021-04-11 00:20:51,264 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'tEXt' 78 56
2021-04-11 00:20:51,264 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IDAT' 146 8192
2021-04-11 00:20:58,485 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IHDR' 16 13
2021-04-11 00:20:58,488 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'sBIT' 41 4
2021-04-11 00:20:58,488 [77207] DEBUG    PIL.PngImagePlugin:698: [JupyterRequire] b'sBIT' 41 4 (unknown)
2021-04-11 00:20:58,489 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'pHYs' 57 9
2021-04-11 00:20:58,489 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'tEXt' 78 56
2021-04-11 00:20:58,489 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IDAT' 146 8192
2021-04-11 00:21:13,639 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IHDR' 16 13
2021-04-11 00:21:13,640 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'sBIT' 41 4
2021-04-11 00:21:13,640 [77207] DEBUG    PIL.PngImagePlugin:698: [JupyterRequire] b'sBIT' 41 4 (unknown)
2021-04-11 00:21:13,640 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'pHYs' 57 9
2021-04-11 00:21:13,641 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'tEXt' 78 56
2021-04-11 00:21:13,641 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IDAT' 146 8192
2021-04-11 00:21:21,186 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:21:21,187 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 00:21:21,187 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 00:21:21,187 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-11 00:21:21,187 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 00:21:21,188 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 4 in part parser)
2021-04-11 00:21:21,188 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:21:22,581 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IHDR' 16 13
2021-04-11 00:21:22,582 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'sBIT' 41 4
2021-04-11 00:21:22,582 [77207] DEBUG    PIL.PngImagePlugin:698: [JupyterRequire] b'sBIT' 41 4 (unknown)
2021-04-11 00:21:22,582 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'pHYs' 57 9
2021-04-11 00:21:22,582 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'tEXt' 78 56
2021-04-11 00:21:22,583 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IDAT' 146 8192
2021-04-11 00:21:42,279 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IHDR' 16 13
2021-04-11 00:21:42,280 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'sBIT' 41 4
2021-04-11 00:21:42,280 [77207] DEBUG    PIL.PngImagePlugin:698: [JupyterRequire] b'sBIT' 41 4 (unknown)
2021-04-11 00:21:42,281 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'pHYs' 57 9
2021-04-11 00:21:42,281 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'tEXt' 78 56
2021-04-11 00:21:42,281 [77207] DEBUG    PIL.PngImagePlugin:186: [JupyterRequire] STREAM b'IDAT' 146 8192
2021-04-11 00:42:44,771 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:42:44,774 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 1
2021-04-11 00:42:44,774 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:5] new[1:1]
2021-04-11 00:42:44,775 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:42:44,775 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:42:46,128 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:42:46,128 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:42:46,128 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:42:46,129 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:42:46,129 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:42:47,217 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:42:47,217 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:42:47,218 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:42:47,218 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:42:47,218 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:43:51,250 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:43:51,250 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:43:51,250 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:43:51,251 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:43:51,251 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:43:51,287 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/pyplot.py
2021-04-11 00:48:33,190 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:48:33,193 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 00:48:33,193 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 00:48:33,194 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 00:48:33,194 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:48:33,444 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:48:33,444 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 00:48:33,444 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 00:48:33,445 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:48:33,445 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 00:48:33,445 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 00:48:33,446 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:48:33,668 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:48:33,669 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 00:48:33,669 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 00:48:33,669 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:48:33,670 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 00:48:33,670 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 00:48:33,670 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:48:33,789 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:48:33,789 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 00:48:33,789 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 00:48:33,790 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:48:33,790 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 00:48:33,790 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 00:48:33,790 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:48:33,945 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:48:33,945 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 00:48:33,945 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 00:48:33,946 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 00:48:33,946 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 00:48:33,946 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 00:48:33,947 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:48:36,454 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb439fa3518>
2021-04-11 00:48:36,454 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 00:48:36,454 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb439fa3518>
2021-04-11 00:48:36,454 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 00:48:51,213 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:48:51,214 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 00:48:51,214 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 00:48:51,215 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:48:51,215 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:48:52,975 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:48:52,975 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:48:52,975 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:48:52,976 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:48:52,976 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:48:55,486 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb43b946278>
2021-04-11 00:48:55,486 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 00:48:55,487 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb43b946278>
2021-04-11 00:48:55,487 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 00:49:04,203 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb43baa4550>
2021-04-11 00:49:04,203 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 00:49:04,203 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb43baa4550>
2021-04-11 00:49:04,203 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 00:50:02,349 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:50:02,352 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:50:02,352 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:50:02,352 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:50:02,352 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:50:02,375 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/decomposition/__init__.py
2021-04-11 00:50:32,571 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:50:32,573 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 00:50:32,574 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 00:50:32,574 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 00:50:32,574 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:50:34,228 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:50:34,229 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 00:50:34,229 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 00:50:34,229 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 00:50:34,229 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 00:50:34,230 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 00:50:34,230 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:50:41,618 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:50:41,619 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 00:50:41,619 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 00:50:41,619 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 00:50:41,620 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 00:50:41,620 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 00:50:41,620 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:55:43,529 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:55:43,530 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 00:55:43,530 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 00:55:43,531 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:55:43,531 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:56:07,587 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:56:07,589 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 00:56:07,589 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 00:56:07,591 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 00:56:07,591 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:56:07,617 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/reshape/reshape.py
2021-04-11 00:56:34,601 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:56:34,604 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 00:56:34,604 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 00:56:34,604 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:56:34,604 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:59:07,624 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:59:07,625 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:59:07,625 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:59:07,626 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:59:07,626 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:59:08,276 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:59:08,276 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:59:08,276 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:59:08,277 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:59:08,277 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:59:10,068 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:59:10,069 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:59:10,069 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:59:10,070 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:59:10,070 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:59:36,151 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:59:36,152 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:59:36,152 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:59:36,153 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:59:36,153 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:59:38,525 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:59:38,526 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:59:38,526 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:59:38,527 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:59:38,527 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:59:41,844 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:59:41,844 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:59:41,845 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:59:41,845 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:59:41,845 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 00:59:48,409 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 00:59:48,410 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 00:59:48,410 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 00:59:48,411 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 00:59:48,411 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:00:59,872 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:00:59,873 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:00:59,873 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:00:59,873 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:00:59,873 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:01:40,986 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:01:40,987 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:01:40,987 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:01:40,988 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:01:40,988 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:02:49,740 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:02:49,742 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 6
2021-04-11 01:02:49,742 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:6]
2021-04-11 01:02:49,743 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 6 (to 5 in part parser)
2021-04-11 01:02:49,743 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:02:49,974 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:02:49,974 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-11 01:02:49,975 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 01:02:49,975 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-11 01:02:49,975 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-11 01:02:49,976 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 6 (to 5 in part parser)
2021-04-11 01:02:49,976 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:02:50,096 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:02:50,096 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-11 01:02:50,096 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 01:02:50,097 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-11 01:02:50,097 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-11 01:02:50,097 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 6 (to 5 in part parser)
2021-04-11 01:02:50,097 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:02:50,353 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:02:50,354 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-11 01:02:50,354 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 01:02:50,354 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-11 01:02:50,355 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-11 01:02:50,355 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 6 (to 5 in part parser)
2021-04-11 01:02:50,355 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:00,336 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:00,336 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 7
2021-04-11 01:03:00,337 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 01:03:00,337 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-11 01:03:00,337 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:7]
2021-04-11 01:03:00,337 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 7 (to 6 in part parser)
2021-04-11 01:03:00,338 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:13,025 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:13,026 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 1
2021-04-11 01:03:13,026 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:7] new[1:1]
2021-04-11 01:03:13,026 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:13,027 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:21,304 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:21,304 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 13
2021-04-11 01:03:21,304 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:13]
2021-04-11 01:03:21,308 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 13 (to 12 in part parser)
2021-04-11 01:03:21,309 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:25,749 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:25,749 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 13; new: 2
2021-04-11 01:03:25,749 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:13] new[1:2]
2021-04-11 01:03:25,751 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:03:25,751 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:25,776 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/seaborn/matrix.py
2021-04-11 01:03:33,396 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:33,397 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:03:33,397 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:03:33,397 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:33,397 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:36,123 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:36,125 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:36,126 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:36,126 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:36,126 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:37,114 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:37,115 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:37,115 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:37,115 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:37,115 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:44,315 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:44,315 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:44,316 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:44,316 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:44,316 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:46,760 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:46,761 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:46,761 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:46,761 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:46,762 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:48,275 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:48,275 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:48,276 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:48,276 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:48,276 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:50,978 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:50,978 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:50,979 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:50,979 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:50,979 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:53,306 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:53,306 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:53,306 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:53,307 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:53,307 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:03:55,067 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:03:55,067 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:03:55,067 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:03:55,068 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:03:55,068 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:04:36,752 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:04:36,755 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:04:36,755 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:04:36,755 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:04:36,756 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:04:39,560 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:04:39,560 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:04:39,560 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:04:39,561 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:04:39,561 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:05:00,743 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:05:00,743 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:05:00,743 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:05:00,744 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:05:00,744 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:05:03,223 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:05:03,223 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:05:03,223 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:05:03,224 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:05:03,224 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:05:03,756 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:05:03,757 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:05:03,757 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:05:03,758 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-11 01:05:03,758 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:05:08,375 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:05:08,375 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:05:08,375 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:05:08,376 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:05:08,376 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:05:14,924 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:05:14,924 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:05:14,924 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:05:14,925 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:05:14,925 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:05:54,165 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:05:54,165 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:05:54,166 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:05:54,166 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:05:54,166 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:05:57,253 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:05:57,253 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:05:57,253 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:05:57,254 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:05:57,255 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:05:57,255 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:05:57,255 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:06:01,932 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:06:01,933 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:06:01,933 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:06:01,933 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:06:01,934 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:06:01,934 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:06:01,934 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:06:13,596 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:06:13,597 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 4
2021-04-11 01:06:13,597 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:06:13,597 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:06:13,599 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:06:13,599 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:4]
2021-04-11 01:06:13,599 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:06:16,452 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:06:16,452 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:06:16,452 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:06:16,453 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:06:16,454 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:06:16,454 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:06:16,454 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:06:16,617 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:06:16,618 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:06:16,618 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:06:16,618 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:06:16,620 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:06:16,620 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:06:16,621 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:06:46,458 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:06:46,460 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 3
2021-04-11 01:06:46,460 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:06:46,460 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:06:46,461 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:06:46,461 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:4] new[3:3]
2021-04-11 01:06:46,461 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:07:09,014 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:07:09,015 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 9
2021-04-11 01:07:09,015 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:9]
2021-04-11 01:07:09,018 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 9 (to 8 in part parser)
2021-04-11 01:07:09,018 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:07:35,411 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:07:35,411 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 1
2021-04-11 01:07:35,412 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:9] new[1:1]
2021-04-11 01:07:35,412 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:07:35,412 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:07:35,869 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:07:35,870 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:07:35,870 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:07:35,870 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-11 01:07:35,870 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:07:36,281 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:07:36,282 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:07:36,282 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:07:36,283 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:07:36,283 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:07:38,119 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:07:38,119 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:07:38,119 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:07:38,120 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:07:38,120 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:07:40,182 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:07:40,183 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:07:40,183 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:07:40,183 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:07:40,184 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:07:50,936 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:07:50,936 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 01:07:50,936 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 01:07:50,937 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:07:50,937 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:08:06,608 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:08:06,609 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:08:06,609 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:08:06,609 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:08:06,610 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:08:27,281 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:08:27,282 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:08:27,282 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:08:27,282 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:08:27,282 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:08:43,926 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:08:43,926 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:08:43,926 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:08:43,927 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:08:43,927 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:09:46,371 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:09:46,373 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 5
2021-04-11 01:09:46,373 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:5]
2021-04-11 01:09:46,374 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-11 01:09:46,374 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:09:46,380 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/__init__.py
2021-04-11 01:09:46,404 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/_split.py
2021-04-11 01:10:11,753 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:10:11,753 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 2
2021-04-11 01:10:11,754 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:5] new[1:2]
2021-04-11 01:10:11,754 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:10:11,755 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:10:12,965 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:10:12,965 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:10:12,966 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:10:12,966 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:10:12,966 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:10:12,967 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:10:12,967 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:14:31,026 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:14:31,027 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:14:31,027 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:14:31,027 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:14:31,028 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:14:31,910 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:14:31,910 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:14:31,910 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:14:31,911 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:14:31,911 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:14:34,076 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:14:34,076 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:14:34,077 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:14:34,077 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:14:34,077 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:14:35,559 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:14:35,560 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:14:35,560 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:14:35,561 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:14:35,561 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:14:43,369 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:14:43,369 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:14:43,369 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:14:43,370 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:14:43,370 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:14:53,957 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:14:53,958 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:14:53,958 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:14:53,958 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:14:53,958 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:15:02,071 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:15:02,071 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:15:02,072 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:15:02,072 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:15:02,072 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:15:02,073 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:15:02,073 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:18:44,102 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:18:44,103 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2021-04-11 01:18:44,103 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:18:44,103 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:18:44,103 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:3] new[2:2]
2021-04-11 01:18:44,104 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:18:44,104 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:19:21,058 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:19:21,059 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:19:21,059 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:2]
2021-04-11 01:19:21,060 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:19:21,060 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:22:05,423 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:22:05,424 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:22:05,424 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:22:05,424 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:22:05,425 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:22:43,486 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:22:43,487 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:22:43,487 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:22:43,487 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:22:43,487 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:22:45,394 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:22:45,395 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:22:45,395 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:22:45,395 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:22:45,396 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:22:52,026 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:22:52,026 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:22:52,027 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:22:52,027 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:22:52,027 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:22:55,257 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:22:55,258 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:22:55,258 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:22:55,258 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:22:55,258 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:22:58,337 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:22:58,338 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:22:58,338 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:22:58,338 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:22:58,338 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:23:01,139 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:23:01,140 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:23:01,140 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:23:01,140 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:23:01,140 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:23:50,183 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:23:50,183 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 6
2021-04-11 01:23:50,183 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:6]
2021-04-11 01:23:50,184 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 6 (to 5 in part parser)
2021-04-11 01:23:50,184 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:23:50,190 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/preprocessing/__init__.py
2021-04-11 01:23:50,221 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/preprocessing/_data.py
2021-04-11 01:23:57,461 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:23:57,461 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 2
2021-04-11 01:23:57,462 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:6] new[1:2]
2021-04-11 01:23:57,462 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:23:57,463 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:05,921 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:05,921 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:24:05,922 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:24:05,922 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:24:05,922 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:24:05,922 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:24:05,922 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:09,573 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:09,573 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-11 01:24:09,573 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:24:09,574 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:24:09,574 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[2:1] new[2:2]
2021-04-11 01:24:09,575 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 2 in part parser)
2021-04-11 01:24:09,575 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[2:2] new[3:3]
2021-04-11 01:24:09,575 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:1] new[3:3]
2021-04-11 01:24:09,575 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:13,661 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:13,662 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:24:13,662 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:24:13,662 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:24:13,662 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:24:13,662 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 2 in part parser)
2021-04-11 01:24:13,662 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:15,413 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:15,413 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:24:15,413 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:24:15,414 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:24:15,414 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:24:15,415 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:24:15,415 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:23,467 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:23,467 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 01:24:23,467 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 01:24:23,468 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:24:23,468 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:27,407 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:27,407 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:24:27,407 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:24:27,407 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:24:27,408 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:29,527 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:29,527 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 01:24:29,527 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[1:0] new[1:1]
2021-04-11 01:24:29,528 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2021-04-11 01:24:29,528 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[2:2]
2021-04-11 01:24:29,529 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:0] new[2:2]
2021-04-11 01:24:29,529 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:41,633 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:41,634 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:24:41,634 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:24:41,634 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:24:41,635 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:42,694 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:42,695 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:24:42,695 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:24:42,695 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:24:42,696 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:44,495 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:44,495 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:24:44,495 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:24:44,496 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:24:44,496 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:24:46,696 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:24:46,697 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:24:46,697 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:24:46,697 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:24:46,698 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:25:03,172 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:25:03,173 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 01:25:03,173 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 01:25:03,174 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:25:03,174 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:25:09,527 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:25:09,527 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:25:09,527 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:25:09,528 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:25:09,528 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:25:09,528 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:25:09,528 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:27:34,677 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:27:34,678 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:27:34,678 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:27:34,678 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:27:34,678 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:27:44,952 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:27:44,953 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:27:44,953 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:27:44,953 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:27:44,953 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:24,754 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:24,754 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:24,754 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:24,755 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:24,755 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:24,763 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/__init__.py
2021-04-11 01:28:24,882 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:24,882 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:24,882 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:24,882 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:24,883 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:25,122 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:25,122 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:25,122 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:25,122 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:25,123 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:25,242 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:25,242 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:25,242 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:25,242 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:25,243 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:25,386 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:25,386 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:25,386 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:25,387 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:25,387 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:25,648 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:25,648 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:25,648 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:25,649 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:25,649 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:26,699 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:26,700 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:26,700 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:26,700 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:26,701 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:28:26,848 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:28:26,848 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:28:26,849 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:28:26,849 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:28:26,849 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:30:29,537 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:30:29,537 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:30:29,537 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:30:29,538 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:30:29,539 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:30:32,385 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:30:32,386 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2021-04-11 01:30:32,386 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:30:32,386 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:30:32,387 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:3] new[2:2]
2021-04-11 01:30:32,387 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:30:32,387 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:30:36,188 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:30:36,189 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-11 01:30:36,189 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:30:36,189 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:30:36,189 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[2:1] new[2:2]
2021-04-11 01:30:36,190 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 2 in part parser)
2021-04-11 01:30:36,190 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[2:2] new[3:3]
2021-04-11 01:30:36,190 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:1] new[3:3]
2021-04-11 01:30:36,190 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:30:46,818 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:30:46,819 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:30:46,819 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:30:46,819 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:30:46,820 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:30:46,820 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 2 in part parser)
2021-04-11 01:30:46,820 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[3:3] new[3:3]
2021-04-11 01:30:46,821 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:2] new[3:3]
2021-04-11 01:30:46,821 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:31:11,188 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:31:11,189 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2021-04-11 01:31:11,189 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:2]
2021-04-11 01:31:11,190 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:31:11,190 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:31:23,205 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:31:23,206 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:31:23,206 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:2]
2021-04-11 01:31:23,207 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:31:23,207 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:31:28,210 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:31:28,211 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-11 01:31:28,211 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:31:28,211 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:31:28,212 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[2:1] new[2:2]
2021-04-11 01:31:28,212 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 2 in part parser)
2021-04-11 01:31:28,213 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[2:2] new[3:3]
2021-04-11 01:31:28,213 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:1] new[3:3]
2021-04-11 01:31:28,213 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:31:47,735 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:31:47,735 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:31:47,735 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:3]
2021-04-11 01:31:47,736 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:31:47,737 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:32:01,675 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:32:01,675 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2021-04-11 01:32:01,676 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:32:01,676 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:32:01,676 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:3] new[2:2]
2021-04-11 01:32:01,677 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:32:01,677 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:32:40,523 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:32:40,523 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:32:40,523 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:32:40,524 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:32:40,524 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:32:42,561 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:32:42,562 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:32:42,562 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:32:42,563 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:32:42,563 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:32:44,393 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:32:44,394 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:32:44,394 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:32:44,395 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:32:44,395 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:33:25,921 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:33:25,922 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:33:25,922 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:33:25,922 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:33:25,922 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:33:26,227 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:33:26,227 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:33:26,227 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:33:26,228 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-11 01:33:26,228 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:33:27,142 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:33:27,142 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:33:27,143 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:33:27,143 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:33:27,143 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:33:32,160 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:33:32,161 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:33:32,161 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:33:32,161 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:33:32,162 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:33:34,174 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:33:34,174 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:33:34,174 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:33:34,175 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:33:34,175 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:33:35,133 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:33:35,134 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 01:33:35,134 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 01:33:35,135 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:33:35,135 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:33:35,814 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:33:35,814 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:33:35,814 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:33:35,815 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 01:33:35,816 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:33:35,816 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:02,227 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:02,227 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 01:34:02,228 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 01:34:02,228 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:34:02,228 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:04,722 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:04,723 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:34:04,723 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:34:04,724 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:34:04,724 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:06,794 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:06,794 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:34:06,794 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:34:06,795 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:34:06,795 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:07,926 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:07,926 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:34:07,927 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:34:07,927 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:34:07,927 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:13,468 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:13,469 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:34:13,469 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:34:13,469 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-11 01:34:13,470 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:14,100 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:14,101 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:34:14,101 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:34:14,102 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:34:14,102 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:19,987 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:19,987 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:34:19,987 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:34:19,988 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:34:19,988 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:20,473 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:20,473 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:34:20,474 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:34:20,474 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:20,475 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 2 in part parser)
2021-04-11 01:34:20,475 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:34:20,475 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:20,713 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:20,714 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:34:20,714 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:34:20,714 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:20,715 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:34:20,715 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:34:20,716 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:21,669 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:21,669 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:34:21,669 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:34:21,670 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:21,670 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:34:21,670 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:34:21,670 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:23,350 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:23,351 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:34:23,351 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:34:23,351 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:23,352 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 2 in part parser)
2021-04-11 01:34:23,352 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:34:23,352 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:23,876 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:23,876 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:34:23,877 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:34:23,877 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:23,878 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:34:23,878 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:34:23,878 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:24,775 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:24,775 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:34:24,775 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:34:24,776 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:24,777 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 2 in part parser)
2021-04-11 01:34:24,777 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:34:24,777 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:29,310 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:29,311 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 4
2021-04-11 01:34:29,311 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:34:29,311 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:29,312 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:29,313 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:4]
2021-04-11 01:34:29,313 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:29,395 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:29,395 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:34:29,395 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:29,396 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:29,397 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:29,397 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:34:29,398 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:30,410 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:30,411 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:34:30,411 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:30,411 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:30,413 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:30,413 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:34:30,413 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:31,747 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:31,748 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:34:31,748 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:31,748 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:31,749 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:31,749 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:34:31,749 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:32,660 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:32,661 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:34:32,661 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:32,661 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:32,662 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:32,662 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:34:32,663 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:34,566 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:34,567 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:34:34,567 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:34,567 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:34,569 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:34,569 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:34:34,569 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:35,211 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:35,211 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:34:35,212 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:35,212 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:35,214 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:35,214 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:34:35,214 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:35,996 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:35,996 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:34:35,997 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:35,997 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:35,998 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 01:34:35,998 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:34:35,999 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:36,895 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:36,895 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 5
2021-04-11 01:34:36,895 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:34:36,896 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:36,897 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 5 (to 4 in part parser)
2021-04-11 01:34:36,898 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:5]
2021-04-11 01:34:36,898 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:37,346 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:37,346 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:34:37,346 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:34:37,347 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:37,348 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 5 (to 4 in part parser)
2021-04-11 01:34:37,349 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:34:37,349 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:37,937 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:37,938 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:34:37,938 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:34:37,939 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:37,940 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 5 (to 4 in part parser)
2021-04-11 01:34:37,940 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:34:37,941 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:34:39,281 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:34:39,281 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:34:39,282 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:34:39,282 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:34:39,283 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 5 (to 4 in part parser)
2021-04-11 01:34:39,284 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:34:39,284 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:04,349 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:04,350 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 2
2021-04-11 01:35:04,350 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:04,351 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:04,351 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:5] new[2:2]
2021-04-11 01:35:04,352 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:04,352 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:04,927 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:04,927 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:04,927 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:04,928 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:04,928 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:04,928 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:04,928 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:05,308 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:05,309 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:05,309 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:05,309 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:05,310 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:05,310 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:05,310 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:07,379 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:07,379 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:07,380 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:07,380 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:07,380 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:07,380 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:07,380 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:08,741 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:08,741 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:08,741 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:08,742 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:08,742 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:08,742 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:08,743 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:08,874 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:08,874 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:08,875 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:08,875 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:08,875 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:08,876 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:08,876 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:09,608 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:09,608 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:09,609 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:09,609 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:09,609 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:09,610 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:09,610 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:09,706 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:09,707 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:09,707 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:09,707 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:09,708 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:09,708 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:09,708 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:12,322 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:12,322 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:12,322 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:12,323 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:12,323 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:12,323 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:12,323 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:12,714 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:12,715 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 01:35:12,715 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:12,716 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:12,716 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 01:35:12,716 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 01:35:12,717 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:24,025 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:24,026 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 5
2021-04-11 01:35:24,026 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:35:24,026 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:35:24,026 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:5]
2021-04-11 01:35:24,027 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 5 (to 4 in part parser)
2021-04-11 01:35:24,027 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:24,350 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:24,351 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:35:24,351 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:35:24,351 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:35:24,352 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 6 (to 4 in part parser)
2021-04-11 01:35:24,353 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:35:24,353 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:24,719 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:24,719 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:35:24,720 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:35:24,720 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:35:24,721 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 5 (to 4 in part parser)
2021-04-11 01:35:24,722 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:35:24,722 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:25,602 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:25,602 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:35:25,602 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:35:25,602 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:35:25,603 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 5 (to 4 in part parser)
2021-04-11 01:35:25,603 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:35:25,604 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:25,928 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:25,928 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:35:25,929 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:35:25,929 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:35:25,931 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 6 (to 4 in part parser)
2021-04-11 01:35:25,931 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:35:25,931 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:35:26,933 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:35:26,933 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:35:26,934 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:35:26,934 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:35:26,935 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 5 (to 4 in part parser)
2021-04-11 01:35:26,935 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:5]
2021-04-11 01:35:26,935 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:36:03,840 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:36:03,840 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 6
2021-04-11 01:36:03,841 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:36:03,841 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:36:03,842 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 6 (to 5 in part parser)
2021-04-11 01:36:03,843 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[5:6]
2021-04-11 01:36:03,843 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:36:10,301 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:36:10,302 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 7
2021-04-11 01:36:10,302 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 01:36:10,302 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:36:10,304 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 7 (to 6 in part parser)
2021-04-11 01:36:10,304 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:7]
2021-04-11 01:36:10,304 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:23,405 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:23,406 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 3
2021-04-11 01:38:23,406 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:7] new[1:3]
2021-04-11 01:38:23,407 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:38:23,407 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:24,730 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:24,731 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:24,731 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:24,731 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:24,732 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:24,732 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:24,733 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:26,061 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:26,062 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:26,062 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:26,062 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:26,062 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:26,063 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:26,063 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:27,179 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:27,180 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:27,180 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:27,180 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:27,181 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:27,181 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:27,181 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:28,628 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:28,628 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:28,629 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:28,629 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:28,629 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:28,630 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:28,630 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:30,067 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:30,068 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:30,068 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:30,068 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:30,068 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:30,069 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:30,069 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:31,149 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:31,150 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:31,150 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:31,150 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:31,150 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:31,151 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:31,151 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:33,690 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:33,691 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:33,691 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:33,691 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:33,692 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:33,692 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:33,692 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:34,956 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:34,956 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:34,957 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:34,957 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:34,957 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:34,958 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:34,958 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:40,153 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:40,153 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:40,154 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:40,154 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:40,154 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:40,155 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:40,155 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:58,062 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:58,065 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:58,065 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:58,065 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:58,065 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:58,066 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:58,066 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:38:58,831 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:38:58,832 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:38:58,832 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:38:58,833 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:38:58,833 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:38:58,833 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:38:58,834 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:39:11,511 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:39:11,511 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:39:11,511 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:39:11,512 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:39:11,512 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:39:11,512 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-11 01:39:11,512 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:39:16,613 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:39:16,613 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 4
2021-04-11 01:39:16,613 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:39:16,614 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 01:39:16,614 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:4]
2021-04-11 01:39:16,614 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-11 01:39:16,615 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:39:17,005 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:39:17,005 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:39:17,006 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:39:17,006 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-11 01:39:17,006 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:39:17,007 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-11 01:39:17,007 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:39:17,237 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:39:17,237 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 01:39:17,237 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 01:39:17,238 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-11 01:39:17,238 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 01:39:17,238 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-11 01:39:17,238 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:39:32,083 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:39:32,085 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 6
2021-04-11 01:39:32,085 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 01:39:32,085 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:39:32,085 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[2:1] new[2:2]
2021-04-11 01:39:32,086 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 4 in part parser)
2021-04-11 01:39:32,086 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[2:2] new[3:3]
2021-04-11 01:39:32,086 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[3:2] new[4:4]
2021-04-11 01:39:32,087 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 5 in part parser)
2021-04-11 01:39:32,087 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[3:3] new[5:5]
2021-04-11 01:39:32,087 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[6:6]
2021-04-11 01:39:32,087 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 7 (to 5 in part parser)
2021-04-11 01:39:32,087 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:39:42,392 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:39:42,392 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 5
2021-04-11 01:39:42,393 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-11 01:39:42,393 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:3] new[1:3]
2021-04-11 01:39:42,394 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 4 in part parser)
2021-04-11 01:39:42,394 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:6] new[5:5]
2021-04-11 01:39:42,394 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:39:59,219 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:39:59,220 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 5
2021-04-11 01:39:59,220 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:5] new[1:5]
2021-04-11 01:39:59,221 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-11 01:39:59,221 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:40:19,104 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:40:19,106 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 1
2021-04-11 01:40:19,106 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:5] new[1:1]
2021-04-11 01:40:19,107 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:40:19,107 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:40:20,170 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:40:20,171 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:40:20,171 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:40:20,171 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:40:20,171 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:40:20,835 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:40:20,835 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:40:20,835 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:40:20,835 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:40:20,836 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:40:22,431 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:40:22,432 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:40:22,432 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:40:22,432 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:40:22,432 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:40:52,827 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:40:52,827 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:40:52,827 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:40:52,827 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:40:52,827 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:41:15,377 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:41:15,378 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:41:15,378 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:41:15,378 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:41:15,379 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:41:34,906 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:41:34,907 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:41:34,907 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:41:34,908 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:41:34,908 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:41:34,908 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:41:34,909 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:41:35,350 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:41:35,351 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:41:35,351 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:41:35,352 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:41:35,353 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:41:35,353 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:41:35,353 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:43:20,748 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:43:20,750 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 01:43:20,751 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 01:43:20,751 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:43:20,751 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:43:26,168 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:43:26,168 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:43:26,168 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:43:26,169 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:43:26,169 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:43:27,267 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:43:27,267 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:43:27,267 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:43:27,268 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:43:27,268 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:43:45,797 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:43:45,798 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:43:45,798 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:43:45,799 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:43:45,799 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:43:48,188 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:43:48,188 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:43:48,189 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:43:48,189 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:43:48,189 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:43:48,190 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:43:48,190 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:43:50,526 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:43:50,527 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:43:50,527 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:43:50,528 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:43:50,528 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:43:50,528 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:43:50,529 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:10,364 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:10,366 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 01:44:10,366 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 01:44:10,368 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:44:10,368 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:11,242 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:11,242 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:44:11,243 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:44:11,243 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:44:11,243 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:12,590 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:12,591 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:44:12,591 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:44:12,592 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:44:12,592 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:31,621 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:31,623 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:44:31,623 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:44:31,624 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:44:31,624 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:32,553 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:32,554 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:44:32,554 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:44:32,555 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:44:32,555 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:33,972 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:33,972 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:44:33,973 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:44:33,973 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:44:33,973 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:39,781 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:39,782 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:44:39,782 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:44:39,783 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:44:39,783 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:40,398 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:40,398 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:44:40,398 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:44:40,399 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:44:40,400 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:44:40,402 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:44:40,402 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:41,411 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:41,412 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:44:41,412 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:44:41,412 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:44:41,414 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:44:41,414 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:44:41,414 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:42,959 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:42,960 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:44:42,960 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:44:42,960 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:44:42,962 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:44:42,962 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:44:42,962 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:43,348 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:43,349 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:44:43,349 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:44:43,350 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:44:43,351 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:44:43,351 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:44:43,351 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:43,832 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:43,833 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:44:43,833 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:44:43,833 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:44:43,834 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:44:43,835 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:44:43,835 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:44,878 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:44,878 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:44:44,878 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:44:44,879 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:44:44,880 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:44:44,880 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:44:44,881 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:44:46,884 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:44:46,884 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:44:46,884 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:44:46,885 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:44:46,886 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:44:46,886 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:44:46,886 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:47:05,025 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:47:05,026 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 01:47:05,026 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 01:47:05,027 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:47:05,027 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:47:06,443 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:47:06,443 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:47:06,443 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:47:06,444 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:47:06,444 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:47:10,166 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:47:10,166 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:47:10,167 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:47:10,167 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:47:10,167 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:47:10,180 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/arraysetops.py
2021-04-11 01:47:11,877 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:47:11,877 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:47:11,877 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:47:11,878 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:47:11,879 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:49:15,293 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:49:15,293 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:49:15,293 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:49:15,294 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:49:15,294 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:50:15,659 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:50:15,659 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:50:15,659 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:50:15,660 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:50:15,661 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:50:15,661 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:50:15,661 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:51:28,873 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:51:28,876 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 01:51:28,876 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 01:51:28,877 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:51:28,877 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:51:30,273 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:51:30,274 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:51:30,274 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:51:30,275 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:51:30,275 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:51:31,130 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:51:31,131 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:51:31,131 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:51:31,132 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:51:31,132 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:51:32,516 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:51:32,516 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:51:32,517 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:51:32,517 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:51:32,518 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:51:34,068 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:51:34,068 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:51:34,068 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:51:34,070 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:51:34,070 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:51:35,016 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:51:35,016 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:51:35,016 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:51:35,018 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:51:35,018 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:53:05,796 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:53:05,798 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:53:05,798 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:53:05,799 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:53:05,799 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:54:01,808 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:54:01,809 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 6
2021-04-11 01:54:01,809 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:6]
2021-04-11 01:54:01,810 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 6 (to 5 in part parser)
2021-04-11 01:54:01,810 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:54:03,730 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:54:03,731 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 6
2021-04-11 01:54:03,731 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 01:54:03,731 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-11 01:54:03,732 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:6]
2021-04-11 01:54:03,732 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 6 (to 5 in part parser)
2021-04-11 01:54:03,732 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:12,890 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:12,892 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 3
2021-04-11 01:56:12,893 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:56:12,893 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 2 in part parser)
2021-04-11 01:56:12,893 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[2:2] new[2:2]
2021-04-11 01:56:12,894 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:12,894 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:6] new[3:3]
2021-04-11 01:56:12,894 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:13,522 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:13,522 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:56:13,522 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:56:13,523 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:56:13,524 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:13,524 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:56:13,524 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:22,378 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:22,378 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:56:22,379 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:56:22,379 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:56:22,380 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:22,380 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:56:22,380 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:29,401 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:29,402 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:56:29,402 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:56:29,403 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:56:29,403 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:29,404 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:56:29,404 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:35,810 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:35,811 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:56:35,811 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:56:35,811 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:56:35,812 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:35,813 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:56:35,813 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:41,967 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:41,967 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:56:41,967 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:56:41,968 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:56:41,969 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:41,969 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:56:41,969 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:48,817 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:48,817 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:56:48,817 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:56:48,818 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:56:48,819 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:48,819 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:56:48,819 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:56:57,423 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:56:57,423 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:56:57,423 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:56:57,423 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:56:57,424 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:56:57,425 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:56:57,425 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:57:14,550 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:57:14,551 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:57:14,551 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:57:14,551 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:57:14,552 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:57:14,552 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:57:14,553 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:57:42,695 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:57:42,697 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 01:57:42,697 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 01:57:42,698 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:57:42,698 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:57:46,507 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:57:46,508 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:57:46,508 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:57:46,509 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:57:46,509 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:57:49,557 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:57:49,558 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:57:49,558 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:57:49,558 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:57:49,559 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:57:52,737 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:57:52,737 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:57:52,737 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:57:52,738 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:57:52,738 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:57:53,285 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:57:53,286 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:57:53,286 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:57:53,286 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:57:53,287 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:58:04,962 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:58:04,963 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 01:58:04,963 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 01:58:04,963 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 01:58:04,964 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:58:19,707 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:58:19,708 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 01:58:19,708 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 01:58:19,709 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 01:58:19,709 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:58:21,135 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:58:21,136 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:58:21,136 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:58:21,136 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:58:21,137 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:58:21,138 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:58:21,138 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:58:25,710 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:58:25,710 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:58:25,710 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:58:25,711 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:58:25,712 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:58:25,713 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:58:25,713 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 01:59:05,683 [77207] WARNING  py.warnings:99: [JupyterRequire] /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:329: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
  "the coef_ did not converge", ConvergenceWarning)

2021-04-11 01:59:49,966 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 01:59:49,968 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-11 01:59:49,968 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 01:59:49,969 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 01:59:49,970 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 01:59:49,970 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-11 01:59:49,970 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:00:58,279 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:00:58,281 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 7
2021-04-11 02:00:58,281 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:7]
2021-04-11 02:00:58,282 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 7 (to 6 in part parser)
2021-04-11 02:00:58,283 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:00:58,296 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/metrics/__init__.py
2021-04-11 02:01:25,815 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb49d1ea208>
2021-04-11 02:01:25,816 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 02:01:25,816 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb49d1ea208>
2021-04-11 02:01:25,816 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 02:02:28,104 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:02:28,105 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 1
2021-04-11 02:02:28,105 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:7] new[1:1]
2021-04-11 02:02:28,106 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 02:02:28,106 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:02:28,557 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:02:28,558 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 02:02:28,558 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 02:02:28,559 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 02:02:28,559 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:02:28,574 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/cm.py
2021-04-11 02:02:30,330 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb437fa20f0>
2021-04-11 02:02:30,330 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 02:02:30,330 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb437fa20f0>
2021-04-11 02:02:30,330 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 02:02:39,181 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:02:39,181 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 02:02:39,182 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 02:02:39,183 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 02:02:39,183 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:02:47,981 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:02:47,981 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 02:02:47,981 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 02:02:47,982 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 02:02:47,983 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:02:52,026 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:02:52,026 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 02:02:52,026 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 02:02:52,027 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 02:02:52,027 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:02:56,288 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb47c3cef60>
2021-04-11 02:02:56,288 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 02:02:56,288 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb47c3cef60>
2021-04-11 02:02:56,289 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 02:02:59,134 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:02:59,135 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 02:02:59,135 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 02:02:59,136 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 02:02:59,136 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:03:03,898 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb438e78908>
2021-04-11 02:03:03,898 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 02:03:03,898 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb438e78908>
2021-04-11 02:03:03,898 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 02:23:51,514 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 02:23:51,515 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 02:23:51,515 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 02:23:51,516 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 02:23:51,516 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 02:23:53,669 [77207] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb49d04a0b8>
2021-04-11 02:23:53,669 [77207] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 02:23:53,670 [77207] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fb49d04a0b8>
2021-04-11 02:23:53,670 [77207] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 03:07:09,727 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:07:09,730 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2021-04-11 03:07:09,732 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2021-04-11 03:07:09,733 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 3 in part parser)
2021-04-11 03:07:09,734 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-11 03:07:09,734 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:07:10,364 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:07:10,364 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 03:07:10,364 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 03:07:10,365 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:07:10,366 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 3 in part parser)
2021-04-11 03:07:10,366 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 03:07:10,366 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-11 03:07:10,367 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:07:11,014 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:07:11,014 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 03:07:11,015 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 03:07:11,015 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:07:11,017 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 3 in part parser)
2021-04-11 03:07:11,017 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-11 03:07:11,017 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 3 in part parser)
2021-04-11 03:07:11,017 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:07:46,310 [77207] WARNING  py.warnings:99: [JupyterRequire] /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/utils/validation.py:72: FutureWarning: Pass test_size=0         0
1         0
2         0
3         0
4         1
         ..
159995    1
159996    0
159997    1
159998    0
159999    1
Name: y, Length: 158392, dtype: int64 as keyword args. From version 1.0 (renaming of 0.25) passing these as positional arguments will result in an error
  "will result in an error", FutureWarning)

2021-04-11 03:09:59,791 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:09:59,793 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-11 03:09:59,793 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 03:09:59,793 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:09:59,794 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 3 in part parser)
2021-04-11 03:09:59,795 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:4] new[3:4]
2021-04-11 03:09:59,795 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 4 (to 3 in part parser)
2021-04-11 03:09:59,795 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:10:54,707 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:10:54,708 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 6
2021-04-11 03:10:54,708 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 03:10:54,708 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:10:54,709 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 6 (to 5 in part parser)
2021-04-11 03:10:54,710 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:4] new[3:6]
2021-04-11 03:10:54,710 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:11:17,757 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:11:17,758 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 7
2021-04-11 03:11:17,758 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 03:11:17,758 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:11:17,760 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 6 (to 6 in part parser)
2021-04-11 03:11:17,760 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:7]
2021-04-11 03:11:17,761 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 7 (to 6 in part parser)
2021-04-11 03:11:17,761 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:12:34,251 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:12:34,252 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 8
2021-04-11 03:12:34,252 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:12:34,253 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:12:34,253 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:7] new[7:8]
2021-04-11 03:12:34,254 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-11 03:12:34,254 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:14:09,000 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:14:09,001 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 7
2021-04-11 03:14:09,001 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:14:09,001 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:14:09,002 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:8] new[7:7]
2021-04-11 03:14:09,002 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 7 (to 6 in part parser)
2021-04-11 03:14:09,002 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:14:20,699 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:14:20,699 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 8
2021-04-11 03:14:20,700 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:14:20,700 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:14:20,700 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:7] new[7:8]
2021-04-11 03:14:20,702 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-11 03:14:20,702 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:14:21,022 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/collections/abc.py
2021-04-11 03:14:21,024 [77207] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/collections/abc.pyi
2021-04-11 03:15:38,278 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:15:38,279 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 11
2021-04-11 03:15:38,279 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:15:38,279 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:15:38,279 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:8] new[7:11]
2021-04-11 03:15:38,282 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 11 (to 10 in part parser)
2021-04-11 03:15:38,282 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:15:58,078 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:15:58,078 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 8
2021-04-11 03:15:58,078 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-11 03:15:58,079 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:15:58,080 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-11 03:15:58,080 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:11] new[8:8]
2021-04-11 03:15:58,080 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:19:33,290 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:19:33,291 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 1
2021-04-11 03:19:33,291 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:8] new[1:1]
2021-04-11 03:19:33,291 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:19:33,291 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:19:47,264 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:19:47,264 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 11
2021-04-11 03:19:47,264 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:11]
2021-04-11 03:19:47,266 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 11 (to 10 in part parser)
2021-04-11 03:19:47,267 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:20:53,854 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:20:53,856 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 1
2021-04-11 03:20:53,857 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:11] new[1:1]
2021-04-11 03:20:53,857 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:20:53,858 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:21:34,438 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:21:34,439 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 03:21:34,439 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 03:21:34,440 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:21:34,440 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:21:39,239 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:21:39,239 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 03:21:39,239 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 03:21:39,240 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:21:39,240 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:21:49,964 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:21:49,965 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 03:21:49,965 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 03:21:49,966 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:21:49,966 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:22:15,337 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:22:15,337 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 03:22:15,337 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 03:22:15,338 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:22:15,338 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:22:21,940 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:22:21,940 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 03:22:21,940 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 03:22:21,941 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:22:21,941 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:22:33,191 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:22:33,191 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 03:22:33,191 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 03:22:33,192 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:22:33,192 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:24:07,889 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:24:07,889 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 03:24:07,889 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 03:24:07,890 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 03:24:07,890 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:38:42,975 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:38:42,975 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 6
2021-04-11 03:38:42,976 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:6]
2021-04-11 03:38:42,977 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 6 (to 5 in part parser)
2021-04-11 03:38:42,977 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:38:52,063 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:38:52,064 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 9
2021-04-11 03:38:52,064 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 03:38:52,064 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:38:52,065 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 6 (to 7 in part parser)
2021-04-11 03:38:52,066 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:9]
2021-04-11 03:38:52,067 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 9 (to 8 in part parser)
2021-04-11 03:38:52,067 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:39:06,257 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:39:06,258 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 8
2021-04-11 03:39:06,258 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-11 03:39:06,258 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:39:06,259 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-11 03:39:06,259 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:9] new[8:8]
2021-04-11 03:39:06,259 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:39:16,176 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:39:16,176 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 8
2021-04-11 03:39:16,177 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:7] new[1:7]
2021-04-11 03:39:16,177 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:39:16,178 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-11 03:39:16,178 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[8:8] new[8:8]
2021-04-11 03:39:16,178 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:39:41,553 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:39:41,554 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 6
2021-04-11 03:39:41,554 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 03:39:41,555 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:39:41,556 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 6 (to 5 in part parser)
2021-04-11 03:39:41,556 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:8] new[6:6]
2021-04-11 03:39:41,556 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:39:56,285 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:39:56,286 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 9
2021-04-11 03:39:56,286 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 03:39:56,286 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 03:39:56,287 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 6 (to 7 in part parser)
2021-04-11 03:39:56,288 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:9]
2021-04-11 03:39:56,289 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 9 (to 8 in part parser)
2021-04-11 03:39:56,289 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:40:46,691 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:40:46,691 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 7
2021-04-11 03:40:46,691 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:40:46,692 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:40:46,692 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:9] new[7:7]
2021-04-11 03:40:46,692 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 7 (to 6 in part parser)
2021-04-11 03:40:46,692 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:40:48,055 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:40:48,055 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 7
2021-04-11 03:40:48,055 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:40:48,056 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:40:48,056 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:7] new[7:7]
2021-04-11 03:40:48,056 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 7 (to 6 in part parser)
2021-04-11 03:40:48,056 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:41:13,567 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:41:13,568 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 7
2021-04-11 03:41:13,568 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:41:13,568 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:41:13,568 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:7] new[7:7]
2021-04-11 03:41:13,568 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 7 (to 6 in part parser)
2021-04-11 03:41:13,568 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:43:25,395 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:43:25,395 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 11
2021-04-11 03:43:25,395 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-11 03:43:25,395 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:43:25,396 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:7] new[7:11]
2021-04-11 03:43:25,399 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 11 (to 10 in part parser)
2021-04-11 03:43:25,399 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 03:44:56,596 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 03:44:56,596 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 11
2021-04-11 03:44:56,596 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:10] new[1:10]
2021-04-11 03:44:56,597 [77207] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-11 03:44:56,600 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 11 (to 10 in part parser)
2021-04-11 03:44:56,600 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[11:11] new[11:11]
2021-04-11 03:44:56,600 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:09:52,990 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:09:52,997 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 1
2021-04-11 12:09:52,999 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:11] new[1:1]
2021-04-11 12:09:53,001 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 12:09:53,001 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:11:52,739 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:11:52,739 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 12:11:52,739 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 12:11:52,741 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 12:11:52,741 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:12:18,883 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:12:18,884 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 12:12:18,884 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 12:12:18,884 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 12:12:18,884 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:14:42,734 [77207] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-11 12:14:42,734 [77207] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-11 12:14:42,734 [77207] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-11 12:14:42,737 [77207] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-11 12:14:42,738 [77207] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-11 12:14:42,738 [77207] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-11 12:17:43,619 [77207] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:17:43,620 [77207] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 12:17:43,620 [77207] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 12:17:43,621 [77207] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 12:17:43,621 [77207] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:23:39,810 [19904] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-11 12:23:39,811 [19904] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-11 12:23:39,811 [19904] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-11 12:23:39,814 [19904] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-11 12:23:39,814 [19904] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-11 12:23:39,815 [19904] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-11 12:23:50,260 [19904] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-11 12:23:50,262 [19904] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-11 12:23:50,265 [19904] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-11 12:23:50,266 [19904] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-11 12:23:50,268 [19904] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-11 12:23:50,268 [19904] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-11 12:23:50,268 [19904] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-11 12:23:50,268 [19904] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-11 12:23:50,734 [19904] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-11 12:23:50,767 [19904] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-11 12:23:50,910 [19904] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-11 12:23:50,915 [19904] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-11 12:26:04,000 [19904] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2021-04-11 12:26:04,001 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,001 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,001 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,001 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,002 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,003 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,004 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,005 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,005 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,005 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,005 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 12:26:04,005 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,006 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,007 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,008 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,008 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,008 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,008 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,008 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,008 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 12:26:04,009 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,009 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,009 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,009 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,009 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,009 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,010 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,010 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,010 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,010 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,010 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,011 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,011 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,011 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,011 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,011 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,011 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,011 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,012 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,012 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,012 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,012 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,012 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,013 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,013 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,013 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,013 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,013 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,014 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,014 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,014 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,014 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,014 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,015 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,015 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,015 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,015 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,015 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,016 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,016 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 12:26:04,016 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,016 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,017 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,017 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,017 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,017 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,017 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,017 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,018 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,018 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,018 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,018 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,018 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,019 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,020 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,021 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,022 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,023 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,024 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,025 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,026 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 12:26:04,027 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,028 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,029 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,030 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,031 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,032 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,032 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,032 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,032 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,032 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,032 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,033 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,033 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,033 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,033 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,033 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,033 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,033 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,034 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,034 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,034 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,034 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,034 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,034 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,035 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,035 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,035 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,035 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 12:26:04,035 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,035 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 12:26:04,036 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 12:26:04,037 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,037 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,037 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,037 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,037 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,037 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,038 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,039 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,040 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,040 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,040 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,040 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,040 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,040 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,041 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,042 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,043 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,044 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,045 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,046 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,047 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,048 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,048 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,048 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,048 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,048 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 12:26:04,048 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,048 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,049 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,050 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,051 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 12:26:04,052 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,053 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,054 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 12:26:04,055 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,056 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 12:26:04,056 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,056 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,056 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,056 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,056 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 12:26:04,057 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,058 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,059 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,060 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,061 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,062 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,062 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,062 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,062 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,062 [19904] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 12:26:04,072 [19904] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
2021-04-11 12:26:04,072 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,073 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,074 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,075 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,076 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 12:26:04,077 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,078 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,078 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,078 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,078 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,078 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,078 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,079 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,080 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,081 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,082 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,083 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,084 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,085 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,086 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,086 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 12:26:04,086 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,086 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,086 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,086 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,087 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,088 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,089 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 12:26:04,090 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,091 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,092 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,093 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,094 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,094 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,094 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,094 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,094 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,094 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,094 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,095 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,096 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,097 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,098 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,099 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,100 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,101 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,102 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,102 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,102 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,102 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,102 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 12:26:04,102 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 12:26:04,102 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,103 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,104 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,105 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,106 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,107 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 12:26:04,108 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,109 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,110 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,110 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,110 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,110 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,110 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,111 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 12:26:04,112 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,113 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,114 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,115 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,116 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,116 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,116 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,116 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,116 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,116 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,117 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,117 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,117 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,117 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,117 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,117 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,117 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,118 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,119 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,120 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,121 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 12:26:04,122 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,123 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,124 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,124 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,124 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,124 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,124 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,125 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,126 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,127 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,128 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,128 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,128 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,128 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,128 [19904] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 12:26:04,643 [19904] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2021-04-11 12:26:04,643 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,644 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,645 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,646 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,647 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 12:26:04,648 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,648 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,648 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,648 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,648 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,648 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,648 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,649 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,650 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,651 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,652 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,653 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,654 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,655 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,656 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,656 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,656 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,656 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,656 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,656 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,657 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,658 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,659 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,660 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,661 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,662 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,663 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,664 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,664 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,664 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,664 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,664 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,664 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,664 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,665 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,666 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,667 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 12:26:04,668 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,669 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,670 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 12:26:04,671 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,672 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,672 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,672 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,672 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,672 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,672 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,672 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,673 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 12:26:04,674 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,675 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,676 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,677 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,678 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,678 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,678 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,678 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,678 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,678 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,679 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 12:26:04,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 12:26:04,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 12:26:04,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 12:26:04,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 12:26:04,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 12:26:04,697 [19904] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 12:26:51,001 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-04-11 12:26:51,059 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-04-11 12:26:51,127 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/typing.py
2021-04-11 12:26:51,140 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2021-04-11 12:27:09,619 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:27:09,619 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 12:27:09,620 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 12:27:09,620 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 12:27:09,620 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:27:09,676 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/frame.py
2021-04-11 12:27:09,705 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/__init__.py
2021-04-11 12:27:09,706 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/__init__.py
2021-04-11 12:27:09,766 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/generic.py
2021-04-11 12:27:09,844 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/base.py
2021-04-11 12:27:09,852 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/accessor.py
2021-04-11 12:27:09,877 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/indexing.py
2021-04-11 12:27:09,888 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/_typing.py
2021-04-11 12:27:09,895 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/_libs/__init__.py
2021-04-11 12:27:09,970 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/abc.py
2021-04-11 12:27:09,971 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
2021-04-11 12:27:18,575 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:27:18,575 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 12:27:18,576 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 12:27:18,577 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 12:27:18,577 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:27:34,980 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:27:34,980 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 12:27:34,981 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 12:27:34,981 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 12:27:34,982 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:29:32,944 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:29:32,945 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 4
2021-04-11 12:29:32,945 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:29:32,945 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:29:32,945 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:4]
2021-04-11 12:29:32,946 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2021-04-11 12:29:32,946 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:29:49,173 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:29:49,173 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2021-04-11 12:29:49,174 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2021-04-11 12:29:49,174 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 12:29:49,174 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:29:53,931 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:29:53,932 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 12:29:53,932 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 12:29:53,932 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 12:29:53,933 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:29:53,964 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/series.py
2021-04-11 12:30:05,359 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:30:05,359 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2021-04-11 12:30:05,359 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2021-04-11 12:30:05,361 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-11 12:30:05,361 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:31:07,894 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:31:07,895 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 5
2021-04-11 12:31:07,895 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 12:31:07,895 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 12:31:07,896 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 5 (to 4 in part parser)
2021-04-11 12:31:07,896 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:5]
2021-04-11 12:31:07,896 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:31:23,299 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:31:23,300 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 4
2021-04-11 12:31:23,300 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-11 12:31:23,300 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 12:31:23,301 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-11 12:31:23,301 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:5] new[4:4]
2021-04-11 12:31:23,301 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:31:41,050 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:31:41,051 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 2
2021-04-11 12:31:41,051 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:31:41,051 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:31:41,051 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:4] new[2:2]
2021-04-11 12:31:41,052 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 12:31:41,052 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:32:18,672 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:32:18,673 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 12:32:18,673 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:32:18,673 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:32:18,673 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 12:32:18,674 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 12:32:18,674 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:34:10,063 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:34:10,063 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 12:34:10,064 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:34:10,064 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:34:10,064 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 12:34:10,066 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 12:34:10,066 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:34:32,137 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:34:32,137 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 12:34:32,137 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:34:32,138 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:34:32,138 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 12:34:32,139 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 12:34:32,139 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:34:53,763 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:34:53,763 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 12:34:53,763 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:34:53,764 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:34:53,764 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 12:34:53,765 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 12:34:53,765 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:35:30,256 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:35:30,257 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 12:35:30,257 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:35:30,257 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:35:30,257 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 12:35:30,258 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 12:35:30,259 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:35:58,124 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:35:58,124 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 12:35:58,124 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:35:58,125 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:35:58,125 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 12:35:58,127 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 12:35:58,127 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:37:15,292 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:37:15,292 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-11 12:37:15,292 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 12:37:15,293 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 12:37:15,293 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:3]
2021-04-11 12:37:15,294 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 12:37:15,294 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:37:34,719 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:37:34,720 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 6
2021-04-11 12:37:34,720 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 12:37:34,720 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 12:37:34,720 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:6]
2021-04-11 12:37:34,721 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 6 (to 5 in part parser)
2021-04-11 12:37:34,721 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:37:50,187 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:37:50,188 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 9
2021-04-11 12:37:50,188 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 12:37:50,188 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-11 12:37:50,188 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:9]
2021-04-11 12:37:50,190 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 9 (to 8 in part parser)
2021-04-11 12:37:50,190 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:38:22,056 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:38:22,057 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-11 12:38:22,057 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-11 12:38:22,057 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:8] new[1:8]
2021-04-11 12:38:22,057 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-11 12:38:22,058 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-11 12:38:22,058 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:39:17,167 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:39:17,167 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-11 12:39:17,168 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-11 12:39:17,168 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:8] new[1:8]
2021-04-11 12:39:17,168 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-11 12:39:17,169 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-11 12:39:17,169 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:40:02,182 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:40:02,185 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-11 12:40:02,185 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-11 12:40:02,185 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:8] new[1:8]
2021-04-11 12:40:02,185 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-11 12:40:02,186 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-11 12:40:02,186 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:40:38,442 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:40:38,442 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-11 12:40:38,442 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-11 12:40:38,443 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:8] new[1:8]
2021-04-11 12:40:38,443 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-11 12:40:38,444 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-11 12:40:38,444 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:41:00,830 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:41:00,831 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-11 12:41:00,831 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-11 12:41:00,831 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:8] new[1:8]
2021-04-11 12:41:00,831 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-11 12:41:00,833 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-11 12:41:00,833 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 12:41:59,253 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 12:41:59,254 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-11 12:41:59,254 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-11 12:41:59,254 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:8] new[1:8]
2021-04-11 12:41:59,255 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-11 12:41:59,257 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 9 to 9 (to 8 in part parser)
2021-04-11 12:41:59,257 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:28:49,268 [19904] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-04-11 13:28:49,269 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,269 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,269 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,269 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,270 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,270 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,270 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,270 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,270 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,270 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,271 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,272 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,273 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,274 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,275 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,276 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,277 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,278 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,279 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,280 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,281 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,282 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,283 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,284 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,285 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,285 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,285 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,285 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,285 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,285 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,286 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,287 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,288 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,288 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 13:28:49,288 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:49,288 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,288 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,289 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,289 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,289 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,289 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,289 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,290 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,290 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,290 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,290 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,291 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 13:28:49,291 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,291 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,292 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,292 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,292 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,292 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:49,293 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,293 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,293 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,293 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 13:28:49,293 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,293 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,294 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,294 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,294 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,294 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,294 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 13:28:49,294 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,295 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,296 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,297 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,298 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,299 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,300 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,301 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:49,302 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,303 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,304 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,305 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,306 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,307 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,308 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,309 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,310 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,311 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,312 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,312 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 13:28:49,312 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,312 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,313 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,314 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,315 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,316 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,317 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,318 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,319 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,320 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,321 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,322 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:49,323 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,324 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:49,325 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:49,326 [19904] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 13:28:56,680 [19904] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2021-04-11 13:28:56,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,680 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,681 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,682 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,683 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,684 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,685 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,686 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,687 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,688 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,689 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,690 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,691 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,692 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,693 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,694 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,695 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 13:28:56,696 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,697 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 13:28:56,698 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 13:28:56,699 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:56,700 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,701 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,702 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,703 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,704 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,705 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,706 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 13:28:56,707 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,708 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,709 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,710 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,711 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,712 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,713 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,714 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,715 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,716 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 13:28:56,717 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,718 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,719 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,720 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:56,721 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,722 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,723 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,724 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,725 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,726 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,727 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 13:28:56,728 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 13:28:56,728 [19904] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 13:28:56,728 [19904] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 13:29:00,762 [19904] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9a87f1a9b0>
2021-04-11 13:29:00,763 [19904] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 13:29:00,763 [19904] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f9a87f1a9b0>
2021-04-11 13:29:00,763 [19904] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 13:29:21,893 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:29:21,894 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 1
2021-04-11 13:29:21,894 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:9] new[1:1]
2021-04-11 13:29:21,894 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:29:21,894 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:29:56,582 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:29:56,583 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 13:29:56,583 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 13:29:56,583 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:29:56,583 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:31:01,498 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:31:01,499 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 13:31:01,499 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 13:31:01,499 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:31:01,500 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:31:15,281 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:31:15,282 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 13:31:15,282 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 13:31:15,282 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:31:15,283 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:31:31,241 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:31:31,241 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2021-04-11 13:31:31,241 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2021-04-11 13:31:31,243 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-11 13:31:31,243 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:31:31,247 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/__init__.py
2021-04-11 13:31:31,250 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/__init__.py
2021-04-11 13:31:31,275 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_logistic.py
2021-04-11 13:31:31,293 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_base.py
2021-04-11 13:31:31,309 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/base.py
2021-04-11 13:31:31,530 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/utils/__init__.py
2021-04-11 13:31:31,545 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/utils/validation.py
2021-04-11 13:31:31,565 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/functools.py
2021-04-11 13:31:31,569 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/functools.pyi
2021-04-11 13:31:34,337 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:31:34,338 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2021-04-11 13:31:34,338 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2021-04-11 13:31:34,339 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:31:34,339 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:31:35,952 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:31:35,952 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 13:31:35,953 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 13:31:35,953 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:31:35,953 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:31:38,650 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:31:38,651 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 13:31:38,651 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 13:31:38,652 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 13:31:38,652 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:32:16,185 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:32:16,186 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 5
2021-04-11 13:32:16,186 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:5]
2021-04-11 13:32:16,187 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-11 13:32:16,187 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:32:16,200 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/__init__.py
2021-04-11 13:32:16,221 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/_split.py
2021-04-11 13:32:33,109 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:32:33,109 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 1
2021-04-11 13:32:33,109 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:5] new[1:1]
2021-04-11 13:32:33,110 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:32:33,110 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:33:27,748 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:33:27,749 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 13:33:27,749 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 13:33:27,749 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:33:27,750 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:33:27,819 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/decomposition/__init__.py
2021-04-11 13:34:00,726 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:34:00,726 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 13:34:00,727 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 13:34:00,727 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 13:34:00,728 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:34:00,756 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/preprocessing/_data.py
2021-04-11 13:35:48,263 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:35:48,263 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 8
2021-04-11 13:35:48,264 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:8]
2021-04-11 13:35:48,265 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 8 (to 7 in part parser)
2021-04-11 13:35:48,265 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:35:56,801 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:35:56,801 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 2
2021-04-11 13:35:56,801 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:8] new[1:2]
2021-04-11 13:35:56,802 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 13:35:56,802 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:36:14,610 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:36:14,610 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 8
2021-04-11 13:36:14,610 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:8]
2021-04-11 13:36:14,611 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 8 (to 7 in part parser)
2021-04-11 13:36:14,612 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:37:01,534 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:37:01,534 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 2
2021-04-11 13:37:01,534 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 13:37:01,535 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 13:37:01,535 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:8] new[2:2]
2021-04-11 13:37:01,535 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 13:37:01,535 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:39:04,316 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:39:04,317 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 10
2021-04-11 13:39:04,317 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[1:0] new[1:8]
2021-04-11 13:39:04,318 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 8 (to 8 in part parser)
2021-04-11 13:39:04,318 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[9:10]
2021-04-11 13:39:04,318 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[9:10]
2021-04-11 13:39:04,318 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:42:01,009 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:42:01,010 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 10; new: 1
2021-04-11 13:42:01,010 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:10] new[1:1]
2021-04-11 13:42:01,010 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:42:01,010 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:42:49,964 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:42:49,965 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 13:42:49,965 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 13:42:49,965 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:42:49,966 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:43:12,788 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:43:12,788 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 13:43:12,788 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 13:43:12,789 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 13:43:12,789 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 13:44:28,667 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 13:44:28,668 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 13
2021-04-11 13:44:28,668 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:13]
2021-04-11 13:44:28,669 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 13 (to 12 in part parser)
2021-04-11 13:44:28,669 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:00:17,858 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:00:17,859 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 13; new: 2
2021-04-11 14:00:17,859 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:13] new[1:2]
2021-04-11 14:00:17,860 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 14:00:17,860 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:01:39,669 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:01:39,669 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 5
2021-04-11 14:01:39,669 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:5]
2021-04-11 14:01:39,670 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-11 14:01:39,670 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:03:39,603 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:03:39,603 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 3
2021-04-11 14:03:39,604 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 14:03:39,604 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 14:03:39,604 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 14:03:39,604 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:5] new[3:3]
2021-04-11 14:03:39,604 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:03:47,080 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:03:47,081 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 14:03:47,081 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 14:03:47,081 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:03:47,081 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:06:24,917 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:06:24,918 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:06:24,918 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:06:24,918 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:06:24,919 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:06:55,759 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:06:55,759 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:06:55,759 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:06:55,760 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:06:55,760 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:07:16,888 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:07:16,888 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:07:16,889 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:07:16,889 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:07:16,889 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:07:18,794 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:07:18,794 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:07:18,795 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:07:18,795 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:07:18,795 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:07:34,286 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:07:34,286 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:07:34,287 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:07:34,287 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:07:34,287 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:07:35,513 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:07:35,513 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:07:35,513 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:07:35,514 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:07:35,514 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:07:36,889 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:07:36,890 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:07:36,890 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:07:36,890 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:07:36,890 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:08:03,410 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:08:03,411 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:08:03,411 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:08:03,411 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:08:03,412 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:11:51,351 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:11:51,353 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 14:11:51,353 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 14:11:51,354 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 14:11:51,354 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:12:43,023 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:12:43,023 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 14:12:43,023 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 14:12:43,024 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:12:43,024 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:12:44,658 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:12:44,659 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:12:44,659 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:12:44,660 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:12:44,660 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:12:44,668 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/__init__.py
2021-04-11 14:13:15,420 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:13:15,421 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:13:15,421 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:13:15,421 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:13:15,422 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:13:20,011 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:13:20,011 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 14:13:20,011 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 14:13:20,012 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 14:13:20,012 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:14:19,343 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:14:19,343 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 14:14:19,343 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 14:14:19,344 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:14:19,344 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:15:17,007 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:15:17,008 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:15:17,008 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:15:17,008 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:15:17,008 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:15:24,628 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:15:24,628 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:15:24,628 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:15:24,629 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:15:24,629 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:17:04,773 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:17:04,773 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:17:04,773 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:17:04,774 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:17:04,774 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:18:34,050 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:18:34,051 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:18:34,051 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:18:34,051 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:18:34,051 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:18:49,625 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:18:49,626 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:18:49,626 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:18:49,626 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:18:49,627 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:19:13,498 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:19:13,499 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:19:13,499 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:19:13,499 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:19:13,499 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:21:18,144 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:21:18,144 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 14:21:18,144 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:21:18,145 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:21:18,145 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:21:54,966 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:21:54,966 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 14:21:54,966 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 14:21:54,968 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 14:21:54,969 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:22:13,482 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:22:13,483 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 14:22:13,483 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 14:22:13,483 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 14:22:13,483 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 14:22:13,484 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 1 in part parser)
2021-04-11 14:22:13,484 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:23:23,218 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:23:23,218 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 14:23:23,218 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 14:23:23,219 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:23:23,219 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:24:57,713 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:24:57,713 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 14:24:57,714 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 14:24:57,715 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 14:24:57,716 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:25:10,464 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:25:10,466 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 14:25:10,466 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 14:25:10,466 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 14:25:10,467 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 14:25:10,467 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 14:25:10,467 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:43:06,841 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:43:06,841 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 5
2021-04-11 14:43:06,842 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:5]
2021-04-11 14:43:06,843 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-11 14:43:06,843 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:43:06,855 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/decomposition/_pca.py
2021-04-11 14:43:06,862 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/decomposition/_base.py
2021-04-11 14:43:48,725 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:43:48,726 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 3
2021-04-11 14:43:48,726 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 14:43:48,726 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 2 in part parser)
2021-04-11 14:43:48,726 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[2:2] new[2:2]
2021-04-11 14:43:48,726 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 14:43:48,727 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:5] new[3:3]
2021-04-11 14:43:48,727 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:44:27,067 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:44:27,067 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-11 14:44:27,068 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-11 14:44:27,068 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:44:27,069 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:45:55,776 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:45:55,776 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-11 14:45:55,776 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-11 14:45:55,778 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-11 14:45:55,778 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:46:26,629 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:46:26,630 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 6
2021-04-11 14:46:26,630 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-11 14:46:26,630 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-11 14:46:26,630 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:6]
2021-04-11 14:46:26,632 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 6 (to 5 in part parser)
2021-04-11 14:46:26,633 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:46:33,310 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:46:33,310 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 7
2021-04-11 14:46:33,310 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-11 14:46:33,311 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-11 14:46:33,311 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:6] new[6:7]
2021-04-11 14:46:33,313 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 7 (to 6 in part parser)
2021-04-11 14:46:33,313 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 14:47:20,910 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 14:47:20,910 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 1
2021-04-11 14:47:20,910 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:7] new[1:1]
2021-04-11 14:47:20,910 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 14:47:20,911 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 15:00:26,454 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 15:00:26,454 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 15
2021-04-11 15:00:26,454 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:15]
2021-04-11 15:00:26,455 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 15 (to 14 in part parser)
2021-04-11 15:00:26,455 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 15:00:58,182 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 15:00:58,182 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 15; new: 16
2021-04-11 15:00:58,182 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:14] new[1:14]
2021-04-11 15:00:58,182 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:14] new[1:14]
2021-04-11 15:00:58,183 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[15:15] new[15:16]
2021-04-11 15:00:58,183 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 15 to 16 (to 15 in part parser)
2021-04-11 15:00:58,183 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 15:00:58,209 [19904] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/_search.py
2021-04-11 15:16:11,413 [19904] WARNING  py.warnings:99: [JupyterRequire] /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_sag.py:329: ConvergenceWarning:

The max_iter was reached which means the coef_ did not converge


2021-04-11 15:27:20,822 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 15:27:20,825 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 16; new: 1
2021-04-11 15:27:20,825 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:16] new[1:1]
2021-04-11 15:27:20,826 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 15:27:20,826 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 15:28:43,833 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 15:28:43,833 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 15:28:43,833 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 15:28:43,834 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 15:28:43,834 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 15:40:09,160 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 15:40:09,162 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 15:40:09,162 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 15:40:09,163 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 15:40:09,163 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:24:23,097 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:24:23,098 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:24:23,098 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:24:23,098 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:24:23,098 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:27:59,606 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:27:59,607 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:27:59,607 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:27:59,607 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:27:59,607 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:28:39,256 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:28:39,256 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:28:39,256 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:28:39,257 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:28:39,257 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:28:57,831 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:28:57,832 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:28:57,832 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:28:57,833 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:28:57,833 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:29:26,987 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:29:26,987 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:29:26,987 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:29:26,988 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:29:26,988 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:34:19,582 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:34:19,584 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:34:19,585 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:34:19,585 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 0 in part parser)
2021-04-11 18:34:19,586 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:34:42,299 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:34:42,300 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:34:42,300 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:34:42,301 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:34:42,301 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:34:52,270 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:34:52,271 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:34:52,271 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:34:52,272 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:34:52,272 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:34:57,825 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:34:57,825 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:34:57,825 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:34:57,826 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:34:57,826 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:35:28,506 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:35:28,506 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 18:35:28,506 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 18:35:28,507 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 18:35:28,507 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:35:43,606 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:35:43,606 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 18:35:43,607 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 18:35:43,607 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 18:35:43,607 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 18:35:56,740 [19904] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 18:35:56,740 [19904] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 18:35:56,740 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 18:35:56,740 [19904] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 18:35:56,741 [19904] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 18:35:56,741 [19904] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 18:35:56,741 [19904] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:28:53,964 [9532] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-11 20:28:53,964 [9532] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-11 20:28:53,964 [9532] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-11 20:28:53,966 [9532] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-11 20:28:53,967 [9532] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-11 20:28:53,967 [9532] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-11 20:29:10,449 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-04-11 20:29:10,495 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-04-11 20:30:11,854 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:30:11,856 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 20:30:11,857 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 20:30:11,857 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:30:11,857 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:30:11,919 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/typing.py
2021-04-11 20:30:11,931 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2021-04-11 20:30:31,820 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:30:31,820 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:30:31,820 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:30:31,821 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:30:31,821 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:30:32,437 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:30:32,438 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:30:32,438 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:30:32,438 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:30:32,439 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:30:35,300 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:30:35,300 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:30:35,300 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:30:35,300 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:30:35,301 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:30:35,315 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/_search.py
2021-04-11 20:30:35,324 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/__init__.py
2021-04-11 20:30:35,331 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/base.py
2021-04-11 20:31:43,959 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:31:43,961 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:31:43,961 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:31:43,961 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:31:43,961 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:31:48,830 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:31:48,830 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:31:48,831 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:31:48,831 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:31:48,831 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:32:30,716 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:32:30,718 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:32:30,718 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:32:30,719 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:32:30,719 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:33:39,999 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:33:40,002 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:33:40,002 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:33:40,003 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:33:40,003 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:33:48,711 [9532] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-11 20:33:48,711 [9532] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-11 20:33:48,715 [9532] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-11 20:33:48,715 [9532] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-11 20:33:48,717 [9532] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-11 20:33:48,717 [9532] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-11 20:33:48,718 [9532] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-11 20:33:48,718 [9532] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jedi.inference.finder', 'jedi.inference.star_args', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'scipy.sparse', 'scipy.sparse.base', 'scipy.sparse.sputils', 'scipy._lib._util', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', '_cython_0_29_18', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'typing_extensions', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.spatial._geometric_slerp', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._numdiff', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._group_columns', 'scipy.optimize._differentiable_functions', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize._nnls', 'scipy.optimize.__nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate._quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.special.cython_special', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._hypotests', 'scipy.stats._wilcoxon_data', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'pkg_resources', 'zipfile', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._tags', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.utils.multiclass', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.utils._encode', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.utils.stats', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.det_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.utils._random', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.utils._pprint', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-11 20:33:48,858 [9532] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-11 20:33:48,863 [9532] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-11 20:33:49,020 [9532] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-11 20:33:49,021 [9532] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-11 20:34:16,892 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:34:16,893 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:34:16,893 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:34:16,894 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:34:16,894 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:34:16,900 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/__init__.py
2021-04-11 20:34:16,961 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/frame.py
2021-04-11 20:34:16,985 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/__init__.py
2021-04-11 20:34:17,050 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/generic.py
2021-04-11 20:34:17,085 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/base.py
2021-04-11 20:34:17,094 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/accessor.py
2021-04-11 20:34:17,118 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/indexing.py
2021-04-11 20:34:17,132 [9532] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/_typing.py
2021-04-11 20:35:17,528 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:35:17,528 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 20:35:17,529 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 20:35:17,529 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 20:35:17,529 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:35:29,057 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:35:29,058 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 20:35:29,058 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 20:35:29,058 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 20:35:29,058 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:35:30,597 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:35:30,598 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 20:35:30,598 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 20:35:30,598 [9532] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 20:35:30,598 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 20:35:30,599 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 20:35:30,599 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:36:11,579 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:36:11,581 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 2
2021-04-11 20:36:11,581 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 20:36:11,581 [9532] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 20:36:11,581 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:2]
2021-04-11 20:36:11,582 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 2 (to 1 in part parser)
2021-04-11 20:36:11,582 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 20:36:21,928 [9532] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 20:36:21,929 [9532] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 3
2021-04-11 20:36:21,929 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-11 20:36:21,929 [9532] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-11 20:36:21,929 [9532] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:3]
2021-04-11 20:36:21,930 [9532] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-11 20:36:21,930 [9532] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 21:52:07,588 [15827] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-11 21:52:07,589 [15827] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-11 21:52:07,589 [15827] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-11 21:52:07,594 [15827] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-11 21:52:07,595 [15827] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-11 21:52:07,596 [15827] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-11 22:21:08,461 [15827] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-11 22:21:08,465 [15827] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-11 22:21:08,473 [15827] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-11 22:21:08,473 [15827] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-11 22:21:08,633 [15827] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-11 22:21:08,633 [15827] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-11 22:21:08,634 [15827] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-11 22:21:08,635 [15827] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-11 22:21:13,362 [15827] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-11 22:21:13,371 [15827] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-11 22:21:15,485 [15827] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-11 22:21:15,610 [15827] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-11 22:22:35,224 [15827] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2021-04-11 22:22:35,302 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:35,302 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:35,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 22:22:35,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 22:22:35,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 22:22:35,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 22:22:35,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:35,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:22:35,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,312 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,380 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,380 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,380 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,380 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,381 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,381 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,381 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,381 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,382 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 22:22:35,382 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,382 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,382 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,382 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,383 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,383 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,383 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,383 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:35,384 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 22:22:35,384 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,384 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,384 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,384 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,385 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,385 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,385 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,385 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,385 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 22:22:35,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:35,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,465 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,465 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,469 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,469 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,469 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:35,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 22:22:35,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:35,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 22:22:35,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,479 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,479 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,479 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,479 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,479 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,480 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:35,480 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,480 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 22:22:35,480 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,481 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,481 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,481 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,481 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,481 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,566 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,567 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,567 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,567 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,568 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,568 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,568 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,568 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,569 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,569 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,569 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,569 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,569 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,570 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,570 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,570 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,570 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,571 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,571 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,571 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,571 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,572 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,572 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,572 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,572 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,572 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,573 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,573 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,573 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,573 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,574 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,574 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,574 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,574 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,574 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,575 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,575 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 22:22:35,575 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:35,575 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,575 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,576 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,576 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,576 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,576 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,650 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,651 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,651 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,651 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,651 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,652 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:22:35,652 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,652 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,652 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,652 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,653 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,653 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:35,653 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,653 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,654 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,654 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:22:35,654 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,654 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,654 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:35,655 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,655 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,655 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,655 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 22:22:35,655 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:22:35,656 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:35,656 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,656 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:22:35,656 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,656 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,657 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,657 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:35,657 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,657 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,657 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,657 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,658 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,658 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,658 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:35,658 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,658 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,659 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,659 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,659 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,659 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:35,659 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,660 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,660 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,660 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,751 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,751 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,752 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,752 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,752 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,752 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,752 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,753 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,753 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:22:35,753 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,753 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,753 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,754 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,754 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,754 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,754 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,754 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,755 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,755 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,755 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,755 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,755 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,755 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:35,756 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,756 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,756 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,756 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:35,756 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,757 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,757 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,757 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:35,757 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,757 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,757 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,758 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,758 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,758 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,758 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,760 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,760 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 22:22:35,760 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,761 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,761 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,761 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,761 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,761 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,762 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,762 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,822 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 22:22:35,823 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 22:22:35,823 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,823 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,823 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,823 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,823 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,824 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:35,824 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,824 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,824 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:35,824 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,825 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 22:22:35,825 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:22:35,825 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,825 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:35,825 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,825 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,826 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,826 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 22:22:35,826 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:22:35,826 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,827 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,827 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:35,827 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,827 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,827 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,828 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,828 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,828 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,828 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,828 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 22:22:35,829 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,829 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,829 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,829 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:35,830 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:35,830 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:35,830 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,830 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,830 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,830 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:22:35,831 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,831 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,831 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,831 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,831 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,832 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,907 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,907 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,907 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,907 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,907 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,908 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,908 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,908 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,908 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,908 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,908 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,909 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,909 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:35,909 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,909 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,909 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,910 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:22:35,910 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,910 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,910 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,910 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,911 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,911 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,911 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,911 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,911 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,912 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:22:35,912 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,912 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,912 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,912 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,913 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,913 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,913 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,913 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,913 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,914 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,914 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,914 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,914 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,915 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,915 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,915 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,915 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,915 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,916 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,916 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,916 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,926 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,927 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,927 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,927 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,927 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,928 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,928 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 22:22:35,928 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,928 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:22:35,928 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,928 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,929 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:35,929 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:35,929 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,929 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,929 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:35,930 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,930 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,930 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,930 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,930 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,931 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,931 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,931 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 22:22:35,931 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,931 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:35,932 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 22:22:35,932 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,932 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,932 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 22:22:35,932 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,933 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:22:35,933 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:35,933 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:35,933 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:35,933 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,044 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,044 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,044 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,044 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,045 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,045 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,045 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,045 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,045 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,046 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,046 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,046 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,046 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,046 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,047 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 22:22:36,047 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,047 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,047 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,047 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,048 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,048 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,048 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,048 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,048 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,049 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,049 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,049 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,049 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,049 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,050 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,050 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,050 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,050 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:36,050 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,051 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,051 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,051 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:36,051 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,051 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,052 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,052 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:36,052 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,052 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,052 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,053 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,053 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:22:36,053 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,053 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 22:22:36,110 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,110 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,111 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,111 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,111 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,112 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,112 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,112 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,112 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,112 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,113 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,113 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,113 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 22:22:36,113 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:22:36,113 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,114 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,114 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,114 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,114 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,114 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,115 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 22:22:36,115 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,115 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:22:36,115 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,116 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,116 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,116 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,116 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,116 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,117 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,117 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,117 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,117 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,117 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,118 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,118 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,118 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:36,118 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,119 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,119 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,119 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,119 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,119 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,120 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,120 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,120 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,120 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 22:22:36,193 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,193 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,193 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,193 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,193 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 22:22:36,194 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,194 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,194 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:36,194 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,194 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,195 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,195 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:36,195 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,195 [15827] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 22:22:36,216 [15827] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
2021-04-11 22:22:36,216 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,344 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,344 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,344 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,345 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,345 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 22:22:36,345 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,345 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,345 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,346 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,346 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,346 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,346 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 22:22:36,346 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 22:22:36,346 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,347 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,347 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,347 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,348 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,348 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,348 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,348 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,349 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,349 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,349 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,349 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,350 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 22:22:36,350 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,350 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,350 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:36,350 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,351 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:22:36,351 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,351 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,351 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,351 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,351 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,352 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,352 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,352 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,352 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,352 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,352 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,353 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,353 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 22:22:36,353 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,353 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,353 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,354 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,433 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,433 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,434 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,434 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,434 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 22:22:36,434 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,434 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,434 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,435 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,435 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,435 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,435 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,435 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,435 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,436 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,436 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 22:22:36,436 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,436 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,436 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,437 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,437 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,437 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,437 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,437 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,437 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,438 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,438 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,438 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,438 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,438 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,439 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,439 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,439 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,439 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,439 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,440 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,440 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,440 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:36,440 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,440 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,440 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,441 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,441 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,441 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,441 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 22:22:36,441 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,442 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,442 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:36,442 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,442 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,443 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,533 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,534 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,534 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,534 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,534 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,534 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,535 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,535 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,535 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,535 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,536 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,536 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,536 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,536 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,536 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,537 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,537 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 22:22:36,537 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,537 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,538 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,538 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,538 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,538 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,538 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,539 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,539 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,539 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 22:22:36,539 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,540 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,540 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,540 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,540 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,541 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,541 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,541 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,541 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,541 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,541 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,542 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,542 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,542 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,542 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,542 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,543 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,543 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,543 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,543 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,543 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,543 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,606 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,606 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,606 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,606 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,607 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,607 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,607 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,607 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,607 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,608 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,609 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,610 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,610 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,610 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,610 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,610 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,610 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,611 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,611 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:22:36,611 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,611 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,611 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,612 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,612 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,612 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:36,612 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,612 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,613 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,613 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:22:36,613 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,613 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,614 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,614 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,614 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,614 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,614 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 22:22:36,615 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:22:36,615 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:36,615 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,615 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:22:36,616 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,616 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,616 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,685 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:36,686 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,686 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,686 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,686 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,686 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,687 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,687 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:36,687 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,687 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,687 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,688 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,688 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,688 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,688 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,688 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,689 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,689 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,689 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,689 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,689 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,690 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,690 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,690 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,690 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,690 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,691 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:22:36,691 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,691 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,691 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,691 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,692 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,692 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,692 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,692 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,692 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,693 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,693 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,693 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,693 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,693 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:36,693 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,694 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,694 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,694 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,694 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,694 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,695 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,695 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:36,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 22:22:36,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 22:22:36,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 22:22:36,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:36,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 22:22:36,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:22:36,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 22:22:36,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:22:36,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,781 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,781 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,781 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,781 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,781 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 22:22:36,853 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,853 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,853 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,853 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:36,854 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:36,854 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:36,854 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,854 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,854 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,854 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:22:36,855 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,855 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,856 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,856 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,856 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,856 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,857 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,857 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,857 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,857 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,857 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,858 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,858 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,858 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,858 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,858 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,859 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,859 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,859 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:36,859 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,859 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,859 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,860 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:22:36,860 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,860 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,860 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,860 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,861 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,861 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,861 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,861 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,861 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,862 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:22:36,862 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,862 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,862 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,862 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,862 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,863 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,863 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,863 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,863 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,935 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,935 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,935 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,935 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,936 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,936 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,936 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,936 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,936 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,936 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,937 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,937 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,937 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,937 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,937 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,938 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,938 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,938 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,938 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 22:22:36,938 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,938 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:22:36,939 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,939 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,939 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:36,939 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:36,939 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,939 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,940 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:36,940 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,940 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,940 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,940 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,941 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,941 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,941 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,941 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 22:22:36,941 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,941 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,942 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 22:22:36,942 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,942 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,942 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 22:22:36,942 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,943 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:22:36,943 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,943 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:36,943 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:36,943 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,944 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:36,944 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,944 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:36,944 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,008 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,009 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,009 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,009 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,010 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,010 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,010 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,010 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,011 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,011 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,011 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 22:22:37,011 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:37,011 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,012 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,012 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,012 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,012 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:37,012 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,013 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:37,013 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,013 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,013 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,013 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,015 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:37,015 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,015 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,015 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,015 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:37,016 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,016 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,016 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,016 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:37,016 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,017 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,017 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,017 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,017 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:22:37,017 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 22:22:37,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:37,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,081 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,082 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:37,082 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:37,082 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,082 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,083 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,083 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,083 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,083 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 22:22:37,083 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:22:37,084 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,084 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,084 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,084 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,084 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,084 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,085 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 22:22:37,085 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,085 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:22:37,085 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,085 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,085 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,086 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,086 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,086 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:37,086 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,086 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:37,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:37,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:37,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:37,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:37,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:37,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 22:22:37,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 22:22:37,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:37,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:37,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,159 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,159 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:37,159 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:37,159 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:37,160 [15827] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 22:22:45,236 [15827] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2021-04-11 22:22:45,239 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:45,239 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,240 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,240 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,240 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,240 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,240 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,241 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:45,241 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,241 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,241 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,241 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,242 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,242 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,242 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 22:22:45,242 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,242 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,243 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,243 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,243 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,243 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,243 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 22:22:45,244 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 22:22:45,244 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,244 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,244 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,245 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,245 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,245 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,245 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,245 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,246 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,246 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,246 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,246 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,247 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 22:22:45,247 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,247 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,247 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:45,248 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,248 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:22:45,248 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,248 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,248 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,249 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,249 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,249 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,249 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,250 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,250 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,250 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,250 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,250 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,251 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 22:22:45,251 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,251 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,251 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,251 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,252 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,252 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,252 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,253 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:45,253 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 22:22:45,253 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,253 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,253 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,254 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,254 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,254 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,254 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,255 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,255 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,255 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,255 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 22:22:45,255 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,256 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,256 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,256 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,256 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,256 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,257 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,399 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,399 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,399 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,399 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:45,400 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,400 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,400 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,400 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:45,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 22:22:45,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:45,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,408 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,408 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 22:22:45,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,495 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,495 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:45,496 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,496 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 22:22:45,496 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,496 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,496 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,497 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,497 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,497 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,497 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,498 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,498 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,498 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,498 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,498 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,499 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,499 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,499 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,499 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,500 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,500 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,500 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,577 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,577 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,577 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,578 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,578 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,578 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,578 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,578 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,578 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 22:22:45,579 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:45,579 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,579 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,579 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,579 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,580 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,580 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,580 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,580 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,580 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,581 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,581 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,581 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:22:45,581 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,581 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,582 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,582 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,582 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,582 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:45,583 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,583 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,583 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,583 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:22:45,583 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,583 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,584 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:45,584 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,584 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,584 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,584 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 22:22:45,585 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:22:45,585 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:45,585 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,585 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:22:45,585 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,586 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,586 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,586 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:45,586 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,586 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,586 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,712 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,713 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,713 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,713 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:45,713 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,713 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,714 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,714 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,714 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,714 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:45,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:22:45,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:45,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:45,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:45,771 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,771 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,771 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,771 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 22:22:45,772 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,773 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 22:22:45,774 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 22:22:45,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,775 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:45,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:45,776 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 22:22:45,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:22:45,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:45,777 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 22:22:45,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:22:45,778 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:45,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,779 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,780 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,836 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 22:22:45,836 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,836 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,836 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,837 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:45,837 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:45,837 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:45,837 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,837 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,838 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,838 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:22:45,838 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,838 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,838 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,839 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,839 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,839 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,839 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,840 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,840 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,840 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,840 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,840 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,841 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,841 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,841 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,841 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,841 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,842 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,842 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:45,842 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,842 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,842 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,843 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:22:45,843 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,843 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,843 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,843 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,844 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,844 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,844 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,844 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,845 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,845 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:22:45,845 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,845 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,917 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,917 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,917 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,918 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,918 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,918 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,918 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,919 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,919 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,919 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,919 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,919 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,919 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,920 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,920 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,920 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,920 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,920 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,921 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,921 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,921 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,921 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,921 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,922 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,922 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,922 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 22:22:45,922 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,922 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:22:45,923 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,923 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,923 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:45,923 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:45,923 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,924 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,924 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 22:22:45,924 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,924 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,924 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,925 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,925 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,925 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,925 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,925 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 22:22:45,926 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,926 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,926 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 22:22:45,926 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,926 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,927 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 22:22:45,988 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,989 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:22:45,989 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,989 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,989 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:45,989 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,990 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,990 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,990 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,990 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,990 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,991 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,991 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,991 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,991 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,991 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,992 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,992 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,992 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,992 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,993 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 22:22:45,993 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:45,993 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,993 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,993 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,994 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,994 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,994 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,994 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:45,994 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,995 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,995 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,995 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,995 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,995 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,996 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,996 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,996 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,996 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:45,996 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,997 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,997 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:45,997 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 22:22:45,997 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,998 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:45,998 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,060 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:46,060 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,060 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,060 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,061 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,061 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:22:46,061 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,061 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 22:22:46,061 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:46,062 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,062 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,062 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,062 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,062 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:22:46,063 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:46,063 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,063 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,063 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,064 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,064 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,064 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 22:22:46,064 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:22:46,064 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,065 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,065 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,065 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,065 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,065 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,066 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 22:22:46,066 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,066 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:22:46,066 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,066 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,067 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,067 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,067 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,067 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:22:46,067 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,068 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:22:46,068 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:46,068 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,068 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,068 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,069 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,069 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 22:22:46,069 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:22:46,069 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:22:46,123 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,123 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,123 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,124 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,124 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,124 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,124 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:46,124 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 22:22:46,125 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,125 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,125 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,125 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,125 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 22:22:46,126 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,126 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:22:46,126 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:22:46,126 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,126 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,127 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:22:46,127 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 22:22:46,127 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:22:46,127 [15827] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 22:23:45,495 [15827] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-04-11 22:23:45,499 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:45,500 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:45,500 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:45,500 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,500 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:45,501 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,502 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 22:23:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,503 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,504 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,504 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 22:23:45,504 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 22:23:45,504 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,504 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,505 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,505 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,505 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,505 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,505 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:45,506 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,506 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,506 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,506 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,506 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,507 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 22:23:45,507 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,507 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,507 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:23:45,507 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,508 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:23:45,508 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,508 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,508 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,508 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,509 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,509 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,509 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,509 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:45,510 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,510 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,510 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,510 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,510 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 22:23:45,511 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,511 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,616 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,617 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,617 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,617 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,617 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,617 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:45,618 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 22:23:45,618 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,618 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,618 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,618 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,619 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,619 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,620 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,620 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,620 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,620 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,621 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 22:23:45,621 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,621 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,621 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,621 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,622 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,622 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,622 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,622 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,622 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,623 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,623 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:45,623 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,623 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,623 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,624 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,624 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,624 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,624 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,625 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,625 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,625 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,625 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:23:45,625 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,626 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,626 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,626 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,626 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,626 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 22:23:45,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 22:23:45,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,724 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,724 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,724 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,724 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,725 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,725 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,725 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,725 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,725 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,726 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,726 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,726 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,726 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,726 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 22:23:45,727 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,727 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,727 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,727 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,728 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,728 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,728 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,728 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:45,728 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,729 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 22:23:45,729 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,729 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,729 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,729 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,730 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,730 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,730 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,730 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,730 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,731 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,731 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,731 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,732 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,732 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,732 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,732 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,732 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,732 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,733 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,733 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,733 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,734 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,734 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,734 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,734 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,734 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,735 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,735 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,735 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,735 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,735 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,736 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,736 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,736 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,736 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,736 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,736 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,737 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,737 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,737 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,737 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,737 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,738 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 22:23:45,738 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 22:23:45,738 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,738 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,738 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,738 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,739 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,739 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,739 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,739 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,740 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,740 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,740 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,740 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:23:45,740 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,741 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,741 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,741 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,741 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,741 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 22:23:45,742 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,742 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,742 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,742 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:23:45,742 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,743 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,743 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:45,743 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,863 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,864 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,864 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 22:23:45,864 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:23:45,864 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:23:45,864 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,865 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:23:45,865 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,865 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,865 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:45,866 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 22:23:45,866 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,866 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,866 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,866 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,867 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,867 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,867 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:23:45,867 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,867 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,868 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,868 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,868 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,869 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:45,869 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:45,869 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,869 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,870 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:45,870 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,870 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,870 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,870 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,870 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,871 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,871 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,871 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,871 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:23:45,871 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,871 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,872 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,872 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,872 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,872 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,872 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,873 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,873 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,873 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,873 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,970 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,970 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,971 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 22:23:45,971 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,971 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,971 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,971 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:45,972 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,972 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,972 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,973 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 22:23:45,974 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,974 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,974 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,974 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,975 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,975 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,975 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,975 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,975 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 22:23:45,976 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,976 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,976 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,976 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,976 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,977 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:45,977 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,977 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,977 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 22:23:45,977 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 22:23:45,978 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,978 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,978 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,978 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,979 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,979 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:23:45,979 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:45,979 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,979 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:45,980 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:45,980 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 22:23:45,980 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:23:45,980 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:45,980 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:46,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,087 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 22:23:46,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:23:46,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,088 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:46,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,089 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,090 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 22:23:46,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:46,091 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:46,092 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 22:23:46,092 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,092 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,092 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,092 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:23:46,093 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,093 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,093 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,093 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:46,093 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,094 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,094 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,094 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,094 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,094 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,095 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,095 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,095 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,095 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,095 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,096 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,096 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,096 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,096 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:46,097 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,199 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,199 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,199 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:23:46,199 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,199 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,200 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,200 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,200 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,200 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,200 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,201 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,201 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,201 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:23:46,201 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,201 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,202 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,202 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,202 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,202 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,202 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,202 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,203 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,203 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,203 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,204 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,204 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,204 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,204 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,204 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,205 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,205 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,205 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,205 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,205 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,205 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,206 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,206 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,206 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,206 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,206 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,206 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 22:23:46,207 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,207 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:23:46,207 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,207 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,207 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:23:46,207 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 22:23:46,208 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,208 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,208 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 22:23:46,208 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,208 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,208 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,209 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,296 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,296 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,297 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,297 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 22:23:46,297 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,297 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,297 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 22:23:46,298 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,298 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,298 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 22:23:46,298 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,298 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:23:46,299 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,299 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,299 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:46,299 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,300 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,300 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,300 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,300 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,301 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,301 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,301 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,301 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,301 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,302 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,302 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,302 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,302 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,302 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 22:23:46,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:46,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,303 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,400 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:23:46,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,401 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 22:23:46,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,402 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 22:23:46,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,403 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:23:46,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 22:23:46,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:46,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,404 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,405 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:23:46,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:46,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,406 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,407 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 22:23:46,408 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:23:46,408 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,408 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,408 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,408 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,409 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 22:23:46,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:23:46,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,487 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,487 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,487 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:23:46,487 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,488 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,488 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,488 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,488 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,488 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 22:23:46,489 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:23:46,489 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:23:46,489 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,489 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,489 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,490 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,490 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,490 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,490 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,490 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 22:23:46,491 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,491 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,491 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,491 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,491 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 22:23:46,492 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,492 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:23:46,492 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:23:46,492 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,492 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,492 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:23:46,493 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 22:23:46,493 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:23:46,493 [15827] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 22:24:00,010 [15827] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2021-04-11 22:24:00,013 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,013 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,014 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,018 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,019 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,019 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,019 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,019 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,020 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,020 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-11 22:24:00,020 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,020 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,020 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,020 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,021 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,021 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,021 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-11 22:24:00,021 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-11 22:24:00,021 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,021 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,022 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,022 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,022 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,022 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,022 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,022 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,023 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,023 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,023 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,023 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,023 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-11 22:24:00,023 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,024 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,024 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:24:00,024 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,024 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:24:00,024 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,024 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,025 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,025 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,025 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,025 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,025 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,025 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,026 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,026 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,026 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,026 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,026 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-11 22:24:00,142 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,142 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,142 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,142 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,143 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,143 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,143 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,143 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,143 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-11 22:24:00,143 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,144 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,144 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,144 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,144 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,144 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,145 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,145 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,145 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,145 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,146 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-11 22:24:00,146 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,146 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,146 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,146 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,147 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,147 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,147 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,147 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,147 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,148 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,148 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,148 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,148 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,149 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,149 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,149 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,149 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,149 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,150 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,150 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,150 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,150 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:24:00,150 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,150 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,151 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,151 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,151 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,151 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,209 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-11 22:24:00,209 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,210 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,210 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-11 22:24:00,210 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,210 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,211 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,211 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,211 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,211 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,211 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,212 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,212 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,212 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,212 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,212 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,213 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,213 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,213 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,213 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,213 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,214 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,214 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,214 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-11 22:24:00,214 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,214 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,215 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,215 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,215 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,215 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,215 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,216 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,216 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,216 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-11 22:24:00,216 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,216 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,217 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,218 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,219 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,219 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,219 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,301 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,304 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,305 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,306 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,307 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,308 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,309 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-11 22:24:00,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-11 22:24:00,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,310 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,311 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,312 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,312 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,312 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,312 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:24:00,312 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,313 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,313 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,313 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-11 22:24:00,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,386 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:24:00,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,387 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-11 22:24:00,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:24:00,388 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:24:00,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-11 22:24:00,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,389 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,390 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-11 22:24:00,390 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,390 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,390 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,391 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,391 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,391 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,391 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:24:00,391 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,392 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,392 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,392 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,392 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,392 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,393 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,393 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,393 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,393 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,394 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,394 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,394 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,394 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,394 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,395 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,395 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,395 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,395 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-11 22:24:00,469 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,469 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,469 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,470 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,471 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-11 22:24:00,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,472 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-11 22:24:00,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,473 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,474 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-11 22:24:00,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,475 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,476 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-11 22:24:00,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-11 22:24:00,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,477 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-11 22:24:00,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,478 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,479 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,551 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,552 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-11 22:24:00,552 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:24:00,552 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,553 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,553 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,553 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,553 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,553 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-11 22:24:00,554 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:24:00,554 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,554 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,554 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,554 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,555 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,555 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,555 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,555 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,555 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,556 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,556 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-11 22:24:00,556 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,556 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,556 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,557 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,557 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,557 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-11 22:24:00,557 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,557 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,558 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,558 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-11 22:24:00,558 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,558 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,558 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,559 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,559 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,559 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,559 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,560 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,560 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,560 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,560 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,560 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,561 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,561 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,561 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,561 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,632 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,632 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,633 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,633 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,633 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,633 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,633 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:24:00,634 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,634 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,634 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,634 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,634 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,635 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,635 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,635 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,635 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,635 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-11 22:24:00,635 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,636 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,636 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,636 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,636 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,636 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,637 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,637 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,637 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,637 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,638 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,638 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,638 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,639 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,639 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,639 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,639 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,639 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,640 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,640 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,640 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,640 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,640 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,641 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,641 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,641 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,642 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,642 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-11 22:24:00,642 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,642 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-11 22:24:00,643 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,643 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,714 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-11 22:24:00,714 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-11 22:24:00,714 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-11 22:24:00,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,715 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,716 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-11 22:24:00,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-11 22:24:00,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,717 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-11 22:24:00,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-11 22:24:00,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,718 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,719 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,720 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-11 22:24:00,721 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,722 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,723 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,788 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,789 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,789 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,789 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,789 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,790 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:24:00,790 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,790 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,790 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,790 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-11 22:24:00,791 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,791 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,791 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,791 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-11 22:24:00,792 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,792 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,792 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,792 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,792 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:24:00,793 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,793 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-11 22:24:00,793 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,793 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,793 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,793 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,794 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,794 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-11 22:24:00,794 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,794 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,794 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,795 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,795 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,795 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,795 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-11 22:24:00,795 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-11 22:24:00,796 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,796 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,796 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,796 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,796 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,796 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,797 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-11 22:24:00,797 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,797 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-11 22:24:00,797 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,797 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,798 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,798 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,798 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,798 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,798 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,876 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-11 22:24:00,876 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,877 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,877 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,877 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,877 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,877 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-11 22:24:00,878 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-11 22:24:00,878 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-11 22:24:00,878 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,878 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,878 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,878 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,879 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,879 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,879 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,879 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-11 22:24:00,879 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,879 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,880 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,880 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,880 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-11 22:24:00,880 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,880 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-11 22:24:00,880 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-11 22:24:00,881 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,881 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,881 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-11 22:24:00,881 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-11 22:24:00,881 [15827] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-11 22:24:00,881 [15827] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-11 22:24:18,117 [15827] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fa753020da0>
2021-04-11 22:24:18,133 [15827] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-11 22:24:18,133 [15827] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7fa753020da0>
2021-04-11 22:24:18,133 [15827] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-11 22:53:58,849 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_logistic.py
2021-04-11 22:54:45,083 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:54:45,085 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:54:45,085 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:54:45,086 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:54:45,086 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:54:46,164 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-04-11 22:54:47,055 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-04-11 22:54:58,644 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:54:58,644 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:54:58,645 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:54:58,646 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:54:58,646 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:54:58,663 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/__init__.py
2021-04-11 22:54:58,668 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/__init__.py
2021-04-11 22:54:58,689 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_base.py
2021-04-11 22:54:58,916 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/base.py
2021-04-11 22:54:59,026 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/utils/__init__.py
2021-04-11 22:54:59,519 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/utils/validation.py
2021-04-11 22:54:59,942 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/functools.py
2021-04-11 22:54:59,952 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/functools.pyi
2021-04-11 22:55:20,040 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:55:20,043 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:55:20,043 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:55:20,044 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:55:20,044 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:56:37,894 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:56:37,897 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:56:37,897 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:56:37,905 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:56:37,907 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:56:45,522 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:56:45,522 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:56:45,522 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:56:45,523 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:56:45,524 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:56:50,390 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:56:50,393 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:56:50,393 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:56:50,394 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:56:50,394 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:57:21,704 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:57:21,705 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:57:21,705 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:57:21,705 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:57:21,706 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:58:41,631 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:58:41,634 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:58:41,634 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:58:41,637 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:58:41,638 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:59:20,530 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 22:59:20,532 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 22:59:20,532 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 22:59:20,533 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 22:59:20,533 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 22:59:20,544 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/metrics/__init__.py
2021-04-11 23:00:32,959 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 23:00:32,962 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 23:00:32,962 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 23:00:32,966 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 23:00:32,966 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 23:01:28,265 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 23:01:28,268 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 23:01:28,268 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 23:01:28,269 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 23:01:28,269 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 23:03:07,104 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 23:03:07,105 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 23:03:07,106 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-11 23:03:07,107 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-11 23:03:07,107 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 23:03:07,119 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/__init__.py
2021-04-11 23:03:07,132 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/__init__.py
2021-04-11 23:03:07,375 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/numeric.py
2021-04-11 23:03:07,498 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/umath.py
2021-04-11 23:03:07,510 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/numerictypes.py
2021-04-11 23:03:07,808 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/fromnumeric.py
2021-04-11 23:03:08,192 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/arrayprint.py
2021-04-11 23:03:12,829 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/_asarray.py
2021-04-11 23:03:12,837 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/_ufunc_config.py
2021-04-11 23:03:12,861 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/records.py
2021-04-11 23:03:12,869 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/memmap.py
2021-04-11 23:03:13,099 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/function_base.py
2021-04-11 23:03:13,111 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/machar.py
2021-04-11 23:03:13,126 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/getlimits.py
2021-04-11 23:03:13,324 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/shape_base.py
2021-04-11 23:03:13,370 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/einsumfunc.py
2021-04-11 23:03:13,375 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/__init__.py
2021-04-11 23:03:13,596 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/type_check.py
2021-04-11 23:03:13,617 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/index_tricks.py
2021-04-11 23:03:14,325 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/function_base.py
2021-04-11 23:03:14,709 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/nanfunctions.py
2021-04-11 23:03:14,832 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/shape_base.py
2021-04-11 23:03:14,949 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/stride_tricks.py
2021-04-11 23:03:14,961 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/twodim_base.py
2021-04-11 23:03:14,967 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/ufunclike.py
2021-04-11 23:03:15,185 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/histograms.py
2021-04-11 23:03:15,391 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/polynomial.py
2021-04-11 23:03:15,423 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/utils.py
2021-04-11 23:03:15,621 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/arraysetops.py
2021-04-11 23:03:15,976 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/npyio.py
2021-04-11 23:03:16,086 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/financial.py
2021-04-11 23:03:16,102 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/arraypad.py
2021-04-11 23:03:16,520 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/_version.py
2021-04-11 23:03:16,583 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/matrixlib/__init__.py
2021-04-11 23:03:16,601 [15827] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/matrixlib/defmatrix.py
2021-04-11 23:04:27,118 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 23:04:27,120 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 23:04:27,120 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 23:04:27,122 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 23:04:27,122 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 23:04:28,812 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 23:04:28,812 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-11 23:04:28,813 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-11 23:04:28,813 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 23:04:28,813 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 23:04:44,451 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 23:04:44,452 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-11 23:04:44,452 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[1:0] new[1:1]
2021-04-11 23:04:44,453 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 1 in part parser)
2021-04-11 23:04:44,453 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[2:2]
2021-04-11 23:04:44,453 [15827] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:0] new[2:2]
2021-04-11 23:04:44,453 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-11 23:05:18,263 [15827] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-11 23:05:18,264 [15827] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-11 23:05:18,264 [15827] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-11 23:05:18,265 [15827] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-11 23:05:18,266 [15827] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 00:40:56,672 [28629] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-12 00:40:56,672 [28629] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-12 00:40:56,672 [28629] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-12 00:40:56,674 [28629] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-12 00:40:56,675 [28629] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-12 00:40:56,675 [28629] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-12 00:40:57,309 [28629] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-12 00:40:57,311 [28629] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-12 00:40:57,311 [28629] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-12 00:40:57,313 [28629] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-12 00:40:57,314 [28629] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-12 00:40:57,314 [28629] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-12 01:44:56,590 [33518] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-12 01:44:56,591 [33518] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-12 01:44:56,592 [33518] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-12 01:44:56,601 [33518] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-12 01:44:56,603 [33518] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-12 01:44:56,603 [33518] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-12 01:45:04,005 [33518] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-12 01:45:04,007 [33518] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-12 01:45:04,013 [33518] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-12 01:45:04,014 [33518] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-12 01:45:04,019 [33518] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-12 01:45:04,019 [33518] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-12 01:45:04,050 [33518] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-12 01:45:04,050 [33518] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-12 01:45:05,452 [33518] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-12 01:45:05,635 [33518] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-12 01:45:06,200 [33518] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-12 01:45:06,217 [33518] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-12 01:45:36,486 [33567] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-12 01:45:36,487 [33567] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-12 01:45:36,488 [33567] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-12 01:45:36,500 [33567] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-12 01:45:36,502 [33567] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-12 01:45:36,503 [33567] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-12 01:45:46,446 [33567] DEBUG    matplotlib:278: [JupyterRequire] CONFIGDIR=/Users/sachin/.matplotlib
2021-04-12 01:45:46,450 [33567] DEBUG    matplotlib:278: [JupyterRequire] (private) matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-12 01:45:46,461 [33567] DEBUG    matplotlib:278: [JupyterRequire] matplotlib data path: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data
2021-04-12 01:45:46,462 [33567] DEBUG    matplotlib:1009: [JupyterRequire] loaded rc file /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
2021-04-12 01:45:46,472 [33567] DEBUG    matplotlib:1598: [JupyterRequire] matplotlib version 3.2.1
2021-04-12 01:45:46,473 [33567] DEBUG    matplotlib:1599: [JupyterRequire] interactive is False
2021-04-12 01:45:46,474 [33567] DEBUG    matplotlib:1600: [JupyterRequire] platform is darwin
2021-04-12 01:45:46,475 [33567] DEBUG    matplotlib:1601: [JupyterRequire] loaded modules: ['builtins', 'sys', '_frozen_importlib', '_imp', '_warnings', '_thread', '_weakref', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'zipimport', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_weakrefset', '_bootlocale', '_locale', 'site', 'os', 'errno', 'stat', '_stat', 'posixpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'sysconfig', '_sysconfigdata_m_darwin_darwin', '_osx_support', 're', 'enum', 'types', 'functools', '_functools', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'weakref', 'collections.abc', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'mpl_toolkits', 'google', 'runpy', 'pkgutil', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', '_posixsubprocess', 'select', 'selectors', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'ast', '_ast', 'dis', 'opcode', '_opcode', 'six', '__future__', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'textwrap', 'gettext', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'concurrent.futures.process', 'queue', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', 'socket', '_socket', 'array', '__mp_main__', 'multiprocessing.connection', '_multiprocessing', 'multiprocessing.util', 'concurrent.futures.thread', 'asyncio.compat', 'asyncio.coroutines', 'asyncio.constants', 'asyncio.events', 'asyncio.base_futures', 'asyncio.log', 'asyncio.futures', 'asyncio.base_tasks', '_asyncio', 'asyncio.tasks', 'asyncio.locks', 'asyncio.protocols', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.transports', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'ssl', 'ipaddress', '_ssl', 'base64', 'asyncio.sslproto', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.dummy_contextvars', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop.async_context_manager', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.vt100', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'optparse', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_21', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'ipykernel.eventloops', 'distutils', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random.bit_generator', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_13', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-12 01:45:47,989 [33567] DEBUG    matplotlib:278: [JupyterRequire] CACHEDIR=/Users/sachin/.matplotlib
2021-04-12 01:45:48,128 [33567] DEBUG    matplotlib.font_manager:1348: [JupyterRequire] Using fontManager instance from /Users/sachin/.matplotlib/fontlist-v310.json
2021-04-12 01:45:48,637 [33567] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-12 01:45:48,656 [33567] DEBUG    matplotlib.pyplot:225: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-12 01:46:26,536 [33567] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2021-04-12 01:46:26,541 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,545 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,545 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,545 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,546 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,546 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,546 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,547 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,547 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,547 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,548 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,548 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,549 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,549 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,550 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-12 01:46:26,550 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,551 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,551 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,552 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,552 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,552 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,553 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-12 01:46:26,553 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-12 01:46:26,554 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,554 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,555 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,555 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,556 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,556 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,557 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,557 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,557 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,558 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,558 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,558 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,559 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-12 01:46:26,559 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,559 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,560 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:26,560 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,560 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:46:26,567 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,567 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,567 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,567 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,568 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,568 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,568 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,568 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,569 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,569 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,569 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,569 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,570 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-12 01:46:26,570 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,571 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,571 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,572 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,572 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,573 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,573 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,573 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,574 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-12 01:46:26,574 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,574 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,575 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,575 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,575 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,576 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,576 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,576 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,577 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,577 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,587 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-12 01:46:26,588 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,588 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,589 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,589 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,590 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,590 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,591 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,591 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,592 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,592 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,592 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,593 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,593 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,594 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,594 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,594 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,595 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,596 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,596 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,596 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,597 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,597 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,597 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,605 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,606 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,606 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,606 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,607 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,607 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-12 01:46:26,607 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,608 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,608 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,609 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,609 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,609 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,610 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,610 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,610 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,611 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,611 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,611 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,612 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,612 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,613 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,613 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,613 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,614 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,614 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,614 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,615 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,615 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,617 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-12 01:46:26,617 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,618 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,618 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,619 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,619 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,620 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,620 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,621 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,622 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,623 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-12 01:46:26,623 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,624 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,624 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,624 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,625 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,625 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,625 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,626 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,626 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,626 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,627 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,627 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,627 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,628 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,628 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,629 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,629 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,629 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,629 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,630 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,630 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,630 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,631 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,631 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,631 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,632 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,643 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,645 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,645 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,646 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,646 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,649 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,650 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,650 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,650 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,651 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,651 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,651 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,652 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,652 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,652 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,653 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,653 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-12 01:46:26,653 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,654 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,654 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,654 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,655 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,655 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,655 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,656 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,656 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,670 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,670 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,671 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,672 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:46:26,672 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,673 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,673 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,674 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,674 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,675 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:26,675 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,675 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,676 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,676 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:46:26,677 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,677 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,677 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,678 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,678 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,679 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,679 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-12 01:46:26,681 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:46:26,681 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:26,682 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,682 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:46:26,682 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,683 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,683 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,684 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:26,684 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,685 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,685 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,685 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,686 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,686 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,687 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:26,687 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,688 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,688 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,689 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,689 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,690 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,690 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,690 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,693 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,694 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,694 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,695 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,696 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,696 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,697 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,697 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,698 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,698 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,698 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:46:26,699 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,699 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,700 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,700 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,701 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,701 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,702 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,702 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,702 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,703 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,704 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,705 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,705 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,706 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:26,706 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,707 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,707 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,708 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,709 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,709 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,710 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,710 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:26,711 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,711 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,712 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,712 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,713 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,713 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,714 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,717 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,717 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-12 01:46:26,718 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,718 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,719 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,720 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,720 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,720 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,721 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,721 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,721 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-12 01:46:26,722 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-12 01:46:26,722 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,723 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,723 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,723 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,724 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,724 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,725 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,725 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,726 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,726 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,726 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-12 01:46:26,732 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:46:26,732 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,733 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,733 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,734 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,734 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,735 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-12 01:46:26,735 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:46:26,735 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,736 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,736 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,737 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,737 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,737 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,738 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,738 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,738 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,739 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,739 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-12 01:46:26,740 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,740 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,740 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,741 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,741 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,742 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:26,742 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,743 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,743 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,743 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:46:26,744 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,744 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,745 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,745 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,746 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,746 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,747 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,747 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,747 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,748 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,748 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,749 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,749 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,750 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,750 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,751 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,751 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,752 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,753 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,753 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,754 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,754 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,755 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:46:26,755 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,756 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,756 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,757 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,757 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,757 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,758 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,758 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,759 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,759 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:46:26,760 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,760 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,761 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,761 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,761 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,762 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,762 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,764 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,765 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,765 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,766 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,766 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,767 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,768 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,768 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,768 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,769 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,769 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,770 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,770 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,771 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,771 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,772 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,772 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,773 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,773 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,774 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,778 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-12 01:46:26,779 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,779 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:46:26,780 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,780 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,781 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:26,781 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,782 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,782 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,783 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:26,783 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,784 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,784 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,785 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,785 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,786 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,786 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,787 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-12 01:46:26,787 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,787 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,788 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-12 01:46:26,789 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,790 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,790 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-12 01:46:26,791 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,792 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:46:26,792 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,793 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,793 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,794 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,794 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,795 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,795 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,796 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,796 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,797 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,798 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,798 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,799 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,799 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,804 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,805 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,805 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,806 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,806 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-12 01:46:26,807 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,807 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,808 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,808 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,809 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,810 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,810 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,811 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,811 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,812 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,813 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,813 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,814 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,814 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,815 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,815 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,816 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,816 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:26,817 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,817 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,818 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,818 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:26,818 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,819 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,819 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,820 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:26,820 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,820 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,821 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,821 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,822 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:46:26,822 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,822 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-12 01:46:26,823 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,823 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,823 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,824 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,824 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,825 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,825 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,826 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,828 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,828 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,829 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,829 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,830 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-12 01:46:26,830 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:46:26,831 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,831 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,832 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,832 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,832 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,833 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,833 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-12 01:46:26,834 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,834 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:46:26,835 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,835 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,836 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,837 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,837 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,838 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,838 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,838 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,839 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,839 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,840 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,840 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,841 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,841 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,842 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,842 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,843 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,843 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,844 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,844 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,845 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,845 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,846 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,846 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-12 01:46:26,846 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,848 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,848 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,849 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,849 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-12 01:46:26,850 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,850 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,851 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:26,851 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,852 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,852 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,852 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:26,853 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,853 [33567] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-12 01:46:26,879 [33567] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
2021-04-12 01:46:26,881 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,882 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,882 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,883 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,883 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,884 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,884 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,884 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,885 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,885 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,885 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,886 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,886 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,886 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,887 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-12 01:46:26,887 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,887 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,888 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,894 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,897 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,898 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,898 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-12 01:46:26,899 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-12 01:46:26,899 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,899 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,900 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,900 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,901 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,901 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,902 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,902 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,903 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,903 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,903 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,904 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,904 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-12 01:46:26,905 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,905 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,906 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:26,906 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,907 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:46:26,907 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,908 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,908 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,909 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,909 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,909 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,910 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,910 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:26,911 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,911 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,912 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,914 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,915 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-12 01:46:26,915 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,916 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,917 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,917 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,918 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,918 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,919 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,919 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,920 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-12 01:46:26,920 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,921 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,921 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,922 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,922 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,923 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,923 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,924 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,924 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,926 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,927 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-12 01:46:26,927 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,928 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,929 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,929 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,930 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,930 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,931 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,932 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,934 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,935 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,936 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:26,936 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,937 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,937 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,937 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,938 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,947 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,947 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,948 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,948 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,948 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,949 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,949 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,950 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,950 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,950 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,951 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,951 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,951 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-12 01:46:26,952 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,952 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,952 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,953 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,953 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,954 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,954 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,954 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,955 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,955 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,955 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,956 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,956 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,956 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,957 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,957 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,958 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,958 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,959 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,959 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,960 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,960 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,961 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-12 01:46:26,961 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,962 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,962 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,963 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,963 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,963 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,964 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,964 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:26,965 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,967 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-12 01:46:26,969 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,969 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,970 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,970 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,970 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,971 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,971 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,972 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,972 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,972 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,973 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,973 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,973 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,974 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,974 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,975 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,976 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,976 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,980 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,980 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,981 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,981 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,981 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,982 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,982 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,983 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,983 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,984 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,984 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,984 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,985 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,985 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,986 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,986 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,987 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,987 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,987 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,988 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,989 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,989 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,990 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,990 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,991 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-12 01:46:26,991 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:26,992 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,992 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:26,993 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,993 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,994 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,994 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,995 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,995 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,996 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,996 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,997 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,997 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:46:26,997 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:26,998 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,998 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:26,999 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:26,999 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,000 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:27,000 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,000 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,001 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,001 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:46:27,002 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,002 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,002 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:27,003 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:27,014 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,014 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,015 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-12 01:46:27,015 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:46:27,016 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:27,016 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,017 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:46:27,018 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,022 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,022 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:27,023 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:27,023 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,024 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,024 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:27,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:27,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:27,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:27,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:27,030 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,030 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,031 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,031 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,037 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,038 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,038 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,039 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,040 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:46:27,040 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,041 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,041 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,042 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,042 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,043 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,043 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,044 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,044 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,045 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,046 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,046 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,046 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,047 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:27,047 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,048 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,048 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,048 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:27,049 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,049 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,050 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,050 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:27,050 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,051 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,051 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,052 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,052 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,052 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,053 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,053 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,053 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-12 01:46:27,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,055 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,055 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,056 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:27,056 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,057 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,057 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-12 01:46:27,057 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-12 01:46:27,058 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,058 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,059 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,059 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,060 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,060 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:27,060 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,061 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,061 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:27,062 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,062 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-12 01:46:27,063 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:46:27,063 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,063 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:27,064 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,064 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,065 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,065 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-12 01:46:27,066 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:46:27,066 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,067 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,067 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:27,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,070 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,070 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,071 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,071 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,072 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-12 01:46:27,072 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:27,074 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:27,074 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:27,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,076 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:46:27,080 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,080 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,081 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,081 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:27,081 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,082 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,082 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,083 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,083 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,084 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,084 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,085 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,085 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,086 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,086 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,088 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:27,088 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,089 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,094 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,094 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:46:27,095 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,095 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,096 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,096 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,097 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,097 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,097 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,098 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,098 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,098 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:46:27,099 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,099 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,101 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,101 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,102 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,102 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,103 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,103 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-12 01:46:27,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:46:27,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:27,121 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:27,122 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,122 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,123 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:27,123 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,125 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,125 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,126 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,126 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,127 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,127 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-12 01:46:27,128 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,128 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,129 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-12 01:46:27,129 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,130 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,130 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-12 01:46:27,131 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,132 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:46:27,132 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,133 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,133 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:27,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,136 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,136 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-12 01:46:27,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:27,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:27,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,149 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,149 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:27,150 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,150 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,151 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,152 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:27,152 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,153 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,153 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,154 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:46:27,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-12 01:46:27,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:27,165 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,165 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,166 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,166 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,167 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:27,167 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:27,167 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,169 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,169 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-12 01:46:27,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:46:27,171 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,171 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,171 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-12 01:46:27,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,175 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:46:27,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,177 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,177 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,178 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,178 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:27,179 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,179 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:27,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:27,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:27,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,190 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,191 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,191 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-12 01:46:27,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-12 01:46:27,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:27,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:27,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:27,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:27,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:27,198 [33567] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-12 01:46:29,922 [33567] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2021-04-12 01:46:29,924 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:29,924 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:29,925 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:29,925 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:29,927 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,927 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,928 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,928 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:29,929 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,929 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,930 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,930 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,931 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,931 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,932 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-12 01:46:29,932 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,933 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,933 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,934 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,934 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,935 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,935 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-12 01:46:29,935 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-12 01:46:29,936 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,936 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,937 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,937 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,938 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,938 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,938 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:29,939 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,939 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,939 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,940 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,940 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,941 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-12 01:46:29,941 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:29,941 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:29,942 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:29,942 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,943 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:46:29,943 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,944 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,944 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,945 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,945 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,945 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,946 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,957 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:29,957 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,959 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,960 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,960 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,961 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-12 01:46:29,961 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,962 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,962 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,963 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,963 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,964 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,964 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,965 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:29,965 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-12 01:46:29,966 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,966 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,967 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,967 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,968 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,968 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,969 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,969 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,970 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,970 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,970 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-12 01:46:29,971 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,971 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,972 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,972 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,973 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,973 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,974 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,974 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,974 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,975 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,975 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:29,976 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,976 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,976 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,977 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,977 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,977 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:29,978 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,979 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,979 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,980 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,981 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:29,981 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,982 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,984 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,984 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,985 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,986 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,986 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-12 01:46:29,987 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,988 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,989 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:29,989 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:29,990 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,990 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,990 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,991 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,991 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,992 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,992 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,993 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,993 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,994 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,994 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,994 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,995 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,995 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,996 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,996 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,997 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:29,997 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,997 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-12 01:46:29,998 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,998 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,999 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:29,999 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,000 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,000 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,000 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,005 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,005 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,006 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-12 01:46:30,006 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,007 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,007 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,007 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,008 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,008 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,008 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,009 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,009 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,009 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,010 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,010 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,010 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,010 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,011 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,011 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,011 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,012 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,012 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,012 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,013 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,013 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,013 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,014 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,014 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,015 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,017 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,018 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,019 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,019 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,021 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,022 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,022 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,022 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,023 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,023 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,024 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,024 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-12 01:46:30,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:30,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,030 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,030 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,030 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,031 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,045 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:46:30,046 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,047 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,047 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,048 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,049 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,049 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:30,051 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,051 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,052 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,053 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:46:30,053 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,055 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,055 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,056 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-12 01:46:30,056 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:46:30,063 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:30,063 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,064 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:46:30,064 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,064 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,065 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:30,065 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:30,066 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,066 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,066 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,067 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,067 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,068 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,068 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:30,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,070 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,070 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,071 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,071 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:30,072 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:30,074 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,076 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,076 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,077 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,077 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,077 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,078 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:46:30,078 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,079 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,079 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,080 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,080 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,080 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,081 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,081 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,082 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,082 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,082 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,085 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,086 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,086 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:30,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,088 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,088 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,089 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,089 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,090 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:30,090 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,090 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,091 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,091 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,092 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,092 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,093 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,093 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,093 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-12 01:46:30,094 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,094 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,095 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,097 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,098 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,099 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,099 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-12 01:46:30,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-12 01:46:30,101 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,101 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,102 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,102 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,103 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,103 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:30,104 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,104 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,105 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:30,105 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,106 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-12 01:46:30,106 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:46:30,107 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,107 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:30,108 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,108 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,108 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-12 01:46:30,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:46:30,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:30,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-12 01:46:30,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:30,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:30,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:30,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,120 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,121 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:46:30,121 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,121 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,122 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,122 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,123 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,127 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,127 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,128 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,128 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,129 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,129 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,130 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,131 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,131 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,132 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,132 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,133 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,133 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:46:30,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,136 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:46:30,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,153 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,155 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,156 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,157 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,158 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,158 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,159 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,159 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,159 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,160 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,160 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-12 01:46:30,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,162 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:46:30,162 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:30,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:30,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-12 01:46:30,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,169 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,169 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,171 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,171 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-12 01:46:30,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-12 01:46:30,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-12 01:46:30,175 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:46:30,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,177 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,177 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,184 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,184 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,187 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-12 01:46:30,187 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,189 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,189 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,190 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:30,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,198 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-12 01:46:30,198 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,199 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,199 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,200 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:30,200 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,200 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,201 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,202 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,202 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:46:30,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-12 01:46:30,204 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,204 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,205 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,205 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,206 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,206 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:46:30,207 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:30,207 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,207 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,208 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,208 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,208 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-12 01:46:30,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:46:30,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,211 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,211 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,211 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,216 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,217 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-12 01:46:30,217 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,218 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:46:30,218 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,219 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,219 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,220 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,220 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:46:30,222 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,222 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,223 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,223 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-12 01:46:30,225 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:46:30,226 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:46:30,228 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,228 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,229 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,229 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,230 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,230 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,231 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,231 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-12 01:46:30,232 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,232 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,232 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,233 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,233 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-12 01:46:30,234 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,234 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:46:30,235 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:46:30,235 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,236 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,236 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:46:30,237 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-12 01:46:30,237 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:46:30,237 [33567] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-12 01:47:10,105 [33567] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-04-12 01:47:10,106 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,106 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,107 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,107 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,107 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,107 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,108 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,108 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,108 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,108 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-12 01:47:10,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-12 01:47:10,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-12 01:47:10,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-12 01:47:10,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:10,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:47:10,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,120 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,121 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,121 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,122 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,122 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,123 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,123 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,123 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,124 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-12 01:47:10,125 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,125 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,126 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,126 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,126 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,126 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,127 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,127 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,127 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-12 01:47:10,128 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,128 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,129 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,129 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,129 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,130 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,130 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,130 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,131 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,131 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,133 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-12 01:47:10,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,136 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,136 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:10,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-12 01:47:10,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:10,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,147 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,149 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,149 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,149 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,150 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,150 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,150 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,151 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,151 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-12 01:47:10,151 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,152 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,152 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,152 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,152 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,153 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,153 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,153 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,154 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,154 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-12 01:47:10,154 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,155 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,155 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,156 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,156 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,156 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,157 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,157 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,158 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,158 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,158 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,159 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,159 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,160 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,160 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,165 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,165 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,165 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,165 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,166 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,166 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,166 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,167 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,167 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,169 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,169 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,171 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,171 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-12 01:47:10,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:10,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,175 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,175 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,175 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,176 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,177 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,177 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,178 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:47:10,178 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,178 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,179 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,179 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:10,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:47:10,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,184 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,184 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,184 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-12 01:47:10,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:47:10,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:47:10,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:47:10,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,187 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,187 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,187 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:10,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,189 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,189 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,190 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,190 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:10,190 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,191 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,191 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,191 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,193 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:47:10,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,198 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,198 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,199 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,199 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,199 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,200 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,200 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,201 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,201 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,202 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,202 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,202 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:10,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,204 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,204 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,205 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,205 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,205 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:10,206 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,206 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,206 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,207 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,207 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,208 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,208 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-12 01:47:10,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,211 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,211 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,211 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,212 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-12 01:47:10,212 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-12 01:47:10,212 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,213 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,213 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,213 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,213 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,214 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:10,214 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,214 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,215 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,215 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,215 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-12 01:47:10,215 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:47:10,216 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,216 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,216 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,217 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,217 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,217 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-12 01:47:10,218 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:47:10,218 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,218 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,219 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,219 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,219 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,220 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,220 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,220 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-12 01:47:10,222 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,222 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,223 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,223 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:10,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,225 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,225 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,226 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:47:10,226 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,226 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,227 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,227 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,227 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,228 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,228 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,228 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,229 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,229 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,229 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,229 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,230 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,230 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,230 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,231 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,231 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,232 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,232 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,233 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,233 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,234 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,234 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:47:10,234 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,235 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,235 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,236 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,236 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,237 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,237 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,238 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,238 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,238 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:47:10,239 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,239 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,239 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,240 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,240 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,241 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,241 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,241 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,242 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,242 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,242 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,243 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,243 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,243 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,244 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,244 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,245 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,245 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,246 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,246 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,247 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,247 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,247 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,248 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,248 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,248 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,248 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,249 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-12 01:47:10,249 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,249 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:47:10,249 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,250 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,250 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:10,250 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:10,250 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,251 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,251 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:10,251 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,251 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,252 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,252 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,252 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,252 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,253 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,253 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-12 01:47:10,253 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,253 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,254 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-12 01:47:10,254 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,254 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,254 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-12 01:47:10,255 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,255 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:47:10,255 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,255 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,256 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,256 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,256 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,257 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,257 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,258 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,258 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,258 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,259 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,259 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,259 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,260 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,260 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,260 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,261 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,261 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,262 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-12 01:47:10,262 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,263 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,263 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,263 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,264 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,264 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,264 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,265 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,265 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,266 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,266 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,266 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,267 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,267 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,268 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,268 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,268 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,269 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:47:10,269 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,269 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,269 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,270 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:10,270 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,271 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,271 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,272 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:10,272 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,272 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,273 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,273 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,273 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:47:10,274 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,274 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-12 01:47:10,274 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,275 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,275 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,275 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,276 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,276 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:10,276 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,277 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,277 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,277 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,278 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,278 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,279 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-12 01:47:10,279 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:47:10,279 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,280 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,282 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,282 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,283 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,283 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,283 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-12 01:47:10,284 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,284 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:47:10,284 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,285 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,285 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,286 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,286 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,286 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,287 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,287 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:10,287 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,288 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,288 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,288 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,289 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,289 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:10,289 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:10,290 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:10,290 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,290 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,291 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,291 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,291 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,292 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,292 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,292 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-12 01:47:10,293 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,293 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,293 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,294 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,294 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-12 01:47:10,294 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,294 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:10,295 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:47:10,295 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,295 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,296 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:10,296 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:10,296 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:10,297 [33567] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-12 01:47:23,991 [33567] DEBUG    matplotlib.font_manager:1246: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2021-04-12 01:47:23,991 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:23,992 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:23,992 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:23,993 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:23,993 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,003 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,004 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,004 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,004 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,005 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,005 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,006 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,006 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,007 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,007 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-12 01:47:24,008 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,008 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,009 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,010 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,010 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,011 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,011 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-12 01:47:24,012 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-12 01:47:24,012 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,012 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,013 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,013 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,017 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,017 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,018 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:24,018 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,022 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,023 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,023 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,024 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-12 01:47:24,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,025 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:24,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,026 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:47:24,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaijaan' (BalooBhaijaanUrdu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Rounded' (SFNSRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,027 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin Outline' (SyrCOMNisibinOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,028 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu 2' (BalooTammuduTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:24,029 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,030 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bamum' (NotoSansBamum-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,030 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,036 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem Outline' (SyrCOMJerusalemOutline.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,036 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-12 01:47:24,037 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,037 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,037 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans PhagsPa' (NotoSansPhagsPa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,037 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Batak' (NotoSansBatak-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,039 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Limbu' (NotoSansLimbu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,040 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,040 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Devanagari' (OctoberDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,041 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,041 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 400 normal>) = 2.777272727272727
2021-04-12 01:47:24,041 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Chakma' (NotoSansChakma-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,042 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lahore Gurmukhi' (LahoreGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,042 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,043 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,043 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,044 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,044 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,045 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,045 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,045 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Parthian' (NotoSansInscriptionalParthian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,046 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Gujarati' (KohinoorGujarati.ttc) normal normal bold normal>) = 10.335
2021-04-12 01:47:24,046 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,047 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Telugu' (LavaTelugu.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,051 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,052 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI83EmuFrenchKeys' (TI83EmuFrenchKeys.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,052 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'TI84EmuKeys' (TI84EmuKeys.TTF) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,052 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,053 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,053 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,054 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old South Arabian' (NotoSansOldSouthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,055 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,055 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Samaritan' (NotoSansSamaritan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,056 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,056 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,057 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,057 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,058 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,058 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Gothic' (NotoSansGothic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,058 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan 2' (BalooChettanMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,059 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Maku' (Maku-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,059 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,060 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Myanmar' (NotoSansMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:24,060 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,060 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,061 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,061 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Antioch' (SyrCOMAntioch.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,062 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,062 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,063 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal black normal>) = 10.525
2021-04-12 01:47:24,063 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Kannada' (LavaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,064 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,064 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Display' (ArabicUIDisplay.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:24,068 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,068 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,069 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,070 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,071 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Inscriptional Pahlavi' (NotoSansInscriptionalPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,072 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Palmyrene' (NotoSansPalmyrene-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,072 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Permic' (NotoSansOldPermic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,073 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagalog' (NotoSansTagalog-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,074 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Nisibin' (SyrCOMNisibin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,074 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,074 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,074 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osage' (NotoSansOsage-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Egyptian Hieroglyphs' (NotoSansEgyptianHieroglyphs-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Party LET' (PartyLET-plain.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,075 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Warang Citi' (NotoSansWarangCiti-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,076 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,076 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-12 01:47:24,076 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,076 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,077 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,077 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Tamil' (OctoberTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,077 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji 2' (BalooPaajiGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,078 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,078 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,078 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,079 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Elbasan' (NotoSansElbasan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,084 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Light.ttf) normal normal light condensed>) = 10.44
2021-04-12 01:47:24,085 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Javanese' (NotoSansJavanese-Regular.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,085 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,085 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meroitic' (NotoSansMeroitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,086 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shobhika' (Shobhika-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,086 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnan.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Takri' (NotoSansTakri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,087 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,088 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans NKo' (NotoSansNKo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,088 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Persian' (NotoSansOldPersian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,091 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,091 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Saurashtra' (NotoSansSaurashtra-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,092 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,092 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Batnan' (SyrCOMBatnanBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,092 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,092 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,093 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Devanagari' (OctoberCompressedDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,093 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,094 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,094 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,094 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini' (JainiDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,095 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,095 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,095 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,096 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,096 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,097 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Kannada' (NotoSerifKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,098 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mahajani' (NotoSansMahajani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,098 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,098 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoy.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,099 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Jaini Purva' (JainiPurvaDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,100 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,101 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syriac' (NotoSansSyriac-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,102 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,103 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,103 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Annai MN' (AnnaiMN.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,104 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,104 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Nastaliq Urdu' (NotoNastaliq.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,105 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,106 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,106 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,107 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal book normal>) = 10.05
2021-04-12 01:47:24,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Armenian' (NotoSansArmenian.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:24,109 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYorkItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,110 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi-MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Midyat' (SyrCOMMidyat.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,111 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Miao' (NotoSansMiao-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,112 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Edessa' (SyrCOMEdessa.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Viet' (NotoSansTaiViet-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,113 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:47:24,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cambay Devanagari' (CambayDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,114 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gurmukhi' (SamaGurmukhi.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,115 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:24,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mro' (NotoSansMro-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,116 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Gurmukhi' (TiroGurmukhi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (TamilSangam-MN-MA.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:47:24,117 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tammudu' (BalooTammuduTelugu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,118 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,119 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sora Sompeng' (NotoSansSoraSompeng-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,130 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-12 01:47:24,131 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:47:24,132 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times' (Times.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:47:24,132 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans New Tai Lue' (NotoSansNewTaiLue-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,133 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal medium normal>) = 10.145
2021-04-12 01:47:24,133 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Telugu' (TiroTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Tham' (NotoSansTaiTham-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,134 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:24,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:24,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,135 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,136 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,136 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,137 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:24,138 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,139 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lydian' (NotoSansLydian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,140 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,141 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:24,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi' (BalooThambiTamil-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,142 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:24,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Runic' (NotoSansRunic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Kharput' (SyrCOMKharput.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,143 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pau Cin Hau' (NotoSansPauCinHau-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,144 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal bold normal>) = 10.335
2021-04-12 01:47:24,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Wancho' (NotoSansWancho-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,145 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,146 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear A' (NotoSansLinearA-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Katari' (Katari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,148 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,149 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,149 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,150 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,150 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lisu' (NotoSansLisu-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,151 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gotu' (GotuDevanagari-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,151 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,151 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sharada' (NotoSansSharada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Vaani' (MuktaVaani-Gujarati.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:24,161 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buhid' (NotoSansBuhid-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,162 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,162 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mende Kikakui' (NotoSansMendeKikakui-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,163 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,164 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,166 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:24,167 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,167 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Phoenician' (NotoSansPhoenician-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,168 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma 2' (BalooTammaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,169 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kharoshthi' (NotoSansKharoshthi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,170 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bassa Vah' (NotoSansBassaVah-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,172 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2021-04-12 01:47:24,173 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mandaic' (NotoSansMandaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,174 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,175 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,175 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,178 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,179 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2021-04-12 01:47:24,180 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-12 01:47:24,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,181 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Malar' (MuktaMalar-Tamil.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,182 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina' (BalooBhainaOdia-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Myanmar' (NotoSerifMyanmar.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:24,183 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,184 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,184 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ol Chiki' (NotoSansOlChiki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,185 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2021-04-12 01:47:24,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:47:24,186 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Academy Engraved LET' (Academy Engraved LET Fonts.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,187 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,187 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Avestan' (NotoSansAvestan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,188 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,190 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-12 01:47:24,191 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:47:24,191 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Balinese' (NotoSerifBalinese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,192 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,194 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Talada' (SyrCOMTalada.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,195 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cypriot' (NotoSansCypriot-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,196 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Multani' (NotoSansMultani-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,197 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,198 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Gujarati' (SamaGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,198 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Roboto Condensed' (RobotoCondensed-Regular.ttf) normal normal regular condensed>) = 10.25
2021-04-12 01:47:24,199 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Meetei Mayek' (NotoSansMeeteiMayek-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,199 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Modi' (NotoSansModi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,200 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ogham' (NotoSansOgham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,201 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,201 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:24,201 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:24,202 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Psalter Pahlavi' (NotoSansPsalterPahlavi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,202 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Rockwell' (Rockwell.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Rejang' (NotoSansRejang-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2021-04-12 01:47:24,203 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,204 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,204 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Syloti Nagri' (NotoSansSylotiNagri-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,204 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompactItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,205 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lepcha' (NotoSansLepcha-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,205 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,206 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Hungarian' (NotoSansOldHungarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,206 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Newa' (NotoSansNewa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,207 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,207 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Pahawh Hmong' (NotoSansPahawhHmong-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,208 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cham' (NotoSansCham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,208 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Sanskrit' (TiroSanskrit.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Devanagari' (SamaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,209 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,210 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,211 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,212 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,213 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,217 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhaina 2' (BalooBhainaOdia.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,218 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Devanagari Hindi' (TiroHindi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,218 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Devanagari' (OctoberCondensedDevanagari.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:47:24,219 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tifinagh' (NotoSansTifinagh-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,219 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Carian' (NotoSansCarian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,220 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,220 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Kannada' (SamaKannada.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,221 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,222 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,222 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Malayalam' (SamaMalayalam.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,222 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Mongolian' (NotoSansMongolian-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,223 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2021-04-12 01:47:24,223 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF Compact' (SFCompact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tirhuta' (NotoSansTirhuta-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khojki' (NotoSansKhojki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,224 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Bangla' (TiroBangla.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,225 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Chettan' (BalooChettanMalayalam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,225 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Galvji' (Galvji.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,226 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.Arabic UI Text' (ArabicUIText.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,226 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,227 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,228 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Caucasian Albanian' (NotoSansCaucasianAlbanian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,235 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Thambi 2' (BalooThambiTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,236 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,236 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,237 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,237 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,238 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Serif Ahom' (NotoSerifAhom-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,238 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Siddham' (NotoSansSiddham-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,239 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Sundanese' (NotoSansSundanese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,239 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,240 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Bhaiksuki' (NotoSansBhaiksuki-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,240 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,241 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,241 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,242 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Mono' (luximr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,242 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,243 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Adlam' (NotoSansAdlam-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,243 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Marathi' (TiroMarathi.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,243 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal roman normal>) = 10.145
2021-04-12 01:47:24,244 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Vai' (NotoSansVai-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,244 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2021-04-12 01:47:24,245 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da' (BalooDaBangla-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,248 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Compressed Tamil' (OctoberCompressedTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,248 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:24,248 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kannada' (NotoSansKannada.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:24,249 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,249 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo 2' (Baloo-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,250 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2021-04-12 01:47:24,250 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,251 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,251 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,252 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,252 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,253 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Coptic' (NotoSansCoptic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,253 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,253 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMono.ttf) normal normal light normal>) = 10.24
2021-04-12 01:47:24,254 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Khudawadi' (NotoSansKhudawadi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,254 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,255 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal medium normal>) = 10.145
2021-04-12 01:47:24,255 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Thaana' (NotoSansThaana-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,256 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Osmanya' (NotoSansOsmanya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,256 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.SF NS Mono' (SFNSMonoItalic.ttf) italic normal light normal>) = 11.24
2021-04-12 01:47:24,256 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanunoo' (NotoSansHanunoo-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,257 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2021-04-12 01:47:24,258 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Sama Tamil' (SamaTamil.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,258 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,259 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,259 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Ctesiphon' (SyrCOMCtesiphon.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,260 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,261 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,261 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNS.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,262 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Lycian' (NotoSansLycian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,262 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,263 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Nabataean' (NotoSansNabataean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,263 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,264 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Malankara' (SyrCOMMalankara.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,264 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Tamma' (BalooTammaKannada-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,265 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,265 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalem.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,265 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta' (Mukta-Devanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,266 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,266 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,267 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2021-04-12 01:47:24,267 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,268 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hanifi Rohingya' (NotoSansHanifiRohingya-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,268 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,269 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,270 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Cuneiform' (NotoSansCuneiform-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,270 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,271 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Paaji' (BalooPaajiGurmukhi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,271 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardinBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,272 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Buginese' (NotoSansBuginese-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,272 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,273 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mukta Mahee' (MuktaMahee.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,273 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,274 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Marchen' (NotoSansMarchen-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,274 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo' (Baloo-Devanagari.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,275 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Goha-Tibeb Zemen' (GohaTibebZemen.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,276 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,276 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Imperial Aramaic' (NotoSansImperialAramaic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,276 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:47:24,277 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,278 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica Neue' (HelveticaNeue.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,278 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,279 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal book normal>) = 10.05
2021-04-12 01:47:24,279 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,279 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Yi' (NotoSansYi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,280 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,281 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:24,281 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Kannada' (TiroKannada.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,282 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Shavian' (NotoSansShavian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,282 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Manichaean' (NotoSansManichaean-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,283 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kayah Li' (NotoSansKayahLi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,283 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Italic' (NotoSansOldItalic-Regular.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:47:24,284 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,284 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-12 01:47:24,285 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,285 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Brahmi' (NotoSansBrahmi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,286 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo TurAbdin' (SyrCOMTurAbdin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,286 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Estrangelo Quenneshrin' (SyrCOMQenNeshrin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,287 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,287 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirri.ttf) oblique normal 400 normal>) = 11.05
2021-04-12 01:47:24,288 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,288 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old Turkic' (NotoSansOldTurkic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,289 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tagbanwa' (NotoSansTagbanwa-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,289 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,290 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tiro Tamil' (TiroTamil.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,290 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,290 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-12 01:47:24,291 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSItalic.ttf) italic normal regular normal>) = 11.05
2021-04-12 01:47:24,291 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Hatran' (NotoSansHatran-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,292 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Kaithi' (NotoSansKaithi-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,292 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,293 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Glagolitic' (NotoSansGlagolitic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,293 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,294 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Adelle Sans Devanagari' (AdelleSans.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,294 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Helvetica' (Helvetica.ttc) normal normal 400 normal>) = 7.322727272727273
2021-04-12 01:47:24,295 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai' (BalooBhai-Gujarati.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,295 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'October Condensed Tamil' (OctoberCondensedTamil.ttc) normal normal regular condensed>) = 10.25
2021-04-12 01:47:24,296 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,296 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,297 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Ugaritic' (NotoSansUgaritic-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,297 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Da 2' (BalooDaBangla.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,298 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'East Syriac Adiabene' (SyrCOMAdiabene.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,299 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,299 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Baloo Bhai 2' (BalooBhaiGujarati.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,300 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2021-04-12 01:47:24,301 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,302 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,302 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Modak' (Modak-Devanagari.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,302 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font '.New York' (NewYork.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,303 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Lava Devanagari' (LavaDevanagari.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,303 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal black normal>) = 10.525
2021-04-12 01:47:24,304 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Jerusalem' (SyrCOMJerusalemItalic.otf) italic normal 400 normal>) = 11.05
2021-04-12 01:47:24,304 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirbi.ttf) oblique normal 700 normal>) = 11.335
2021-04-12 01:47:24,304 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,305 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,305 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,306 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Linear B' (NotoSansLinearB-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,306 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,307 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,307 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Sans' (luxisb.ttf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,307 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal roman normal>) = 11.145
2021-04-12 01:47:24,308 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Tai Le' (NotoSansTaiLe-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,309 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Mardin' (SyrCOMMardin.otf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,309 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Oriya' (NotoSansOriya.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,309 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,309 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-12 01:47:24,310 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Old North Arabian' (NotoSansOldNorthArabian-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,310 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Serto Urhoy' (SyrCOMUrhoyBold.otf) normal normal 700 normal>) = 10.335
2021-04-12 01:47:24,311 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal roman normal>) = 10.145
2021-04-12 01:47:24,311 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,311 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Luxi Serif' (luxirr.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,312 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noto Sans Duployan' (NotoSansDuployan-Regular.ttf) normal normal regular normal>) = 10.05
2021-04-12 01:47:24,312 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal light normal>) = 10.24
2021-04-12 01:47:24,313 [33567] DEBUG    matplotlib.font_manager:1258: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 400 normal>) = 10.05
2021-04-12 01:47:24,313 [33567] DEBUG    matplotlib.font_manager:1281: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2021-04-12 01:47:32,788 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822b017c50>
2021-04-12 01:47:32,791 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 01:47:32,791 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822b017c50>
2021-04-12 01:47:32,792 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 01:48:04,863 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2021-04-12 01:48:05,042 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2021-04-12 01:48:24,755 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 01:48:24,757 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 11
2021-04-12 01:48:24,757 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:11]
2021-04-12 01:48:24,768 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 11 (to 10 in part parser)
2021-04-12 01:48:24,768 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 01:48:49,430 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 01:48:49,431 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 11; new: 1
2021-04-12 01:48:49,432 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:11] new[1:1]
2021-04-12 01:48:49,433 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 01:48:49,433 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 01:49:51,736 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 01:49:51,737 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 01:49:51,737 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 01:49:51,738 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 01:49:51,738 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 01:49:51,990 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/typing.py
2021-04-12 01:49:52,043 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2021-04-12 02:01:20,733 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:01:20,742 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 6
2021-04-12 02:01:20,744 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:6]
2021-04-12 02:01:20,751 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 6 (to 5 in part parser)
2021-04-12 02:01:20,752 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:01:57,800 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:01:57,804 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 5
2021-04-12 02:01:57,804 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-12 02:01:57,805 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[3:3] new[1:3]
2021-04-12 02:01:57,807 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 4 to 5 (to 4 in part parser)
2021-04-12 02:01:57,807 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:6] new[5:5]
2021-04-12 02:01:57,808 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:02:52,952 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:02:52,953 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 9
2021-04-12 02:02:52,954 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-12 02:02:52,956 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 3 in part parser)
2021-04-12 02:02:52,957 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[delete] old[2:2] new[2:1]
2021-04-12 02:02:52,957 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[3:4] new[2:3]
2021-04-12 02:02:52,961 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 9 (to 8 in part parser)
2021-04-12 02:02:52,962 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:5] new[4:9]
2021-04-12 02:02:52,963 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:03:01,973 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:03:01,976 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 15
2021-04-12 02:03:01,976 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-12 02:03:01,977 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-12 02:03:01,988 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 14 (to 14 in part parser)
2021-04-12 02:03:01,989 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:15]
2021-04-12 02:03:01,989 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 15 to 16 (to 14 in part parser)
2021-04-12 02:03:01,990 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:05:00,077 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:05:00,080 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 15; new: 22
2021-04-12 02:05:00,080 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:13] new[1:13]
2021-04-12 02:05:00,081 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-12 02:05:00,094 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 22 (to 21 in part parser)
2021-04-12 02:05:00,095 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[14:15] new[14:22]
2021-04-12 02:05:00,095 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:05:29,062 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:05:29,064 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 22; new: 21
2021-04-12 02:05:29,065 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-12 02:05:29,066 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-12 02:05:29,078 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 21 (to 20 in part parser)
2021-04-12 02:05:29,078 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[5:6] new[5:5]
2021-04-12 02:05:29,079 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[7:21] new[6:20]
2021-04-12 02:05:29,079 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[22:22] new[21:21]
2021-04-12 02:05:29,079 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:05:29,092 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/__init__.py
2021-04-12 02:05:49,237 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:05:49,238 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 21; new: 21
2021-04-12 02:05:49,239 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:20] new[1:20]
2021-04-12 02:05:49,239 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-12 02:05:49,250 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 21 (to 20 in part parser)
2021-04-12 02:05:49,250 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[21:21] new[21:21]
2021-04-12 02:05:49,251 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:05:49,428 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/frame.py
2021-04-12 02:05:49,495 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/__init__.py
2021-04-12 02:05:49,774 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/generic.py
2021-04-12 02:05:49,915 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/base.py
2021-04-12 02:05:49,958 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/accessor.py
2021-04-12 02:05:50,082 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/indexing.py
2021-04-12 02:06:08,600 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:06:08,603 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 21; new: 21
2021-04-12 02:06:08,604 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:20] new[1:20]
2021-04-12 02:06:08,604 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[2:2] new[1:2]
2021-04-12 02:06:08,618 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 21 (to 20 in part parser)
2021-04-12 02:06:08,618 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[21:21] new[21:21]
2021-04-12 02:06:08,619 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:06:08,687 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/_search.py
2021-04-12 02:06:08,714 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/__init__.py
2021-04-12 02:06:08,770 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/base.py
2021-04-12 02:06:08,800 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/abc.py
2021-04-12 02:06:08,805 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
2021-04-12 02:06:08,839 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/utils/__init__.py
2021-04-12 02:06:08,880 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/utils/validation.py
2021-04-12 02:06:08,939 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/functools.py
2021-04-12 02:06:08,948 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/functools.pyi
2021-04-12 02:06:09,030 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_logistic.py
2021-04-12 02:06:09,064 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/__init__.py
2021-04-12 02:06:09,086 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/linear_model/_base.py
2021-04-12 02:06:09,166 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/model_selection/_split.py
2021-04-12 02:06:09,378 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/__init__.py
2021-04-12 02:06:09,497 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/core/series.py
2021-04-12 02:06:09,849 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/types.py
2021-04-12 02:06:09,869 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2021-04-12 02:06:37,408 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:06:37,409 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 21; new: 7
2021-04-12 02:06:37,410 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:21] new[1:7]
2021-04-12 02:06:37,411 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 7 (to 6 in part parser)
2021-04-12 02:06:37,411 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:06:58,534 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:06:58,537 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 8
2021-04-12 02:06:58,538 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-12 02:06:58,538 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:6] new[1:6]
2021-04-12 02:06:58,538 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:7] new[7:8]
2021-04-12 02:06:58,539 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 7 to 8 (to 7 in part parser)
2021-04-12 02:06:58,540 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:07:29,074 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:07:29,075 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 8; new: 12
2021-04-12 02:07:29,075 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:8] new[1:12]
2021-04-12 02:07:29,083 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 12 (to 11 in part parser)
2021-04-12 02:07:29,084 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:07:51,678 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:07:51,681 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 12; new: 1
2021-04-12 02:07:51,681 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:12] new[1:1]
2021-04-12 02:07:51,682 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:07:51,682 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:11:07,776 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:11:07,780 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:11:07,780 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:11:07,786 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:11:07,788 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:11:07,893 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pandas/_typing.py
2021-04-12 02:11:53,863 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:11:53,865 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-12 02:11:53,865 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-12 02:11:53,867 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-12 02:11:53,867 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:14:50,492 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:14:50,499 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-12 02:14:50,500 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-12 02:14:50,503 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:14:50,504 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:15:20,076 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:15:20,078 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:15:20,078 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:15:20,079 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:15:20,080 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:15:37,877 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:15:37,878 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:15:37,878 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:15:37,880 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:15:37,880 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:16:26,300 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:16:26,303 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-12 02:16:26,303 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-12 02:16:26,305 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-12 02:16:26,306 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:16:40,014 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:16:40,015 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2021-04-12 02:16:40,015 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-12 02:16:40,016 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-12 02:16:40,017 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2021-04-12 02:16:40,017 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2021-04-12 02:16:40,018 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:17:21,461 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822ccec198>
2021-04-12 02:17:21,463 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:17:21,463 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822ccec198>
2021-04-12 02:17:21,464 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:19:04,096 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:19:04,097 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2021-04-12 02:19:04,097 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2021-04-12 02:19:04,099 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:19:04,099 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:19:19,373 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f823f2e22e8>
2021-04-12 02:19:19,377 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:19:19,377 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f823f2e22e8>
2021-04-12 02:19:19,378 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:19:30,022 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:19:30,023 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:19:30,023 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:19:30,025 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:19:30,025 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:19:33,964 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822d0f23c8>
2021-04-12 02:19:33,965 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:19:33,965 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822d0f23c8>
2021-04-12 02:19:33,966 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:19:50,148 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822d7694a8>
2021-04-12 02:19:50,157 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:19:50,157 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f822d7694a8>
2021-04-12 02:19:50,158 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:19:55,270 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:19:55,270 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:19:55,271 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:19:55,271 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:19:55,272 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:19:58,541 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:19:58,541 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:19:58,542 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:19:58,544 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:19:58,544 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:20:13,913 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8236d2c400>
2021-04-12 02:20:13,913 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:20:13,914 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8236d2c400>
2021-04-12 02:20:13,914 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:20:21,553 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:20:21,556 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:20:21,556 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:20:21,558 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:20:21,559 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:21:02,487 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82370c66d8>
2021-04-12 02:21:02,490 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:21:02,492 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82370c66d8>
2021-04-12 02:21:02,492 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:21:14,686 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f823700a828>
2021-04-12 02:21:14,689 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:21:14,689 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f823700a828>
2021-04-12 02:21:14,690 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:21:21,375 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:21:21,378 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:21:21,378 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:21:21,379 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:21:21,380 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:21:24,518 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82374e8898>
2021-04-12 02:21:24,519 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:21:24,520 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82374e8898>
2021-04-12 02:21:24,520 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:21:29,592 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:21:29,592 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:21:29,592 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:21:29,594 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:21:29,594 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:21:33,002 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8237434908>
2021-04-12 02:21:33,003 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:21:33,003 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8237434908>
2021-04-12 02:21:33,003 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:21:37,935 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:21:37,936 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:21:37,936 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:21:37,938 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:21:37,938 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:21:41,181 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8238a7eb00>
2021-04-12 02:21:41,182 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:21:41,182 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8238a7eb00>
2021-04-12 02:21:41,182 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:21:51,351 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8237382978>
2021-04-12 02:21:51,352 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:21:51,352 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f8237382978>
2021-04-12 02:21:51,353 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:21:53,855 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:21:53,856 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:21:53,856 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:21:53,858 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:21:53,858 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:22:03,102 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82375b0b38>
2021-04-12 02:22:03,103 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:22:03,104 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82375b0b38>
2021-04-12 02:22:03,104 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:22:08,629 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:22:08,629 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:22:08,630 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:22:08,632 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:22:08,632 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:22:50,447 [33567] DEBUG    matplotlib.colorbar:607: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82388c3b38>
2021-04-12 02:22:50,450 [33567] DEBUG    matplotlib.colorbar:652: [JupyterRequire] Using auto colorbar locator on colorbar
2021-04-12 02:22:50,450 [33567] DEBUG    matplotlib.colorbar:653: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f82388c3b38>
2021-04-12 02:22:50,451 [33567] DEBUG    matplotlib.colorbar:822: [JupyterRequire] Setting pcolormesh
2021-04-12 02:23:36,517 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:23:36,519 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 5
2021-04-12 02:23:36,519 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:5]
2021-04-12 02:23:36,523 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-12 02:23:36,524 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:24:11,942 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:24:11,945 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 1
2021-04-12 02:24:11,945 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:5] new[1:1]
2021-04-12 02:24:11,946 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:24:11,946 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:24:34,405 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:24:34,410 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:24:34,411 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:24:34,411 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:24:34,412 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:24:38,705 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:24:38,706 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:24:38,706 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:24:38,707 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:24:38,707 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:24:45,794 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:24:45,795 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:24:45,795 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:24:45,796 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:24:45,796 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:24:55,436 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:24:55,437 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:24:55,437 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:24:55,438 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:24:55,439 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:25:20,507 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:25:20,509 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:25:20,510 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:25:20,510 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:25:20,511 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:25:33,156 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:25:33,159 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 3
2021-04-12 02:25:33,159 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:3]
2021-04-12 02:25:33,161 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2021-04-12 02:25:33,162 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:25:33,239 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/svm/__init__.py
2021-04-12 02:25:33,825 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/joblib/__init__.py
2021-04-12 02:25:34,848 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/pkg_resources/__init__.py
2021-04-12 02:25:34,872 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/jedi/third_party/typeshed/third_party/3/pkg_resources/__init__.pyi
2021-04-12 02:25:35,679 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/__init__.py
2021-04-12 02:25:35,754 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/numeric.py
2021-04-12 02:25:35,776 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/umath.py
2021-04-12 02:25:37,548 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/numerictypes.py
2021-04-12 02:25:37,602 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/fromnumeric.py
2021-04-12 02:25:37,658 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/arrayprint.py
2021-04-12 02:25:37,667 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/_asarray.py
2021-04-12 02:25:37,684 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/_ufunc_config.py
2021-04-12 02:25:37,740 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/records.py
2021-04-12 02:25:37,751 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/memmap.py
2021-04-12 02:25:37,764 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/function_base.py
2021-04-12 02:25:37,781 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/machar.py
2021-04-12 02:25:37,804 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/getlimits.py
2021-04-12 02:25:37,824 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/shape_base.py
2021-04-12 02:25:37,914 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/einsumfunc.py
2021-04-12 02:25:37,922 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/__init__.py
2021-04-12 02:25:37,937 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/type_check.py
2021-04-12 02:25:37,976 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/index_tricks.py
2021-04-12 02:25:38,111 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/function_base.py
2021-04-12 02:25:38,144 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/nanfunctions.py
2021-04-12 02:25:38,173 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/shape_base.py
2021-04-12 02:25:38,193 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/stride_tricks.py
2021-04-12 02:25:38,213 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/twodim_base.py
2021-04-12 02:25:38,233 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/ufunclike.py
2021-04-12 02:25:38,265 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/histograms.py
2021-04-12 02:25:38,308 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/polynomial.py
2021-04-12 02:25:38,358 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/utils.py
2021-04-12 02:25:38,446 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/arraysetops.py
2021-04-12 02:25:38,528 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/npyio.py
2021-04-12 02:25:38,552 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/financial.py
2021-04-12 02:25:38,577 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/arraypad.py
2021-04-12 02:25:38,593 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/lib/_version.py
2021-04-12 02:25:38,598 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/matrixlib/__init__.py
2021-04-12 02:25:38,620 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/matrixlib/defmatrix.py
2021-04-12 02:25:38,673 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/numpy/core/multiarray.py
2021-04-12 02:25:58,641 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:25:58,644 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 6
2021-04-12 02:25:58,644 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-12 02:25:58,645 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-12 02:25:58,648 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 6 (to 5 in part parser)
2021-04-12 02:25:58,649 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:6]
2021-04-12 02:25:58,649 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:26:37,361 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:26:37,364 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 9
2021-04-12 02:26:37,365 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:6] new[1:9]
2021-04-12 02:26:37,367 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 9 (to 8 in part parser)
2021-04-12 02:26:37,368 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:26:37,421 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/__init__.py
2021-04-12 02:26:37,592 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/matplotlib/pyplot.py
2021-04-12 02:27:25,716 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:27:25,717 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 3
2021-04-12 02:27:25,718 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:9] new[1:3]
2021-04-12 02:27:25,719 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 2 in part parser)
2021-04-12 02:27:25,720 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 3 (to 2 in part parser)
2021-04-12 02:27:25,720 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:27:34,560 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:27:34,561 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 6
2021-04-12 02:27:34,561 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2021-04-12 02:27:34,561 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:1] new[1:1]
2021-04-12 02:27:34,563 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 2 to 6 (to 5 in part parser)
2021-04-12 02:27:34,563 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[3:3] new[3:6]
2021-04-12 02:27:34,563 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:30:32,908 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:30:32,910 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 1
2021-04-12 02:30:32,910 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:6] new[1:1]
2021-04-12 02:30:32,911 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:30:32,911 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:31:10,414 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:31:10,415 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:31:10,415 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:31:10,416 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:31:10,416 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:31:39,813 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:31:39,814 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:31:39,814 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:31:39,815 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:31:39,815 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:32:13,975 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:32:13,978 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:32:13,978 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:32:13,979 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:32:13,980 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:33:10,383 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:33:10,384 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:33:10,384 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:33:10,386 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:33:10,387 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:34:48,507 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:34:48,512 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:34:48,512 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:34:48,521 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:34:48,522 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:35:17,780 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:35:17,781 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2021-04-12 02:35:17,782 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2021-04-12 02:35:17,785 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-12 02:35:17,786 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:35:42,784 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:35:42,785 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-12 02:35:42,785 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-12 02:35:42,785 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-12 02:35:42,787 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-12 02:35:42,787 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-12 02:35:42,787 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:44:22,535 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:44:22,539 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-12 02:44:22,539 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-12 02:44:22,541 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-12 02:44:22,543 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-12 02:44:22,544 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-12 02:44:22,544 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:44:38,877 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:44:38,879 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 4
2021-04-12 02:44:38,880 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2021-04-12 02:44:38,880 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:2] new[1:2]
2021-04-12 02:44:38,881 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 3 to 4 (to 3 in part parser)
2021-04-12 02:44:38,882 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[4:4] new[4:4]
2021-04-12 02:44:38,882 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:45:02,291 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:45:02,297 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2021-04-12 02:45:02,297 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2021-04-12 02:45:02,299 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:45:02,301 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:45:02,639 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:45:02,640 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:45:02,640 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:45:02,641 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:45:02,642 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:45:07,219 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:45:07,220 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:45:07,220 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:45:07,221 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:45:07,221 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:45:35,183 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:45:35,185 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:45:35,185 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:45:35,186 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:45:35,187 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:45:39,704 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:45:39,704 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:45:39,705 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:45:39,706 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:45:39,706 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:49:08,961 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:49:08,966 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 10
2021-04-12 02:49:08,966 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:10]
2021-04-12 02:49:08,975 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 10 (to 9 in part parser)
2021-04-12 02:49:08,976 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:49:15,514 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:49:15,517 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 10; new: 6
2021-04-12 02:49:15,517 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:5] new[1:5]
2021-04-12 02:49:15,518 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:4] new[1:4]
2021-04-12 02:49:15,519 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 5 to 5 (to 5 in part parser)
2021-04-12 02:49:15,519 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[6:10] new[6:6]
2021-04-12 02:49:15,520 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 6 (to 5 in part parser)
2021-04-12 02:49:15,520 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:49:22,613 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:49:22,613 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 6; new: 1
2021-04-12 02:49:22,614 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:6] new[1:1]
2021-04-12 02:49:22,615 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:49:22,615 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:49:30,431 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:49:30,431 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:49:30,432 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:49:30,433 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:49:30,433 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:49:39,687 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:49:39,690 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:49:39,690 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:49:39,691 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:49:39,691 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:49:55,162 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:49:55,163 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 10
2021-04-12 02:49:55,163 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:10]
2021-04-12 02:49:55,167 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 10 (to 9 in part parser)
2021-04-12 02:49:55,168 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:50:17,486 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:50:17,487 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 10; new: 1
2021-04-12 02:50:17,488 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:10] new[1:1]
2021-04-12 02:50:17,489 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:50:17,489 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:50:36,044 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:50:36,045 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:50:36,046 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:50:36,046 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:50:36,047 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:50:43,354 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:50:43,355 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:50:43,355 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:50:43,356 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:50:43,356 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:51:28,472 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:51:28,475 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 02:51:28,475 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 02:51:28,476 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:51:28,477 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:52:59,410 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:52:59,413 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 9
2021-04-12 02:52:59,413 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:9]
2021-04-12 02:52:59,415 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 9 (to 8 in part parser)
2021-04-12 02:52:59,416 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:53:50,497 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:53:50,500 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 1
2021-04-12 02:53:50,501 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:9] new[1:1]
2021-04-12 02:53:50,501 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 02:53:50,502 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:59:18,093 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:59:18,096 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 9
2021-04-12 02:59:18,096 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:9]
2021-04-12 02:59:18,105 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 9 (to 8 in part parser)
2021-04-12 02:59:18,105 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 02:59:18,121 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/seaborn/__init__.py
2021-04-12 02:59:28,883 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 02:59:28,884 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-12 02:59:28,884 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-12 02:59:28,885 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-12 02:59:28,886 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 9 (to 8 in part parser)
2021-04-12 02:59:28,887 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-12 02:59:28,887 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:00:11,853 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:00:11,856 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 2
2021-04-12 03:00:11,857 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:9] new[1:2]
2021-04-12 03:00:11,858 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-12 03:00:11,858 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:00:30,421 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:00:30,422 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-12 03:00:30,422 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-12 03:00:30,423 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:00:30,424 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:00:58,993 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:00:58,996 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 10
2021-04-12 03:00:58,996 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:10]
2021-04-12 03:00:59,003 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 10 (to 9 in part parser)
2021-04-12 03:00:59,003 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:01:25,377 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:01:25,378 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 10; new: 1
2021-04-12 03:01:25,378 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:10] new[1:1]
2021-04-12 03:01:25,379 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:01:25,379 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:15:06,569 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:15:06,575 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 03:15:06,575 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 03:15:06,577 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:15:06,577 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:15:07,127 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:15:07,128 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 03:15:07,128 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 03:15:07,128 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:15:07,128 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:16:17,687 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:16:17,688 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 03:16:17,688 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 03:16:17,690 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:16:17,690 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:16:26,635 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:16:26,636 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2021-04-12 03:16:26,636 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2021-04-12 03:16:26,637 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:16:26,637 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:16:36,357 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:16:36,358 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 17
2021-04-12 03:16:36,358 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:17]
2021-04-12 03:16:36,371 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 17 (to 16 in part parser)
2021-04-12 03:16:36,371 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:16:44,415 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:16:44,418 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 17; new: 13
2021-04-12 03:16:44,418 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:12] new[1:12]
2021-04-12 03:16:44,421 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:12] new[1:12]
2021-04-12 03:16:44,421 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[13:17] new[13:13]
2021-04-12 03:16:44,422 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 13 to 13 (to 12 in part parser)
2021-04-12 03:16:44,422 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:16:44,449 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/neighbors/__init__.py
2021-04-12 03:18:53,124 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:18:53,125 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 13; new: 2
2021-04-12 03:18:53,126 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[delete] old[1:9] new[1:0]
2021-04-12 03:18:53,126 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[10:10] new[1:1]
2021-04-12 03:18:53,129 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-12 03:18:53,129 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[11:13] new[2:2]
2021-04-12 03:18:53,129 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:19:10,307 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:19:10,308 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-12 03:19:10,308 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-12 03:19:10,309 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:19:10,309 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:19:17,255 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:19:17,255 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 5
2021-04-12 03:19:17,255 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:5]
2021-04-12 03:19:17,257 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2021-04-12 03:19:17,257 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:19:48,895 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:19:48,897 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 7
2021-04-12 03:19:48,897 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:4] new[1:4]
2021-04-12 03:19:48,899 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 7 (to 6 in part parser)
2021-04-12 03:19:48,899 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[insert] old[5:4] new[5:6]
2021-04-12 03:19:48,899 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[5:5] new[7:7]
2021-04-12 03:19:48,900 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:20:22,738 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:20:22,738 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 12
2021-04-12 03:20:22,739 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:6] new[1:6]
2021-04-12 03:20:22,745 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 12 (to 11 in part parser)
2021-04-12 03:20:22,745 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[7:7] new[7:12]
2021-04-12 03:20:22,745 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:20:26,727 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:20:26,727 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 12; new: 12
2021-04-12 03:20:26,727 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:11] new[1:11]
2021-04-12 03:20:26,732 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 12 (to 11 in part parser)
2021-04-12 03:20:26,732 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[12:12] new[12:12]
2021-04-12 03:20:26,732 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:20:35,525 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:20:35,526 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 12; new: 17
2021-04-12 03:20:35,526 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:11] new[1:11]
2021-04-12 03:20:35,532 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 17 (to 16 in part parser)
2021-04-12 03:20:35,532 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[12:12] new[12:17]
2021-04-12 03:20:35,532 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:21:14,978 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:21:14,980 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 17; new: 1
2021-04-12 03:21:14,980 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:17] new[1:1]
2021-04-12 03:21:14,981 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:21:14,981 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:21:44,585 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:21:44,588 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2021-04-12 03:21:44,588 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2021-04-12 03:21:44,589 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-12 03:21:44,589 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:21:53,049 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:21:53,050 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 15
2021-04-12 03:21:53,050 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:1] new[1:1]
2021-04-12 03:21:53,055 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 15 (to 14 in part parser)
2021-04-12 03:21:53,055 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[2:2] new[2:15]
2021-04-12 03:21:53,055 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:22:06,817 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:22:06,817 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 15; new: 2
2021-04-12 03:22:06,818 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:15] new[1:2]
2021-04-12 03:22:06,819 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2021-04-12 03:22:06,819 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:22:50,671 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:22:50,671 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2021-04-12 03:22:50,672 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2021-04-12 03:22:50,672 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2021-04-12 03:22:50,672 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:24:57,683 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:24:57,684 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2021-04-12 03:24:57,684 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2021-04-12 03:24:57,687 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-12 03:24:57,687 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:24:57,767 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/sklearn/neighbors/_base.py
2021-04-12 03:24:59,648 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/__init__.py
2021-04-12 03:24:59,701 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/base.py
2021-04-12 03:24:59,712 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/csr.py
2021-04-12 03:24:59,719 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/csc.py
2021-04-12 03:24:59,896 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/lil.py
2021-04-12 03:24:59,915 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/dok.py
2021-04-12 03:24:59,935 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/coo.py
2021-04-12 03:24:59,949 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/dia.py
2021-04-12 03:25:00,090 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/bsr.py
2021-04-12 03:25:00,141 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/construct.py
2021-04-12 03:25:00,145 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/extract.py
2021-04-12 03:25:00,151 [33567] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /Users/sachin/opt/anaconda3/envs/capstone/lib/python3.6/site-packages/scipy/sparse/_matrix_io.py
2021-04-12 03:27:52,490 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:27:52,496 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 9
2021-04-12 03:27:52,496 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:4] new[1:9]
2021-04-12 03:27:52,503 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 9 (to 8 in part parser)
2021-04-12 03:27:52,503 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:28:27,153 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:28:27,154 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 9
2021-04-12 03:28:27,154 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-12 03:28:27,155 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-12 03:28:27,155 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 9 (to 8 in part parser)
2021-04-12 03:28:27,156 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:9]
2021-04-12 03:28:27,156 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:30:16,104 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:30:16,105 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 9; new: 10
2021-04-12 03:30:16,106 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[equal] old[1:8] new[1:8]
2021-04-12 03:30:16,106 [33567] DEBUG    parso.python.diff:380: [JupyterRequire] copy old[1:5] new[1:5]
2021-04-12 03:30:16,107 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 6 to 9 (to 9 in part parser)
2021-04-12 03:30:16,108 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[9:9] new[9:10]
2021-04-12 03:30:16,108 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 10 to 10 (to 9 in part parser)
2021-04-12 03:30:16,109 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2021-04-12 03:30:32,638 [33567] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2021-04-12 03:30:32,639 [33567] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 10; new: 4
2021-04-12 03:30:32,639 [33567] DEBUG    parso.python.diff:297: [JupyterRequire] -> code[replace] old[1:10] new[1:4]
2021-04-12 03:30:32,641 [33567] DEBUG    parso.python.diff:425: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2021-04-12 03:30:32,641 [33567] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
